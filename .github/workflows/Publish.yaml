---
name: Publish

on: workflow_call

jobs:
  Publish_PIP:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Branch Name
        run: |
          branchname=$(git rev-parse --abbrev-ref HEAD)
          echo "branchname=$branchname" >> "$GITHUB_ENV"
      - name: Determine if this is a release branch
        run: |
          isrrelease=0
          if [[ $branchname =~ v[0-9]\. ]]; then
            isrrelease=1
          fi
          echo "isrrelease=$isrrelease" >> "$GITHUB_ENV"
      - name: Check Milestone
        # if: ${{ env.isrrelease == 1 }}
        shell: python
        # https://api.github.com/repos/damies13/rfswarm/milestones
        run: |
          import os
          import requests
          branchname = os.getenv("branchname")
          print("branchname:", branchname)
          branchname = 'v1.3.0'

          milestones = requests.get('https://api.github.com/repos/damies13/rfswarm/milestones')
          dopublish = 0
          for ms in milestones.json():
            print(ms['title'])
            if ms['title'] == branchname:
              print(ms)
              open_issues = ms['open_issues']
              closed_issues = ms['closed_issues']
              total_issues = open_issues + closed_issues
              print('open', open_issues, 'closed', closed_issues, 'total', total_issues)
              pct = (closed_issues/total_issues) * 100
              print(pct, "%")
              if pct == 100:
                dopublish = 1
          print('dopublish', dopublish)

          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as myfile:
            myfile.write("dopublish={}".format(dopublish))

      - name: Echo Vars
        run: |
          echo numver: ${{ env.branchname }}
          echo numver: ${{ env.isrrelease }}
          echo version: ${{ env.dopublish }}
      - name: Apt Update
        if: ${{ env.isrrelease == 1 }}
        run: |
          sudo apt update -y
      - name: Setup Python
        if: ${{ env.isrrelease == 1 }}
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: PIP Install
        if: ${{ env.isrrelease == 1 }}
        run: pip install --upgrade build setuptools twine wheel
      - name: Download packages to dist
        if: ${{ env.isrrelease == 1 }}
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Show Dist UM
        if: ${{ env.isrrelease == 1 && matrix.platform != 'windows-latest' }}
        run: |
          ls -la dist
      - name: Show Dist W
        if: ${{ env.isrrelease == 1 && matrix.platform == 'windows-latest' }}
        run: |
          dir dist

      # Still need to have a check all the milestones are complete
      # - name: Do Publish
      #   if: ${{ env.isrrelease == 1 }}
      #   run: |
      #     echo python3 -m twine upload -u USERNAME -p PASSWORD dist/rfswarm*
