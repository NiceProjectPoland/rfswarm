---
name: Package

on: push

jobs:
  Package_For_PIP:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python: ['3.x']
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: "Echo Vars"
        run: |
          echo matrix.platform: ${{ matrix.platform }}
          echo matrix.python: ${{ matrix.python }}
      - name: Git fetch
        run: git fetch --prune --unshallow
      - name: Get Version Number
        run: |
          datestr=$(date +"%Y%m%d%H%M%S")
          echo $datestr
          branchname=$(git rev-parse --abbrev-ref HEAD)
          echo $branchname
          currrelease=$(git describe --abbrev=0 --tags)
          echo $currrelease
          isrrelease=0
          if [[ "$currversion" =~ v[0-9]\. ]]; then
            isrrelease=1
            currversion=$branchname
          else
            currversion=$currrelease
          fi
          echo $isrrelease
      - name: Set Version Number
        run: |
          verparts=($(echo $currversion | tr "-" "\n"))
          len=${#verparts[@]}
          if [ $len -gt 1 ]; then
            txtversion=${verparts[0]}-${verparts[1]}
          else
            txtversion=${verparts[0]}
          fi
          numver=$(echo $currversion | sed -E 's/v([^-]*)/\1/')
          if [ $isrrelease ]; then
            numver=$numver.dev$datestr
          fi
        	echo numver\: $numver
          version=$numver
        	echo version\: $version

      # - name: Get Version Number Old
      #   run: |
      #     currversion=$(git rev-parse --abbrev-ref HEAD)
      #     echo $currversion
      #     if [[ "$currversion" =~ v[0-9]\. ]]; then
      #       verparts=($(echo $currversion | tr "-" "\n"))
      #       len=${#verparts[@]}
      #       if [ $len -gt 1 ]; then
      #         txtversion=${verparts[0]}-${verparts[1]}
      #       else
      #         txtversion=${verparts[0]}
      #       fi
      #       numver=$(echo $currversion | sed -E 's/v([^-]*)/\1/')
      #     	echo numver\: $numver
      #       version=$numver
      #     	echo version\: $version
      #     fi
      - name: Update Version Number in python files
        run: |
          cwd
          echo sed -i -e "s/version = \"[^\"]*\"/version = \"${version}\"/" $(find . -name "*.py")
          sed -i -e "s/version = \"[^\"]*\"/version = \"${version}\"/" $(find . -name "*.py")
          echo sed -i -e "s/#    Version .*/#    Version ${version}/" $(find . -name "*.py")
          sed -i -e "s/#    Version .*/#    Version ${version}/" $(find . -name "*.py")
