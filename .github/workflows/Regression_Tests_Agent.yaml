---
name: Regression Tests - Agent

on: workflow_call

jobs:
  Agent:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Pip Update
        run: python -m pip install --upgrade pip

      - name: Update Robot Tag
        shell: python
        run: |
          import os
          tag = "${{ matrix.platform }}"
          tagarr = tag.split("-")
          tag = "{}-latest".format(tagarr[0])

          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as myfile:
            myfile.write("tag={}\n".format(tag))

      - name: Download packages to dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Show Dist UM
        if: ${{ matrix.platform != 'windows-latest' }}
        run: |
          ls -la dist
      - name: Show Dist W
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          dir dist
      - name: Install Agent from dist UM
        if: ${{ matrix.platform != 'windows-latest' }}
        run: pip install rfswarm_agent-*.whl
        working-directory: ./dist
      - name: Install Agent from dist W
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: cmd
        run: for %%f in (rfswarm_agent-*.whl) do pip install %%f
        working-directory: ./dist
      - name: Install Manager from dist (for testing Issues) UM
        if: ${{ matrix.platform != 'windows-latest' }}
        run: pip install rfswarm_manager-*.whl
        working-directory: ./dist
      - name: Install Manager from dist (for testing Issues) W
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: cmd
        run: for %%f in (rfswarm_manager-*.whl) do pip install %%f
        working-directory: ./dist
      - run: pip install -r Tests/Regression/Agent/pip_requirements.txt

      - name: Robot Framework
        run: >
          robot --listener GHAReports
          --include ${{ env.tag }}
          --outputdir Tests/Regression/Agent/Logs/${{ matrix.platform }}_${{ matrix.python }}
          Tests/Regression/Agent

      - name: Upload XML artifact
        uses: actions/upload-artifact@v3 # In v3, Artifacts are mutable
        with:
          name: agent-XMLdata
          path: Tests/Regression/Agent/Logs/${{ matrix.platform }}_${{ matrix.python }}/output.xml
          retention-days: 3

      - name: Archive Agent Logs
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Agent-${{ matrix.platform }}-${{ matrix.python }}
          path: Tests/Regression/Agent/Logs/${{ matrix.platform }}_${{ matrix.python }}
          retention-days: 15

      - name: Archive Agent Logs (longer retention if failed)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Agent-${{ matrix.platform }}-${{ matrix.python }}
          path: Tests/Regression/Agent/Logs/${{ matrix.platform }}_${{ matrix.python }}
          retention-days: 90

  # Collect-xml-artifacts:
  #   runs-on: ubuntu-latest
  #   needs: Agent
  #   steps:
  #     - name: Download XML data artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: agent-XMLdata
  #         path: collected
  #     - run: ls -R collected

  #     - name: Upload merged XMLdata
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: agent-XMLdata-ALL
  #         path: collected/**/output.xml

  Generate-report:
    needs: Agent
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Pip Update
        run: python -m pip install --upgrade pip
      - name: Install Dashboard
        run: pip install robotframework-dashboard

      - name: Download XML data artifact
        uses: actions/download-artifact@v3
        with:
          name: agent-XMLdata
          path: collected
      - run: ls -R collected

      - name: Build Dashboard
        run: >
          robotdashboard
          -f collected
          -n dashboard/Agent/index.html

      - name: Deploy subpage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dashboard/Agent
          destination_dir: Agent
          keep_files: true
