<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.10 on linux)" generated="20230307 07:17:17.742" rpa="false" schemaversion="3">
<suite id="s1" name="Manager" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230307 07:17:17.769" endtime="20230307 07:17:17.770"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230307 07:17:17.770" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230307 07:17:17.770" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230307 07:17:17.770" endtime="20230307 07:17:17.770"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230307 07:17:17.771" level="INFO" html="true">File '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/*.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/*.png&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20230307 07:17:17.770" endtime="20230307 07:17:17.771"/>
</kw>
<status status="PASS" starttime="20230307 07:17:17.769" endtime="20230307 07:17:17.771"/>
</kw>
<test id="s1-s1-t1" name="Random Offset" line="7">
<kw name="Evaluate" library="BuiltIn">
<var>${random}</var>
<arg>random.randint(0, 60)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230307 07:17:17.772" level="INFO">${random} = 14</msg>
<status status="PASS" starttime="20230307 07:17:17.772" endtime="20230307 07:17:17.772"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${random}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230307 07:17:31.772" level="INFO">Slept 14 seconds</msg>
<status status="PASS" starttime="20230307 07:17:17.772" endtime="20230307 07:17:31.772"/>
</kw>
<doc>This just prevents all the test runners doing git push at the same time</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230307 07:17:17.771" endtime="20230307 07:17:31.773"/>
</test>
<test id="s1-s1-t2" name="Manager Version" line="13">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230307 07:17:31.776" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230307 07:17:33.468" level="INFO">${result} = Robot Framework Swarm: Manager 
	Version 1.1.0 </msg>
<status status="PASS" starttime="20230307 07:17:31.774" endtime="20230307 07:17:33.468"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230307 07:17:33.468" endtime="20230307 07:17:33.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230307 07:17:33.468" endtime="20230307 07:17:33.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Manager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230307 07:17:33.469" endtime="20230307 07:17:33.469"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230307 07:17:31.773" endtime="20230307 07:17:33.469"/>
</test>
<test id="s1-s1-t3" name="Manager Help" line="20">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230307 07:17:33.470" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230307 07:17:34.121" level="INFO">${result} = Robot Framework Swarm: Manager 
	Version 1.1.0 
usage: rfswarm.py [-h] [-g DEBUG] [-v] [-i INI] [-s SCENARIO] [-r] [-a AGENTS]
                  [-n] [-t STARTTIME] [-d DIR] [-e IPADDRESS] [-p PORT]

...</msg>
<status status="PASS" starttime="20230307 07:17:33.470" endtime="20230307 07:17:34.121"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230307 07:17:34.121" endtime="20230307 07:17:34.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>IPADDRESS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230307 07:17:34.121" endtime="20230307 07:17:34.122"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230307 07:17:33.469" endtime="20230307 07:17:34.122"/>
</test>
<status status="PASS" starttime="20230307 07:17:17.761" endtime="20230307 07:17:34.122"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/GUI_Basic.robot">
<test id="s1-s2-t1" name="Open GUI" line="33">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230307 07:17:34.301" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230307 07:17:34.300" endtime="20230307 07:17:34.301"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230307 07:17:34.301" endtime="20230307 07:17:34.301"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>alias=Manager</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230307 07:17:34.302" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py</msg>
<msg timestamp="20230307 07:17:34.306" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230307 07:17:34.301" endtime="20230307 07:17:34.306"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230307 07:17:34.307" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230307 07:17:34.306" endtime="20230307 07:17:34.307"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230307 07:18:34.308" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20230307 07:17:34.307" endtime="20230307 07:18:34.308"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230307 07:18:34.308" endtime="20230307 07:18:34.309"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230307 07:18:34.309" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/Manager.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/Manager.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230307 07:18:34.309" endtime="20230307 07:18:34.439"/>
</kw>
<tag>ubuntu-latest</tag>
<status status="PASS" starttime="20230307 07:17:34.299" endtime="20230307 07:18:34.439"/>
</test>
<test id="s1-s2-t2" name="Select Run Tab" line="43">
<kw name="Click Run Tab">
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>manager_${platform}_run_tab.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230307 07:18:34.441" level="INFO">${img} = manager_ubuntu_run_tab.png</msg>
<status status="PASS" starttime="20230307 07:18:34.441" endtime="20230307 07:18:34.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230307 07:18:34.441" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager</msg>
<status status="PASS" starttime="20230307 07:18:34.441" endtime="20230307 07:18:34.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230307 07:18:34.441" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Images/file_method</msg>
<status status="PASS" starttime="20230307 07:18:34.441" endtime="20230307 07:18:34.441"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=10</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230307 07:18:34.715" level="INFO">Image "manager_ubuntu_run_tab.png" found at (67, 72)</msg>
<status status="PASS" starttime="20230307 07:18:34.441" endtime="20230307 07:18:34.715"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230307 07:18:34.979" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Images/file_method/manager_ubuntu_run_tab.png" found at Box(left=52, top=51, width=31, height=42)</msg>
<msg timestamp="20230307 07:18:34.980" level="INFO">@{coordinates} = [ 67 | 72 ]</msg>
<status status="PASS" starttime="20230307 07:18:34.715" endtime="20230307 07:18:34.980"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230307 07:18:35.242" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Images/file_method/manager_ubuntu_run_tab.png" found at Box(left=52, top=51, width=31, height=42)</msg>
<msg timestamp="20230307 07:18:35.242" level="INFO">Clicking image "manager_ubuntu_run_tab.png" in position (67, 72)</msg>
<status status="PASS" starttime="20230307 07:18:34.980" endtime="20230307 07:18:35.346"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230307 07:18:35.346" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/Manager.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/ubuntu-latest_3.10/Manager.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230307 07:18:35.346" endtime="20230307 07:18:35.468"/>
</kw>
<status status="PASS" starttime="20230307 07:18:34.440" endtime="20230307 07:18:35.469"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230307 07:18:34.440" endtime="20230307 07:18:35.469"/>
</test>
<test id="s1-s2-t3" name="Close GUI" line="47">
<kw name="Press Combination" library="ImageHorizonLibrary">
<arg>Key.esc</arg>
<doc>Press given keyboard keys.</doc>
<status status="PASS" starttime="20230307 07:18:35.470" endtime="20230307 07:18:35.574"/>
</kw>
<kw name="Press Combination" library="ImageHorizonLibrary">
<arg>x</arg>
<arg>Key.ctrl</arg>
<doc>Press given keyboard keys.</doc>
<status status="PASS" starttime="20230307 07:18:35.574" endtime="20230307 07:18:35.678"/>
</kw>
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230307 07:18:35.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230307 07:18:36.781" level="INFO">Process completed.</msg>
<msg timestamp="20230307 07:18:36.781" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230307 07:18:35.678" endtime="20230307 07:18:36.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230307 07:18:36.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230307 07:18:36.782" endtime="20230307 07:18:36.783"/>
</kw>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230307 07:18:35.469" endtime="20230307 07:18:36.783"/>
</test>
<status status="PASS" starttime="20230307 07:17:34.123" endtime="20230307 07:18:36.783"/>
</suite>
<status status="PASS" starttime="20230307 07:17:17.743" endtime="20230307 07:18:36.784"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">macos-latest</stat>
<stat pass="6" fail="0" skip="0">ubuntu-latest</stat>
<stat pass="5" fail="0" skip="0">windows-latest</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Manager">Manager</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="CommandLine">Manager.CommandLine</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="GUI Basic">Manager.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
