<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.7.12 on darwin)" generated="20220222 21:14:14.200" rpa="false" schemaversion="2">
<suite id="s1" name="Manager" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 21:14:14.240" endtime="20220222 21:14:14.241"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20220222 21:14:14.242" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 21:14:14.242" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220222 21:14:14.241" endtime="20220222 21:14:14.242"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}sikuli_captured${/}*.*</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20220222 21:14:14.243" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/sikuli_captured/sikuliximage-1645520251259.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/sikuli_captured/sikuliximage-1645520251259.png&lt;/a&gt;'.</msg>
<msg timestamp="20220222 21:14:14.243" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/sikuli_captured/sikuliximage-1645520313781.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/sikuli_captured/sikuliximage-1645520313781.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220222 21:14:14.242" endtime="20220222 21:14:14.243"/>
</kw>
<status status="PASS" starttime="20220222 21:14:14.240" endtime="20220222 21:14:14.243"/>
</kw>
<test id="s1-s1-t1" name="Random Offset">
<kw name="Evaluate" library="BuiltIn">
<var>${random}</var>
<arg>random.randint(0, 60)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220222 21:14:14.244" level="INFO">${random} = 20</msg>
<status status="PASS" starttime="20220222 21:14:14.244" endtime="20220222 21:14:14.244"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${random}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220222 21:14:34.261" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20220222 21:14:14.245" endtime="20220222 21:14:34.261"/>
</kw>
<doc>This just prevents all the test runners doing git push at the same time</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 21:14:14.244" endtime="20220222 21:14:34.262"/>
</test>
<test id="s1-s1-t2" name="Manager Version">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20220222 21:14:34.268" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 21:14:46.057" level="INFO">${result} = Unable to revert mtime: /Library/Fonts
Robot Framework Swarm: Manager 
	Version 1.1.0 </msg>
<status status="PASS" starttime="20220222 21:14:34.263" endtime="20220222 21:14:46.057"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 21:14:46.058" endtime="20220222 21:14:46.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 21:14:46.058" endtime="20220222 21:14:46.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Manager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 21:14:46.059" endtime="20220222 21:14:46.059"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 21:14:34.262" endtime="20220222 21:14:46.059"/>
</test>
<test id="s1-s1-t3" name="Manager Help">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20220222 21:14:46.063" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 21:14:47.514" level="INFO">${result} = Robot Framework Swarm: Manager 
	Version 1.1.0 
usage: rfswarm.py [-h] [-g DEBUG] [-v] [-i INI] [-s SCENARIO] [-r] [-a AGENTS]
                  [-n] [-t STARTTIME] [-d DIR] [-e IPADDRESS] [-p PORT]

...</msg>
<status status="PASS" starttime="20220222 21:14:46.060" endtime="20220222 21:14:47.514"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 21:14:47.514" endtime="20220222 21:14:47.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>IPADDRESS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 21:14:47.515" endtime="20220222 21:14:47.515"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 21:14:46.060" endtime="20220222 21:14:47.516"/>
</test>
<status status="PASS" starttime="20220222 21:14:14.229" endtime="20220222 21:14:47.517"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/GUI_Basic.robot">
<kw name="Sikili Setup" type="SETUP">
<kw name="Add Image Path" library="SikuliLibrary">
<arg>${IMAGE_DIR}</arg>
<doc>Add image path</doc>
<status status="PASS" starttime="20220222 21:14:52.781" endtime="20220222 21:14:52.804"/>
</kw>
<status status="PASS" starttime="20220222 21:14:52.781" endtime="20220222 21:14:52.804"/>
</kw>
<test id="s1-s2-t1" name="GUI Runs and Closes">
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${EXECDIR}${/}rfswarm_manager${/}rfswarm.py</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>alias=Manager</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20220222 21:14:52.806" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_manager/rfswarm.py -g 5</msg>
<status status="PASS" starttime="20220222 21:14:52.805" endtime="20220222 21:14:52.811"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220222 21:15:52.845" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20220222 21:14:52.812" endtime="20220222 21:15:52.845"/>
</kw>
<kw name="Capture Screen" library="SikuliLibrary">
<doc>Capture whole screen, file name is returned</doc>
<msg timestamp="20220222 21:15:54.292" level="INFO" html="true">&lt;img src='sikuli_captured/sikuliximage-1645564553705.png'/&gt;</msg>
<status status="PASS" starttime="20220222 21:15:52.845" endtime="20220222 21:15:54.293"/>
</kw>
<tag>macos-latest</tag>
<status status="PASS" starttime="20220222 21:14:52.804" endtime="20220222 21:15:54.293"/>
</test>
<kw name="Sikili Teardown" type="TEARDOWN">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>Manager</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20220222 21:15:54.295" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20220222 21:15:54.295" endtime="20220222 21:15:54.295"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>Manager</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20220222 21:15:54.296" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20220222 21:15:56.576" level="INFO">Process completed.</msg>
<msg timestamp="20220222 21:15:56.576" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20220222 21:15:54.295" endtime="20220222 21:15:56.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 21:15:56.577" level="INFO">&lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20220222 21:15:56.576" endtime="20220222 21:15:56.577"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${stdout}</var>
<arg>${OUTPUT DIR}${/}stdout.txt</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 21:15:56.577" level="INFO" html="true">Getting file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 21:15:56.577" level="INFO">${stdout} = </msg>
<status status="PASS" starttime="20220222 21:15:56.577" endtime="20220222 21:15:56.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 21:15:56.578" level="INFO"/>
<status status="PASS" starttime="20220222 21:15:56.578" endtime="20220222 21:15:56.578"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${stderr}</var>
<arg>${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 21:15:56.578" level="INFO" html="true">Getting file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Manager/Logs/macos-latest_3.7/stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 21:15:56.579" level="INFO">${stderr} = </msg>
<status status="PASS" starttime="20220222 21:15:56.578" endtime="20220222 21:15:56.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 21:15:56.579" level="INFO"/>
<status status="PASS" starttime="20220222 21:15:56.579" endtime="20220222 21:15:56.579"/>
</kw>
<status status="PASS" starttime="20220222 21:15:54.295" endtime="20220222 21:15:56.579"/>
</branch>
<status status="PASS" starttime="20220222 21:15:54.295" endtime="20220222 21:15:56.579"/>
</if>
<status status="PASS" starttime="20220222 21:15:54.294" endtime="20220222 21:15:56.579"/>
</kw>
<status status="PASS" starttime="20220222 21:14:47.518" endtime="20220222 21:15:56.579"/>
</suite>
<status status="PASS" starttime="20220222 21:14:14.202" endtime="20220222 21:15:56.581"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">macos-latest</stat>
<stat pass="3" fail="0" skip="0">ubuntu-latest</stat>
<stat pass="3" fail="0" skip="0">windows-latest</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Manager">Manager</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="CommandLine">Manager.CommandLine</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="GUI Basic">Manager.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
