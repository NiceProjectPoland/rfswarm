<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.7.9 on win32)" generated="20220222 02:14:07.153" rpa="false" schemaversion="2">
<suite id="s1" name="Manager" source="D:\a\rfswarm\rfswarm\Tests\Regression\Manager">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Manager\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 02:14:07.202" endtime="20220222 02:14:07.202"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20220222 02:14:07.203" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stderr_1645437250.547907.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stderr_1645437250.547907.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:14:07.204" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stderr_1645437286.8171017.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stderr_1645437286.8171017.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:14:07.204" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stdout_1645437250.5469093.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stdout_1645437250.5469093.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:14:07.204" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stdout_1645437286.8171017.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\Sikuli_java_stdout_1645437286.8171017.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:14:07.204" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:14:07.204" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220222 02:14:07.202" endtime="20220222 02:14:07.205"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}sikuli_captured${/}*.*</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20220222 02:14:07.206" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\sikuli_captured\sikuliximage-1645437351910.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\sikuli_captured\sikuliximage-1645437351910.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220222 02:14:07.205" endtime="20220222 02:14:07.206"/>
</kw>
<status status="PASS" starttime="20220222 02:14:07.201" endtime="20220222 02:14:07.206"/>
</kw>
<test id="s1-s1-t1" name="Random Offset">
<kw name="Evaluate" library="BuiltIn">
<var>${random}</var>
<arg>random.randint(0, 60)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220222 02:14:07.207" level="INFO">${random} = 60</msg>
<status status="PASS" starttime="20220222 02:14:07.207" endtime="20220222 02:14:07.207"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${random}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220222 02:15:07.209" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20220222 02:14:07.207" endtime="20220222 02:15:07.209"/>
</kw>
<doc>This just prevents all the test runners doing git push at the same time</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 02:14:07.206" endtime="20220222 02:15:07.210"/>
</test>
<test id="s1-s1-t2" name="Manager Version">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20220222 02:15:07.217" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_manager\rfswarm.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 02:17:45.394" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Manager 
	Version 1.1.0 </msg>
<status status="PASS" starttime="20220222 02:15:07.211" endtime="20220222 02:17:45.394"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 02:17:45.395" endtime="20220222 02:17:45.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 02:17:45.396" endtime="20220222 02:17:45.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Manager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 02:17:45.397" endtime="20220222 02:17:45.397"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 02:15:07.211" endtime="20220222 02:17:45.397"/>
</test>
<test id="s1-s1-t3" name="Manager Help">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_manager${/}rfswarm.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20220222 02:17:45.401" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_manager\rfswarm.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 02:17:47.016" level="INFO">${result} = Robot Framework Swarm: Manager 
	Version 1.1.0 
usage: rfswarm.py [-h] [-g DEBUG] [-v] [-i INI] [-s SCENARIO] [-r] [-a AGENTS]
                  [-n] [-t STARTTIME] [-d DIR] [-e IPADDRESS] [-p PORT]

...</msg>
<status status="PASS" starttime="20220222 02:17:45.398" endtime="20220222 02:17:47.016"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220222 02:17:47.017" endtime="20220222 02:17:47.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>IPADDRESS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 02:17:47.017" endtime="20220222 02:17:47.018"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 02:17:45.398" endtime="20220222 02:17:47.018"/>
</test>
<status status="PASS" starttime="20220222 02:14:07.186" endtime="20220222 02:17:47.019"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Manager\GUI_Basic.robot">
<kw name="Sikili Setup" type="SETUP">
<kw name="Add Image Path" library="SikuliLibrary">
<arg>${IMAGE_DIR}</arg>
<doc>Add image path</doc>
<status status="PASS" starttime="20220222 02:18:29.565" endtime="20220222 02:18:29.666"/>
</kw>
<status status="PASS" starttime="20220222 02:18:29.565" endtime="20220222 02:18:29.666"/>
</kw>
<test id="s1-s2-t1" name="GUI Runs and Closes">
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${EXECDIR}${/}rfswarm_manager${/}rfswarm.py</arg>
<arg>alias=Manager</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20220222 02:18:29.669" level="INFO">Starting process:
python3 D:\a\rfswarm\rfswarm\rfswarm_manager\rfswarm.py</msg>
<status status="PASS" starttime="20220222 02:18:29.667" endtime="20220222 02:18:29.672"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220222 02:19:29.675" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20220222 02:18:29.672" endtime="20220222 02:19:29.675"/>
</kw>
<kw name="Capture Screen" library="SikuliLibrary">
<doc>Capture whole screen, file name is returned</doc>
<msg timestamp="20220222 02:19:30.408" level="INFO" html="true">&lt;img src='sikuli_captured/sikuliximage-1645496369850.png'/&gt;</msg>
<status status="PASS" starttime="20220222 02:19:29.676" endtime="20220222 02:19:30.408"/>
</kw>
<tag>windows-latest</tag>
<status status="PASS" starttime="20220222 02:18:29.666" endtime="20220222 02:19:30.409"/>
</test>
<kw name="Sikili Teardown" type="TEARDOWN">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>Manager</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20220222 02:19:30.410" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20220222 02:19:30.410" endtime="20220222 02:19:30.410"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>Manager</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20220222 02:19:30.411" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20220222 02:19:30.513" level="INFO">Process completed.</msg>
<msg timestamp="20220222 02:19:30.513" level="INFO">${result} = &lt;result object with rc 3221225786&gt;</msg>
<status status="PASS" starttime="20220222 02:19:30.411" endtime="20220222 02:19:30.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 02:19:30.514" level="INFO">&lt;result object with rc 3221225786&gt;</msg>
<status status="PASS" starttime="20220222 02:19:30.513" endtime="20220222 02:19:30.514"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${stdout}</var>
<arg>${OUTPUT DIR}${/}stdout.txt</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 02:19:30.515" level="INFO" html="true">Getting file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:19:30.515" level="INFO">${stdout} = </msg>
<status status="PASS" starttime="20220222 02:19:30.514" endtime="20220222 02:19:30.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 02:19:30.515" level="INFO"/>
<status status="PASS" starttime="20220222 02:19:30.515" endtime="20220222 02:19:30.516"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${stderr}</var>
<arg>${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 02:19:30.516" level="INFO" html="true">Getting file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Manager\Logs\windows-latest_3.7\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20220222 02:19:30.516" level="INFO">${stderr} = </msg>
<status status="PASS" starttime="20220222 02:19:30.516" endtime="20220222 02:19:30.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 02:19:30.517" level="INFO"/>
<status status="PASS" starttime="20220222 02:19:30.516" endtime="20220222 02:19:30.517"/>
</kw>
<status status="PASS" starttime="20220222 02:19:30.411" endtime="20220222 02:19:30.517"/>
</branch>
<status status="PASS" starttime="20220222 02:19:30.410" endtime="20220222 02:19:30.517"/>
</if>
<status status="PASS" starttime="20220222 02:19:30.409" endtime="20220222 02:19:30.517"/>
</kw>
<status status="PASS" starttime="20220222 02:17:47.020" endtime="20220222 02:19:30.517"/>
</suite>
<status status="PASS" starttime="20220222 02:14:07.155" endtime="20220222 02:19:30.519"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0" skip="0">macos-latest</stat>
<stat pass="3" fail="0" skip="0">ubuntu-latest</stat>
<stat pass="4" fail="0" skip="0">windows-latest</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Manager">Manager</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="CommandLine">Manager.CommandLine</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="GUI Basic">Manager.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
