<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on darwin)" generated="20230602 13:04:41.080" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 13:04:41.121" endtime="20230602 13:04:41.121"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 13:04:41.122" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.122" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 13:04:41.121" endtime="20230602 13:04:41.122"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 13:04:41.123" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-27.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-27.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.124" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.125" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.125" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-26.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-26.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.125" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.125" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.125" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-25.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-25.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.126" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.126" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.126" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.126" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.126" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.127" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.127" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.127" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.127" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.127" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.128" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.128" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.129" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.129" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.130" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.130" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.130" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.131" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.132" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 13:04:41.132" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 13:04:41.122" endtime="20230602 13:04:41.132"/>
</kw>
<status status="PASS" starttime="20230602 13:04:41.121" endtime="20230602 13:04:41.132"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 13:04:41.138" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 13:04:51.591" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230602 13:04:41.133" endtime="20230602 13:04:51.591"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 13:04:51.591" endtime="20230602 13:04:51.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:04:51.592" endtime="20230602 13:04:51.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:04:51.592" endtime="20230602 13:04:51.592"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:04:41.132" endtime="20230602 13:04:51.592"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 13:04:51.596" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 13:04:53.401" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230602 13:04:51.593" endtime="20230602 13:04:53.401"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 13:04:53.401" endtime="20230602 13:04:53.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:04:53.402" endtime="20230602 13:04:53.402"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:04:51.593" endtime="20230602 13:04:53.402"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:04:53.403" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 13:04:53.403" endtime="20230602 13:04:53.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:04:53.404" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:04:53.404" endtime="20230602 13:04:53.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:04:53.404" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 13:04:53.404" endtime="20230602 13:04:53.404"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:04:53.404" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:04:53.404" endtime="20230602 13:04:53.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:04:53.405" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 13:04:53.405" endtime="20230602 13:04:53.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:04:53.405" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:04:53.405" endtime="20230602 13:04:53.405"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:04:53.406" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:04:53.406" endtime="20230602 13:04:53.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:04:53.406" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:04:53.406" endtime="20230602 13:04:53.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:04:53.407" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:04:53.406" endtime="20230602 13:04:53.407"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:04:53.407" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:04:53.407" endtime="20230602 13:04:53.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:04:53.407" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:04:53.407" endtime="20230602 13:04:53.407"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 13:04:53.412" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 13:05:00.426" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 13:04:53.407" endtime="20230602 13:05:00.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:00.427" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230602 13:05:00.426" endtime="20230602 13:05:00.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:00.427" endtime="20230602 13:05:00.427"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:00.428" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:00.427" endtime="20230602 13:05:00.428"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:04:53.403" endtime="20230602 13:05:00.428"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:00.429" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 13:05:00.429" endtime="20230602 13:05:00.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:00.429" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:00.429" endtime="20230602 13:05:00.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:00.430" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 13:05:00.429" endtime="20230602 13:05:00.430"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:00.430" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:00.430" endtime="20230602 13:05:00.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 13:05:00.430" endtime="20230602 13:05:00.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:00.431" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:00.430" endtime="20230602 13:05:00.431"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:00.431" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:00.431" endtime="20230602 13:05:00.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:00.431" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:00.431" endtime="20230602 13:05:00.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:00.432" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:05:00.432" endtime="20230602 13:05:00.432"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:00.432" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:00.432" endtime="20230602 13:05:00.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:00.432" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:05:00.432" endtime="20230602 13:05:00.432"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 13:05:00.436" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 13:05:09.067" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 13:05:00.433" endtime="20230602 13:05:09.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:09.068" level="INFO">
</msg>
<status status="PASS" starttime="20230602 13:05:09.067" endtime="20230602 13:05:09.068"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:09.068" endtime="20230602 13:05:09.068"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:09.069" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:09.069" endtime="20230602 13:05:09.069"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:05:00.428" endtime="20230602 13:05:09.069"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:09.070" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 13:05:09.070" endtime="20230602 13:05:09.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:09.070" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:09.070" endtime="20230602 13:05:09.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:09.071" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 13:05:09.070" endtime="20230602 13:05:09.071"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:09.071" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:09.071" endtime="20230602 13:05:09.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:09.071" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 13:05:09.071" endtime="20230602 13:05:09.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:09.072" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:09.071" endtime="20230602 13:05:09.072"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:09.072" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:09.072" endtime="20230602 13:05:09.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:09.072" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:09.072" endtime="20230602 13:05:09.073"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:09.073" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:05:09.073" endtime="20230602 13:05:09.073"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:09.073" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:09.073" endtime="20230602 13:05:09.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:09.074" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 13:05:09.073" endtime="20230602 13:05:09.074"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 13:05:09.079" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 13:05:15.610" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 13:05:09.074" endtime="20230602 13:05:15.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:15.611" level="INFO">
</msg>
<status status="PASS" starttime="20230602 13:05:15.611" endtime="20230602 13:05:15.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:15.612" endtime="20230602 13:05:15.612"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:15.612" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:15.612" endtime="20230602 13:05:15.612"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230602 13:05:09.069" endtime="20230602 13:05:15.613"/>
</test>
<status status="PASS" starttime="20230602 13:04:41.103" endtime="20230602 13:05:15.613"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 13:05:20.879" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 13:05:20.878" endtime="20230602 13:05:20.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:20.880" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103471ed0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 13:05:20.879" endtime="20230602 13:05:20.880"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 13:05:20.880" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 13:05:20.880" endtime="20230602 13:05:20.880"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:05:20.881" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 13:05:20.881" endtime="20230602 13:05:20.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:20.882" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:20.881" endtime="20230602 13:05:20.882"/>
</kw>
<status status="PASS" starttime="20230602 13:05:20.880" endtime="20230602 13:05:20.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:20.883" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:20.882" endtime="20230602 13:05:20.883"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:20.888" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:20.887" endtime="20230602 13:05:20.888"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 13:05:20.888" endtime="20230602 13:05:20.888"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 13:05:20.889" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 13:05:20.897" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:20.888" endtime="20230602 13:05:20.897"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:20.898" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:20.897" endtime="20230602 13:05:20.898"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 13:05:20.898" endtime="20230602 13:05:20.898"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:20.899" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:20.898" endtime="20230602 13:05:21.220"/>
</kw>
<status status="PASS" starttime="20230602 13:05:20.887" endtime="20230602 13:05:21.221"/>
</kw>
<status status="PASS" starttime="20230602 13:05:20.883" endtime="20230602 13:05:21.221"/>
</kw>
<status status="PASS" starttime="20230602 13:05:20.877" endtime="20230602 13:05:21.221"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:21.222" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 13:05:21.222" endtime="20230602 13:05:21.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:21.222" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 13:05:21.222" endtime="20230602 13:05:21.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:21.223" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:21.223" endtime="20230602 13:05:21.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:21.223" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:21.223" endtime="20230602 13:05:21.223"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:24.655" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:21.223" endtime="20230602 13:05:24.655"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:25.138" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:25.138" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 13:05:24.656" endtime="20230602 13:05:25.138"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:25.629" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:25.629" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:25.162" endtime="20230602 13:05:25.857"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:26.388" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:25.858" endtime="20230602 13:05:26.388"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:26.389" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:26.388" endtime="20230602 13:05:26.684"/>
</kw>
<status status="PASS" starttime="20230602 13:05:21.221" endtime="20230602 13:05:26.684"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:26.688" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:26.688" endtime="20230602 13:05:26.688"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:26.689" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 13:05:26.689" endtime="20230602 13:05:26.689"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:27.118" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 13:05:27.118" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 13:05:26.696" endtime="20230602 13:05:27.307"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:27.308" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:27.307" endtime="20230602 13:05:27.774"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:28.292" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:27.774" endtime="20230602 13:05:28.293"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 13:05:28.294" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 13:05:28.294" level="INFO">Process completed.</msg>
<msg timestamp="20230602 13:05:28.295" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 13:05:28.293" endtime="20230602 13:05:28.295"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:28.295" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 13:05:28.295" endtime="20230602 13:05:28.295"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:28.297" level="INFO"/>
<status status="PASS" starttime="20230602 13:05:28.296" endtime="20230602 13:05:28.297"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:28.297" endtime="20230602 13:05:28.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 13:05:28.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 13:05:28.298" endtime="20230602 13:05:28.298"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.295" endtime="20230602 13:05:28.298"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.295" endtime="20230602 13:05:28.298"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 13:05:28.299" endtime="20230602 13:05:28.299"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 13:05:28.299" endtime="20230602 13:05:28.299"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:28.299" endtime="20230602 13:05:28.299"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 13:05:28.299" endtime="20230602 13:05:28.299"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:28.298" endtime="20230602 13:05:28.299"/>
</branch>
<status status="PASS" starttime="20230602 13:05:28.295" endtime="20230602 13:05:28.299"/>
</if>
<status status="PASS" starttime="20230602 13:05:28.293" endtime="20230602 13:05:28.299"/>
</kw>
<status status="PASS" starttime="20230602 13:05:26.695" endtime="20230602 13:05:28.299"/>
</kw>
<status status="PASS" starttime="20230602 13:05:26.689" endtime="20230602 13:05:28.299"/>
</kw>
<status status="PASS" starttime="20230602 13:05:26.689" endtime="20230602 13:05:28.299"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:05:28.300" endtime="20230602 13:05:28.300"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:28.300" endtime="20230602 13:05:28.300"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:28.300" endtime="20230602 13:05:28.300"/>
</branch>
<status status="PASS" starttime="20230602 13:05:26.689" endtime="20230602 13:05:28.300"/>
</if>
<status status="PASS" starttime="20230602 13:05:26.688" endtime="20230602 13:05:28.300"/>
</branch>
<status status="PASS" starttime="20230602 13:05:26.688" endtime="20230602 13:05:28.300"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:28.300" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:05:28.300" endtime="20230602 13:05:28.300"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:28.802" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:28.301" endtime="20230602 13:05:28.802"/>
</kw>
<status status="PASS" starttime="20230602 13:05:26.685" endtime="20230602 13:05:28.803"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:05:20.877" endtime="20230602 13:05:28.803"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 13:05:28.804" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 13:05:28.804" endtime="20230602 13:05:28.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:28.805" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103471ed0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 13:05:28.805" endtime="20230602 13:05:28.805"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 13:05:28.806" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 13:05:28.805" endtime="20230602 13:05:28.806"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:05:28.806" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 13:05:28.806" endtime="20230602 13:05:28.806"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:28.807" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:28.806" endtime="20230602 13:05:28.807"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.805" endtime="20230602 13:05:28.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:28.807" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:28.807" endtime="20230602 13:05:28.807"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:28.812" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:28.812" endtime="20230602 13:05:28.812"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 13:05:28.812" endtime="20230602 13:05:28.812"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 13:05:28.814" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 13:05:28.822" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:28.813" endtime="20230602 13:05:28.823"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:28.824" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:28.823" endtime="20230602 13:05:28.824"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 13:05:28.824" endtime="20230602 13:05:28.824"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:28.825" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:28.824" endtime="20230602 13:05:29.148"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.811" endtime="20230602 13:05:29.149"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.807" endtime="20230602 13:05:29.149"/>
</kw>
<status status="PASS" starttime="20230602 13:05:28.804" endtime="20230602 13:05:29.149"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:29.150" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 13:05:29.150" endtime="20230602 13:05:29.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:29.150" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 13:05:29.150" endtime="20230602 13:05:29.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:29.151" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:29.151" endtime="20230602 13:05:29.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:29.151" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:29.151" endtime="20230602 13:05:29.151"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:31.643" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:29.151" endtime="20230602 13:05:31.644"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:32.083" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:32.084" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 13:05:31.644" endtime="20230602 13:05:32.084"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:32.567" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:32.567" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:32.084" endtime="20230602 13:05:32.767"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:33.277" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:32.767" endtime="20230602 13:05:33.277"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:33.278" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:33.277" endtime="20230602 13:05:33.576"/>
</kw>
<status status="PASS" starttime="20230602 13:05:29.149" endtime="20230602 13:05:33.577"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:33.578" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230602 13:05:33.578" endtime="20230602 13:05:33.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:33.578" level="INFO">${img} = reporter_macos_tab_preview.png</msg>
<status status="PASS" starttime="20230602 13:05:33.578" endtime="20230602 13:05:33.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:33.579" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:33.579" endtime="20230602 13:05:33.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:33.579" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:33.579" endtime="20230602 13:05:33.579"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:34.023" level="INFO">Image "reporter_macos_tab_preview.png" found at (482, 103)</msg>
<status status="PASS" starttime="20230602 13:05:33.579" endtime="20230602 13:05:34.024"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:34.444" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230602 13:05:34.444" level="INFO">@{coordinates} = [ 482 | 103 ]</msg>
<status status="PASS" starttime="20230602 13:05:34.024" endtime="20230602 13:05:34.444"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:34.844" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230602 13:05:34.845" level="INFO">Clicking image "reporter_macos_tab_preview.png" in position (482, 103)</msg>
<status status="PASS" starttime="20230602 13:05:34.445" endtime="20230602 13:05:35.010"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:35.519" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:35.010" endtime="20230602 13:05:35.520"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:35.521" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:35.520" endtime="20230602 13:05:35.806"/>
</kw>
<status status="PASS" starttime="20230602 13:05:33.577" endtime="20230602 13:05:35.806"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:35.808" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:35.807" endtime="20230602 13:05:35.808"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:35.808" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 13:05:35.808" endtime="20230602 13:05:35.808"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:36.198" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 13:05:36.199" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 13:05:35.814" endtime="20230602 13:05:36.333"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:36.335" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:36.334" endtime="20230602 13:05:36.889"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:37.422" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:36.890" endtime="20230602 13:05:37.422"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 13:05:37.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 13:05:37.424" level="INFO">Process completed.</msg>
<msg timestamp="20230602 13:05:37.424" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 13:05:37.423" endtime="20230602 13:05:37.424"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:37.425" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 13:05:37.424" endtime="20230602 13:05:37.425"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:37.426" level="INFO"/>
<status status="PASS" starttime="20230602 13:05:37.425" endtime="20230602 13:05:37.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:37.426" endtime="20230602 13:05:37.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 13:05:37.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 13:05:37.427" endtime="20230602 13:05:37.428"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.425" endtime="20230602 13:05:37.428"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.425" endtime="20230602 13:05:37.428"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 13:05:37.428" endtime="20230602 13:05:37.428"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 13:05:37.429" endtime="20230602 13:05:37.429"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:37.429" endtime="20230602 13:05:37.429"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 13:05:37.429" endtime="20230602 13:05:37.429"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:37.428" endtime="20230602 13:05:37.429"/>
</branch>
<status status="PASS" starttime="20230602 13:05:37.425" endtime="20230602 13:05:37.429"/>
</if>
<status status="PASS" starttime="20230602 13:05:37.422" endtime="20230602 13:05:37.429"/>
</kw>
<status status="PASS" starttime="20230602 13:05:35.814" endtime="20230602 13:05:37.429"/>
</kw>
<status status="PASS" starttime="20230602 13:05:35.809" endtime="20230602 13:05:37.429"/>
</kw>
<status status="PASS" starttime="20230602 13:05:35.809" endtime="20230602 13:05:37.429"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:05:37.430" endtime="20230602 13:05:37.430"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:37.430" endtime="20230602 13:05:37.430"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:37.429" endtime="20230602 13:05:37.430"/>
</branch>
<status status="PASS" starttime="20230602 13:05:35.809" endtime="20230602 13:05:37.430"/>
</if>
<status status="PASS" starttime="20230602 13:05:35.808" endtime="20230602 13:05:37.430"/>
</branch>
<status status="PASS" starttime="20230602 13:05:35.808" endtime="20230602 13:05:37.430"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:37.430" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:05:37.430" endtime="20230602 13:05:37.430"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:37.938" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:37.430" endtime="20230602 13:05:37.938"/>
</kw>
<status status="PASS" starttime="20230602 13:05:35.807" endtime="20230602 13:05:37.938"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:05:28.803" endtime="20230602 13:05:37.938"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:37.939" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230602 13:05:37.939" endtime="20230602 13:05:37.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:37.940" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:37.939" endtime="20230602 13:05:37.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:37.940" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230602 13:05:37.940" endtime="20230602 13:05:37.940"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:37.940" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:37.940" endtime="20230602 13:05:37.940"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 13:05:37.940" endtime="20230602 13:05:37.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:37.941" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:37.941" endtime="20230602 13:05:37.941"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 13:05:37.941" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 13:05:37.941" endtime="20230602 13:05:37.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:37.942" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 13:05:37.942" endtime="20230602 13:05:37.942"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230602 13:05:37.942" level="INFO">${epoch} = 1685711137</msg>
<status status="PASS" starttime="20230602 13:05:37.942" endtime="20230602 13:05:37.942"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 13:05:37.943" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 13:05:37.943" endtime="20230602 13:05:37.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:37.944" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103471ed0&gt;, '@{appargs}': ['-i', 'blank_1685711137.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 13:05:37.943" endtime="20230602 13:05:37.944"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 13:05:37.944" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 13:05:37.944" endtime="20230602 13:05:37.944"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:05:37.945" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 13:05:37.944" endtime="20230602 13:05:37.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:37.945" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:37.945" endtime="20230602 13:05:37.945"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.944" endtime="20230602 13:05:37.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:37.946" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:37.946" endtime="20230602 13:05:37.946"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:37.950" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:37.950" endtime="20230602 13:05:37.950"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 13:05:37.950" endtime="20230602 13:05:37.951"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 13:05:37.952" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1685711137.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg timestamp="20230602 13:05:37.959" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:37.951" endtime="20230602 13:05:37.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:37.960" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:37.959" endtime="20230602 13:05:37.960"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 13:05:37.960" endtime="20230602 13:05:37.960"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:37.961" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:37.961" endtime="20230602 13:05:38.249"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.950" endtime="20230602 13:05:38.249"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.946" endtime="20230602 13:05:38.250"/>
</kw>
<status status="PASS" starttime="20230602 13:05:37.942" endtime="20230602 13:05:38.250"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:38.251" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 13:05:38.251" endtime="20230602 13:05:38.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:38.252" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 13:05:38.251" endtime="20230602 13:05:38.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:38.252" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:38.252" endtime="20230602 13:05:38.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:38.252" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:38.252" endtime="20230602 13:05:38.252"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:40.967" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:38.252" endtime="20230602 13:05:40.967"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:41.373" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:41.374" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 13:05:40.968" endtime="20230602 13:05:41.374"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:41.784" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:41.784" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:41.374" endtime="20230602 13:05:41.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:42.444" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:41.913" endtime="20230602 13:05:42.444"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:42.444" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:42.444" endtime="20230602 13:05:42.764"/>
</kw>
<status status="PASS" starttime="20230602 13:05:38.250" endtime="20230602 13:05:42.765"/>
</kw>
<status status="PASS" starttime="20230602 13:05:38.250" endtime="20230602 13:05:42.765"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:42.766" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:42.766" endtime="20230602 13:05:42.766"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:42.767" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 13:05:42.766" endtime="20230602 13:05:42.767"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:43.167" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 13:05:43.167" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 13:05:42.772" endtime="20230602 13:05:43.311"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:43.312" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:43.311" endtime="20230602 13:05:43.901"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:44.427" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:43.901" endtime="20230602 13:05:44.427"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 13:05:44.428" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 13:05:44.428" level="INFO">Process completed.</msg>
<msg timestamp="20230602 13:05:44.429" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 13:05:44.428" endtime="20230602 13:05:44.429"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:05:44.429" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 13:05:44.429" endtime="20230602 13:05:44.429"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:44.431" level="INFO"/>
<status status="PASS" starttime="20230602 13:05:44.430" endtime="20230602 13:05:44.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:05:44.431" endtime="20230602 13:05:44.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 13:05:44.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 13:05:44.431" endtime="20230602 13:05:44.432"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.429" endtime="20230602 13:05:44.432"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.429" endtime="20230602 13:05:44.432"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 13:05:44.432" endtime="20230602 13:05:44.432"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 13:05:44.433" endtime="20230602 13:05:44.433"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:44.433" endtime="20230602 13:05:44.433"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 13:05:44.433" endtime="20230602 13:05:44.433"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:44.432" endtime="20230602 13:05:44.433"/>
</branch>
<status status="PASS" starttime="20230602 13:05:44.429" endtime="20230602 13:05:44.433"/>
</if>
<status status="PASS" starttime="20230602 13:05:44.427" endtime="20230602 13:05:44.433"/>
</kw>
<status status="PASS" starttime="20230602 13:05:42.771" endtime="20230602 13:05:44.433"/>
</kw>
<status status="PASS" starttime="20230602 13:05:42.767" endtime="20230602 13:05:44.433"/>
</kw>
<status status="PASS" starttime="20230602 13:05:42.767" endtime="20230602 13:05:44.433"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:05:44.433" endtime="20230602 13:05:44.433"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:05:44.434" endtime="20230602 13:05:44.434"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:05:44.433" endtime="20230602 13:05:44.434"/>
</branch>
<status status="PASS" starttime="20230602 13:05:42.767" endtime="20230602 13:05:44.434"/>
</if>
<status status="PASS" starttime="20230602 13:05:42.766" endtime="20230602 13:05:44.434"/>
</branch>
<status status="PASS" starttime="20230602 13:05:42.766" endtime="20230602 13:05:44.434"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:44.434" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:05:44.434" endtime="20230602 13:05:44.434"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:44.949" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:44.434" endtime="20230602 13:05:44.949"/>
</kw>
<status status="PASS" starttime="20230602 13:05:42.765" endtime="20230602 13:05:44.949"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 13:05:37.938" endtime="20230602 13:05:44.949"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 13:05:44.951" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 13:05:44.951" endtime="20230602 13:05:44.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:44.951" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103471ed0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 13:05:44.951" endtime="20230602 13:05:44.952"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 13:05:44.952" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 13:05:44.952" endtime="20230602 13:05:44.952"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:05:44.953" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 13:05:44.952" endtime="20230602 13:05:44.953"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:44.953" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:44.953" endtime="20230602 13:05:44.953"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.952" endtime="20230602 13:05:44.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:44.954" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 13:05:44.954" endtime="20230602 13:05:44.954"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:44.958" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 13:05:44.958" endtime="20230602 13:05:44.959"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 13:05:44.959" endtime="20230602 13:05:44.959"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 13:05:44.960" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 13:05:44.969" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:44.959" endtime="20230602 13:05:44.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:05:44.970" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 13:05:44.969" endtime="20230602 13:05:44.970"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 13:05:44.970" endtime="20230602 13:05:44.971"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:44.971" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:44.971" endtime="20230602 13:05:45.293"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.958" endtime="20230602 13:05:45.294"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.954" endtime="20230602 13:05:45.294"/>
</kw>
<status status="PASS" starttime="20230602 13:05:44.950" endtime="20230602 13:05:45.294"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:45.296" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 13:05:45.296" endtime="20230602 13:05:45.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:45.296" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 13:05:45.296" endtime="20230602 13:05:45.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:45.296" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:45.296" endtime="20230602 13:05:45.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:45.297" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:45.297" endtime="20230602 13:05:45.297"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:47.872" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:45.297" endtime="20230602 13:05:47.873"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:48.374" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:48.374" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 13:05:47.874" endtime="20230602 13:05:48.375"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:49.109" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:05:49.109" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 13:05:48.376" endtime="20230602 13:05:49.294"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:49.808" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:49.294" endtime="20230602 13:05:49.808"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:49.809" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:49.808" endtime="20230602 13:05:50.111"/>
</kw>
<status status="PASS" starttime="20230602 13:05:45.294" endtime="20230602 13:05:50.111"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:50.113" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230602 13:05:50.112" endtime="20230602 13:05:50.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:50.113" level="INFO">${img} = reporter_macos_section_report.png</msg>
<status status="PASS" starttime="20230602 13:05:50.113" endtime="20230602 13:05:50.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:50.114" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:50.114" endtime="20230602 13:05:50.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:50.114" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:50.114" endtime="20230602 13:05:50.114"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:50.601" level="INFO">Image "reporter_macos_section_report.png" found at (42, 142)</msg>
<status status="PASS" starttime="20230602 13:05:50.114" endtime="20230602 13:05:50.601"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:51.029" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230602 13:05:51.030" level="INFO">@{coordinates} = [ 42 | 142 ]</msg>
<status status="PASS" starttime="20230602 13:05:50.601" endtime="20230602 13:05:51.030"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:51.494" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230602 13:05:51.494" level="INFO">Clicking image "reporter_macos_section_report.png" in position (42, 142)</msg>
<status status="PASS" starttime="20230602 13:05:51.030" endtime="20230602 13:05:51.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:52.152" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:51.650" endtime="20230602 13:05:52.153"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:52.154" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:52.153" endtime="20230602 13:05:52.468"/>
</kw>
<status status="PASS" starttime="20230602 13:05:50.112" endtime="20230602 13:05:52.468"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:52.469" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:52.469" endtime="20230602 13:05:52.788"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:52.789" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230602 13:05:52.789" endtime="20230602 13:05:52.789"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:52.790" level="INFO">${img} = reporter_macos_button_addsection.png</msg>
<status status="PASS" starttime="20230602 13:05:52.790" endtime="20230602 13:05:52.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:52.790" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:52.790" endtime="20230602 13:05:52.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:52.790" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:52.790" endtime="20230602 13:05:52.791"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:53.325" level="INFO">Image "reporter_macos_button_addsection.png" found at (36, 109)</msg>
<status status="PASS" starttime="20230602 13:05:52.791" endtime="20230602 13:05:53.346"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:53.769" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230602 13:05:53.769" level="INFO">@{coordinates} = [ 36 | 109 ]</msg>
<status status="PASS" starttime="20230602 13:05:53.346" endtime="20230602 13:05:53.769"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:54.181" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230602 13:05:54.182" level="INFO">Clicking image "reporter_macos_button_addsection.png" in position (36, 109)</msg>
<status status="PASS" starttime="20230602 13:05:53.770" endtime="20230602 13:05:54.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:54.819" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:54.303" endtime="20230602 13:05:54.819"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:54.819" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:54.819" endtime="20230602 13:05:55.121"/>
</kw>
<status status="PASS" starttime="20230602 13:05:52.788" endtime="20230602 13:05:55.121"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230602 13:05:55.574" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_sectionname.png" found at Box(left=494, top=430, width=92, height=23)</msg>
<msg timestamp="20230602 13:05:55.574" level="INFO">Clicking 1 time(s) at (540, 461) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230602 13:05:55.122" endtime="20230602 13:05:55.696"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230602 13:05:55.696" endtime="20230602 13:05:56.331"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:56.332" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230602 13:05:56.332" endtime="20230602 13:05:56.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:56.332" level="INFO">${img} = reporter_macos_button_ok.png</msg>
<status status="PASS" starttime="20230602 13:05:56.332" endtime="20230602 13:05:56.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:56.332" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:56.332" endtime="20230602 13:05:56.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:56.333" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:56.333" endtime="20230602 13:05:56.333"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:56.757" level="INFO">Image "reporter_macos_button_ok.png" found at (520, 502)</msg>
<status status="PASS" starttime="20230602 13:05:56.333" endtime="20230602 13:05:56.757"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:57.224" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230602 13:05:57.224" level="INFO">@{coordinates} = [ 520 | 502 ]</msg>
<status status="PASS" starttime="20230602 13:05:56.758" endtime="20230602 13:05:57.224"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:05:57.671" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230602 13:05:57.671" level="INFO">Clicking image "reporter_macos_button_ok.png" in position (520, 502)</msg>
<status status="PASS" starttime="20230602 13:05:57.225" endtime="20230602 13:05:57.814"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:05:58.316" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:05:57.815" endtime="20230602 13:05:58.316"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:58.317" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:58.316" endtime="20230602 13:05:58.620"/>
</kw>
<status status="PASS" starttime="20230602 13:05:56.331" endtime="20230602 13:05:58.621"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:05:58.622" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:05:58.621" endtime="20230602 13:05:58.890"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:05:58.892" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230602 13:05:58.891" endtime="20230602 13:05:58.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:05:58.892" level="INFO">${img} = reporter_macos_section_issue#149.png</msg>
<status status="PASS" starttime="20230602 13:05:58.892" endtime="20230602 13:05:58.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:58.893" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:05:58.892" endtime="20230602 13:05:58.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:05:58.893" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:05:58.893" endtime="20230602 13:05:58.893"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:05:59.305" level="INFO">Image "reporter_macos_section_issue#149.png" found at (74, 286)</msg>
<status status="PASS" starttime="20230602 13:05:58.893" endtime="20230602 13:05:59.306"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:05:59.804" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=38, top=278, width=73, height=16)</msg>
<msg timestamp="20230602 13:05:59.804" level="INFO">@{coordinates} = [ 74 | 286 ]</msg>
<status status="PASS" starttime="20230602 13:05:59.306" endtime="20230602 13:05:59.804"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:06:00.254" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=38, top=278, width=73, height=16)</msg>
<msg timestamp="20230602 13:06:00.254" level="INFO">Clicking image "reporter_macos_section_issue#149.png" in position (74, 286)</msg>
<status status="PASS" starttime="20230602 13:05:59.805" endtime="20230602 13:06:00.435"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:00.938" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:00.435" endtime="20230602 13:06:00.938"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:00.939" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:00.938" endtime="20230602 13:06:01.227"/>
</kw>
<status status="PASS" starttime="20230602 13:05:58.890" endtime="20230602 13:06:01.228"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:01.229" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230602 13:06:01.229" endtime="20230602 13:06:01.229"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:01.230" level="INFO">${img} = reporter_macos_label_type.png</msg>
<status status="PASS" starttime="20230602 13:06:01.229" endtime="20230602 13:06:01.230"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:01.231" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=64x22 at 0x11538D7D0&gt;</msg>
<status status="PASS" starttime="20230602 13:06:01.230" endtime="20230602 13:06:01.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:01.231" level="INFO">${imgsize} = (64, 22)</msg>
<status status="PASS" starttime="20230602 13:06:01.231" endtime="20230602 13:06:01.232"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 13:06:01.232" endtime="20230602 13:06:01.232"/>
</return>
<msg timestamp="20230602 13:06:01.232" level="INFO">${imgsize} = (64, 22)</msg>
<status status="PASS" starttime="20230602 13:06:01.230" endtime="20230602 13:06:01.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:01.232" level="INFO">(64, 22)</msg>
<status status="PASS" starttime="20230602 13:06:01.232" endtime="20230602 13:06:01.232"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:01.233" level="INFO">${offsetx} = 37</msg>
<status status="PASS" starttime="20230602 13:06:01.232" endtime="20230602 13:06:01.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:01.233" level="INFO">37</msg>
<status status="PASS" starttime="20230602 13:06:01.233" endtime="20230602 13:06:01.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:01.233" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:01.233" endtime="20230602 13:06:01.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:01.234" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:01.234" endtime="20230602 13:06:01.234"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:06:01.648" level="INFO">Image "reporter_macos_label_type.png" found at (293, 161)</msg>
<status status="PASS" starttime="20230602 13:06:01.234" endtime="20230602 13:06:01.648"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:06:02.093" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_type.png" found at Box(left=261, top=150, width=64, height=22)</msg>
<msg timestamp="20230602 13:06:02.094" level="INFO">@{coordinates} = [ 293 | 161 ]</msg>
<status status="PASS" starttime="20230602 13:06:01.648" endtime="20230602 13:06:02.094"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:02.095" level="INFO">${x} = 330</msg>
<status status="PASS" starttime="20230602 13:06:02.094" endtime="20230602 13:06:02.095"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:02.095" level="INFO">${y} = 161</msg>
<status status="PASS" starttime="20230602 13:06:02.095" endtime="20230602 13:06:02.095"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 13:06:02.096" level="INFO">@{coordinates} = [ 330 | 161 ]</msg>
<status status="PASS" starttime="20230602 13:06:02.095" endtime="20230602 13:06:02.096"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 13:06:02.096" endtime="20230602 13:06:02.240"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 13:06:02.240" endtime="20230602 13:06:02.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:02.861" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:02.360" endtime="20230602 13:06:02.861"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:02.862" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:02.861" endtime="20230602 13:06:03.184"/>
</kw>
<status status="PASS" starttime="20230602 13:06:01.228" endtime="20230602 13:06:03.184"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:03.187" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230602 13:06:03.186" endtime="20230602 13:06:03.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:03.187" level="INFO">${img} = reporter_macos_option_datatable.png</msg>
<status status="PASS" starttime="20230602 13:06:03.187" endtime="20230602 13:06:03.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:03.188" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:03.188" endtime="20230602 13:06:03.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:03.189" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:03.188" endtime="20230602 13:06:03.189"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:06:03.621" level="INFO">Image "reporter_macos_option_datatable.png" found at (389, 276)</msg>
<status status="PASS" starttime="20230602 13:06:03.189" endtime="20230602 13:06:03.621"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:06:04.029" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_datatable.png" found at Box(left=344, top=269, width=90, height=14)</msg>
<msg timestamp="20230602 13:06:04.030" level="INFO">@{coordinates} = [ 389 | 276 ]</msg>
<status status="PASS" starttime="20230602 13:06:03.622" endtime="20230602 13:06:04.030"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:06:04.466" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_datatable.png" found at Box(left=344, top=269, width=90, height=14)</msg>
<msg timestamp="20230602 13:06:04.467" level="INFO">Clicking image "reporter_macos_option_datatable.png" in position (389, 276)</msg>
<status status="PASS" starttime="20230602 13:06:04.030" endtime="20230602 13:06:04.622"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:05.123" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:04.622" endtime="20230602 13:06:05.124"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:05.124" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:05.124" endtime="20230602 13:06:05.406"/>
</kw>
<status status="PASS" starttime="20230602 13:06:03.185" endtime="20230602 13:06:05.407"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:05.408" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 13:06:05.408" endtime="20230602 13:06:05.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:05.409" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 13:06:05.409" endtime="20230602 13:06:05.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:05.409" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:05.409" endtime="20230602 13:06:05.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:05.409" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:05.409" endtime="20230602 13:06:05.409"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:06:05.825" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 13:06:05.409" endtime="20230602 13:06:05.825"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:06:06.300" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:06:06.301" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 13:06:05.825" endtime="20230602 13:06:06.301"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 13:06:06.714" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 13:06:06.714" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 13:06:06.301" endtime="20230602 13:06:06.864"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:07.366" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:06.864" endtime="20230602 13:06:07.366"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:07.367" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:07.366" endtime="20230602 13:06:07.666"/>
</kw>
<status status="PASS" starttime="20230602 13:06:05.408" endtime="20230602 13:06:07.666"/>
</kw>
<status status="PASS" starttime="20230602 13:06:05.407" endtime="20230602 13:06:07.666"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:07.668" level="INFO">${labell} = showgraphcolours</msg>
<status status="PASS" starttime="20230602 13:06:07.667" endtime="20230602 13:06:07.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:07.668" level="INFO">${img} = reporter_macos_label_showgraphcolours.png</msg>
<status status="PASS" starttime="20230602 13:06:07.668" endtime="20230602 13:06:07.668"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:07.669" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=131x19 at 0x1153A1110&gt;</msg>
<status status="PASS" starttime="20230602 13:06:07.668" endtime="20230602 13:06:07.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:07.670" level="INFO">${imgsize} = (131, 19)</msg>
<status status="PASS" starttime="20230602 13:06:07.669" endtime="20230602 13:06:07.670"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 13:06:07.670" endtime="20230602 13:06:07.670"/>
</return>
<msg timestamp="20230602 13:06:07.670" level="INFO">${imgsize} = (131, 19)</msg>
<status status="PASS" starttime="20230602 13:06:07.668" endtime="20230602 13:06:07.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:07.671" level="INFO">(131, 19)</msg>
<status status="PASS" starttime="20230602 13:06:07.671" endtime="20230602 13:06:07.671"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:07.671" level="INFO">${offsetx} = 70</msg>
<status status="PASS" starttime="20230602 13:06:07.671" endtime="20230602 13:06:07.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:07.671" level="INFO">70</msg>
<status status="PASS" starttime="20230602 13:06:07.671" endtime="20230602 13:06:07.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:07.672" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:07.672" endtime="20230602 13:06:07.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:07.672" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:07.672" endtime="20230602 13:06:07.672"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:06:10.484" level="INFO">Image "reporter_macos_label_showgraphcolours.png" found at (325, 185)</msg>
<status status="PASS" starttime="20230602 13:06:07.672" endtime="20230602 13:06:10.484"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:06:10.875" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_showgraphcolours.png" found at Box(left=260, top=176, width=131, height=19)</msg>
<msg timestamp="20230602 13:06:10.875" level="INFO">@{coordinates} = [ 325 | 185 ]</msg>
<status status="PASS" starttime="20230602 13:06:10.485" endtime="20230602 13:06:10.875"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:10.877" level="INFO">${x} = 395</msg>
<status status="PASS" starttime="20230602 13:06:10.876" endtime="20230602 13:06:10.877"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:10.877" level="INFO">${y} = 185</msg>
<status status="PASS" starttime="20230602 13:06:10.877" endtime="20230602 13:06:10.877"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 13:06:10.878" level="INFO">@{coordinates} = [ 395 | 185 ]</msg>
<status status="PASS" starttime="20230602 13:06:10.878" endtime="20230602 13:06:10.878"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 13:06:10.879" endtime="20230602 13:06:11.011"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 13:06:11.011" endtime="20230602 13:06:11.144"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:11.657" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:11.144" endtime="20230602 13:06:11.657"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:11.658" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:11.658" endtime="20230602 13:06:11.985"/>
</kw>
<status status="PASS" starttime="20230602 13:06:07.667" endtime="20230602 13:06:11.985"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:11.987" level="INFO">${labell} = datatype</msg>
<status status="PASS" starttime="20230602 13:06:11.986" endtime="20230602 13:06:11.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:11.987" level="INFO">${img} = reporter_macos_label_datatype.png</msg>
<status status="PASS" starttime="20230602 13:06:11.987" endtime="20230602 13:06:11.987"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:11.988" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=136x22 at 0x115384F50&gt;</msg>
<status status="PASS" starttime="20230602 13:06:11.988" endtime="20230602 13:06:11.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:11.989" level="INFO">${imgsize} = (136, 22)</msg>
<status status="PASS" starttime="20230602 13:06:11.989" endtime="20230602 13:06:11.989"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 13:06:11.989" endtime="20230602 13:06:11.990"/>
</return>
<msg timestamp="20230602 13:06:11.990" level="INFO">${imgsize} = (136, 22)</msg>
<status status="PASS" starttime="20230602 13:06:11.987" endtime="20230602 13:06:11.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:11.991" level="INFO">(136, 22)</msg>
<status status="PASS" starttime="20230602 13:06:11.990" endtime="20230602 13:06:11.991"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:11.991" level="INFO">${offsetx} = 73</msg>
<status status="PASS" starttime="20230602 13:06:11.991" endtime="20230602 13:06:11.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:11.991" level="INFO">73</msg>
<status status="PASS" starttime="20230602 13:06:11.991" endtime="20230602 13:06:11.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:11.992" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:11.991" endtime="20230602 13:06:11.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:11.992" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:11.992" endtime="20230602 13:06:11.992"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 13:06:12.413" level="INFO">Image "reporter_macos_label_datatype.png" found at (330, 209)</msg>
<status status="PASS" starttime="20230602 13:06:11.992" endtime="20230602 13:06:12.413"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 13:06:12.847" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_datatype.png" found at Box(left=262, top=198, width=136, height=22)</msg>
<msg timestamp="20230602 13:06:12.848" level="INFO">@{coordinates} = [ 330 | 209 ]</msg>
<status status="PASS" starttime="20230602 13:06:12.414" endtime="20230602 13:06:12.848"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:12.849" level="INFO">${x} = 403</msg>
<status status="PASS" starttime="20230602 13:06:12.848" endtime="20230602 13:06:12.849"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 13:06:12.849" level="INFO">${y} = 209</msg>
<status status="PASS" starttime="20230602 13:06:12.849" endtime="20230602 13:06:12.850"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 13:06:12.850" level="INFO">@{coordinates} = [ 403 | 209 ]</msg>
<status status="PASS" starttime="20230602 13:06:12.850" endtime="20230602 13:06:12.850"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 13:06:12.850" endtime="20230602 13:06:12.972"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 13:06:12.972" endtime="20230602 13:06:13.128"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:06:13.629" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:06:13.129" endtime="20230602 13:06:13.629"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:06:13.630" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:06:13.629" endtime="20230602 13:06:13.929"/>
</kw>
<status status="PASS" starttime="20230602 13:06:11.986" endtime="20230602 13:06:13.930"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 13:06:13.931" level="INFO">${optnamel} = result</msg>
<status status="PASS" starttime="20230602 13:06:13.931" endtime="20230602 13:06:13.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:06:13.932" level="INFO">${img} = reporter_macos_option_result.png</msg>
<status status="PASS" starttime="20230602 13:06:13.931" endtime="20230602 13:06:13.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:13.932" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 13:06:13.932" endtime="20230602 13:06:13.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:06:13.932" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 13:06:13.932" endtime="20230602 13:06:13.932"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:11:14.024" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:11:14.019" endtime="20230602 13:11:14.344"/>
</kw>
<msg timestamp="20230602 13:11:14.345" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_result.png" was not found on screen</msg>
<status status="FAIL" starttime="20230602 13:06:13.932" endtime="20230602 13:11:14.349"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.349" endtime="20230602 13:11:14.349"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.349" endtime="20230602 13:11:14.349"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.350" endtime="20230602 13:11:14.350"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.350" endtime="20230602 13:11:14.350"/>
</kw>
<status status="FAIL" starttime="20230602 13:06:13.930" endtime="20230602 13:11:14.350"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<status status="NOT RUN" starttime="20230602 13:11:14.350" endtime="20230602 13:11:14.350"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<status status="NOT RUN" starttime="20230602 13:11:14.350" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.351" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Find Text">
<arg>Filter Type:</arg>
<status status="NOT RUN" starttime="20230602 13:11:14.351" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Find Text">
<arg>Result Name</arg>
<status status="NOT RUN" starttime="20230602 13:11:14.351" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.351" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.351" endtime="20230602 13:11:14.351"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:11:14.353" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 13:11:14.353" endtime="20230602 13:11:14.353"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:11:14.354" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 13:11:14.353" endtime="20230602 13:11:14.354"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.354" endtime="20230602 13:11:14.354"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:11:14.354" endtime="20230602 13:11:14.354"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 13:11:14.354" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 13:11:14.355" level="INFO">Process completed.</msg>
<msg timestamp="20230602 13:11:14.355" level="INFO">${result} = &lt;result object with rc -6&gt;</msg>
<status status="PASS" starttime="20230602 13:11:14.354" endtime="20230602 13:11:14.355"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:11:14.356" level="INFO">objc[10319]: Invalid or prematurely-freed autorelease pool 0x7f93841fedd8.</msg>
<status status="PASS" starttime="20230602 13:11:14.355" endtime="20230602 13:11:14.356"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:11:14.356" endtime="20230602 13:11:14.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 13:11:14.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230602 13:11:14.358" level="FAIL">-6 != 0</msg>
<status status="FAIL" starttime="20230602 13:11:14.357" endtime="20230602 13:11:14.358"/>
</kw>
<status status="FAIL" starttime="20230602 13:11:14.355" endtime="20230602 13:11:14.359"/>
</kw>
<status status="FAIL" starttime="20230602 13:11:14.354" endtime="20230602 13:11:14.359"/>
</branch>
<status status="FAIL" starttime="20230602 13:11:14.354" endtime="20230602 13:11:14.359"/>
</if>
<status status="FAIL" starttime="20230602 13:11:14.353" endtime="20230602 13:11:14.359"/>
</branch>
<status status="FAIL" starttime="20230602 13:11:14.353" endtime="20230602 13:11:14.359"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:11:14.360" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:11:14.359" endtime="20230602 13:11:14.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:11:14.877" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:11:14.360" endtime="20230602 13:11:14.877"/>
</kw>
<status status="FAIL" starttime="20230602 13:11:14.352" endtime="20230602 13:11:14.877">-6 != 0</status>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 13:05:44.950" endtime="20230602 13:11:14.877">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_result.png" was not found on screen

Also teardown failed:
-6 != 0</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="101">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 13:11:14.880" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 13:11:14.880" endtime="20230602 13:11:14.880"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:11:14.881" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.881"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.881"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.882"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.882"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:11:14.882" endtime="20230602 13:11:14.882"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:11:14.882" endtime="20230602 13:11:14.882"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:11:14.882" endtime="20230602 13:11:14.882"/>
</branch>
<status status="NOT RUN" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.882"/>
</if>
<status status="NOT RUN" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.882"/>
</branch>
<status status="PASS" starttime="20230602 13:11:14.881" endtime="20230602 13:11:14.882"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:11:14.883" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:11:14.882" endtime="20230602 13:11:14.883"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:11:15.430" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:11:14.883" endtime="20230602 13:11:15.430"/>
</kw>
<status status="PASS" starttime="20230602 13:11:14.880" endtime="20230602 13:11:15.430"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 13:11:14.879" endtime="20230602 13:11:15.430">AssertionError</status>
</test>
<status status="FAIL" starttime="20230602 13:05:15.615" endtime="20230602 13:11:15.431"/>
</suite>
<status status="FAIL" starttime="20230602 13:04:41.082" endtime="20230602 13:11:15.433"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
