<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on darwin)" generated="20230530 04:27:13.478" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 04:27:13.519" endtime="20230530 04:27:13.519"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230530 04:27:13.520" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.520" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230530 04:27:13.519" endtime="20230530 04:27:13.520"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230530 04:27:13.521" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.521" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.521" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.522" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.522" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.522" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.522" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.522" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.523" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.523" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.524" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.524" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.524" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.524" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.524" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 04:27:13.525" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230530 04:27:13.520" endtime="20230530 04:27:13.525"/>
</kw>
<status status="PASS" starttime="20230530 04:27:13.518" endtime="20230530 04:27:13.525"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 04:27:13.529" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 04:27:23.699" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230530 04:27:13.526" endtime="20230530 04:27:23.699"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 04:27:23.700" endtime="20230530 04:27:23.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:23.701" endtime="20230530 04:27:23.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:23.701" endtime="20230530 04:27:23.702"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:13.525" endtime="20230530 04:27:23.702"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 04:27:23.706" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 04:27:24.790" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230530 04:27:23.703" endtime="20230530 04:27:24.790"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 04:27:24.790" endtime="20230530 04:27:24.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:24.791" endtime="20230530 04:27:24.791"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:23.702" endtime="20230530 04:27:24.791"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:24.793" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:24.792" endtime="20230530 04:27:24.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:24.793" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:24.793" endtime="20230530 04:27:24.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:24.794" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:24.793" endtime="20230530 04:27:24.794"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:24.794" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:24.794" endtime="20230530 04:27:24.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:24.795" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:24.794" endtime="20230530 04:27:24.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:24.795" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:24.795" endtime="20230530 04:27:24.795"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:24.795" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:24.795" endtime="20230530 04:27:24.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:24.796" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:24.795" endtime="20230530 04:27:24.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:24.796" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:24.796" endtime="20230530 04:27:24.796"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:24.796" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:24.796" endtime="20230530 04:27:24.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:24.797" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:24.797" endtime="20230530 04:27:24.797"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 04:27:24.800" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 04:27:30.138" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 04:27:24.797" endtime="20230530 04:27:30.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:30.139" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230530 04:27:30.138" endtime="20230530 04:27:30.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:30.139" endtime="20230530 04:27:30.139"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:30.140" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:30.139" endtime="20230530 04:27:30.140"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:24.792" endtime="20230530 04:27:30.140"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:30.141" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:30.141" endtime="20230530 04:27:30.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:30.141" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:30.141" endtime="20230530 04:27:30.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:30.142" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:30.141" endtime="20230530 04:27:30.142"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:30.142" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:30.142" endtime="20230530 04:27:30.142"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 04:27:30.142" endtime="20230530 04:27:30.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:30.143" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:30.142" endtime="20230530 04:27:30.143"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:30.143" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:30.143" endtime="20230530 04:27:30.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:30.143" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:30.143" endtime="20230530 04:27:30.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:30.144" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:30.143" endtime="20230530 04:27:30.144"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:30.144" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:30.144" endtime="20230530 04:27:30.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:30.145" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:30.144" endtime="20230530 04:27:30.145"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 04:27:30.148" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 04:27:36.508" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 04:27:30.145" endtime="20230530 04:27:36.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:36.509" level="INFO">
</msg>
<status status="PASS" starttime="20230530 04:27:36.508" endtime="20230530 04:27:36.509"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:36.509" endtime="20230530 04:27:36.509"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:36.510" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:36.509" endtime="20230530 04:27:36.510"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:30.140" endtime="20230530 04:27:36.510"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:36.513" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:36.512" endtime="20230530 04:27:36.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:36.513" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:36.513" endtime="20230530 04:27:36.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:36.513" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:36.513" endtime="20230530 04:27:36.513"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:36.513" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:36.513" endtime="20230530 04:27:36.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:36.514" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 04:27:36.514" endtime="20230530 04:27:36.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:36.514" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:36.514" endtime="20230530 04:27:36.514"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:36.514" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:36.514" endtime="20230530 04:27:36.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:36.515" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:27:36.515" endtime="20230530 04:27:36.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:36.515" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:36.515" endtime="20230530 04:27:36.515"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:36.515" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:36.515" endtime="20230530 04:27:36.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:36.516" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 04:27:36.515" endtime="20230530 04:27:36.516"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 04:27:36.519" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 04:27:41.972" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 04:27:36.516" endtime="20230530 04:27:41.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:41.973" level="INFO">
</msg>
<status status="PASS" starttime="20230530 04:27:41.972" endtime="20230530 04:27:41.973"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:41.973" endtime="20230530 04:27:41.973"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:27:41.974" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:27:41.973" endtime="20230530 04:27:41.974"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230530 04:27:36.510" endtime="20230530 04:27:41.974"/>
</test>
<status status="PASS" starttime="20230530 04:27:13.502" endtime="20230530 04:27:41.975"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 04:27:48.015" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 04:27:48.014" endtime="20230530 04:27:48.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:48.015" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x10b816f10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 04:27:48.015" endtime="20230530 04:27:48.015"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 04:27:48.017" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 04:27:48.016" endtime="20230530 04:27:48.017"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 04:27:48.018" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 04:27:48.017" endtime="20230530 04:27:48.018"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:27:48.019" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:27:48.018" endtime="20230530 04:27:48.019"/>
</kw>
<status status="PASS" starttime="20230530 04:27:48.016" endtime="20230530 04:27:48.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:48.019" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 04:27:48.019" endtime="20230530 04:27:48.019"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:27:48.024" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:27:48.024" endtime="20230530 04:27:48.024"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 04:27:48.024" endtime="20230530 04:27:48.024"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 04:27:48.025" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 04:27:48.024" endtime="20230530 04:27:48.032"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 04:27:48.032" endtime="20230530 04:27:48.033"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:27:48.033" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:27:48.033" endtime="20230530 04:27:48.412"/>
</kw>
<status status="PASS" starttime="20230530 04:27:48.023" endtime="20230530 04:27:48.413"/>
</kw>
<status status="PASS" starttime="20230530 04:27:48.020" endtime="20230530 04:27:48.413"/>
</kw>
<status status="PASS" starttime="20230530 04:27:48.013" endtime="20230530 04:27:48.413"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:27:48.414" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 04:27:48.414" endtime="20230530 04:27:48.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:48.414" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 04:27:48.414" endtime="20230530 04:27:48.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:48.415" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:27:48.414" endtime="20230530 04:27:48.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:48.415" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:27:48.415" endtime="20230530 04:27:48.415"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:27:51.458" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 04:27:48.415" endtime="20230530 04:27:51.458"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:27:51.863" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:27:51.864" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 04:27:51.459" endtime="20230530 04:27:51.864"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:27:52.276" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:27:52.276" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 04:27:51.865" endtime="20230530 04:27:52.582"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:27:52.693" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:27:52.583" endtime="20230530 04:27:52.693"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:27:52.693" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:27:52.693" endtime="20230530 04:27:52.993"/>
</kw>
<status status="PASS" starttime="20230530 04:27:48.413" endtime="20230530 04:27:52.994"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:52.995" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 04:27:52.995" endtime="20230530 04:27:52.995"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:27:52.995" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 04:27:52.995" endtime="20230530 04:27:52.995"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:27:53.375" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 04:27:53.375" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 04:27:53.000" endtime="20230530 04:27:53.559"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:27:53.560" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:27:53.559" endtime="20230530 04:27:54.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:27:54.578" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:27:54.078" endtime="20230530 04:27:54.578"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 04:27:54.580" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 04:27:54.580" level="INFO">Process completed.</msg>
<msg timestamp="20230530 04:27:54.580" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 04:27:54.579" endtime="20230530 04:27:54.580"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:27:54.580" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 04:27:54.580" endtime="20230530 04:27:54.580"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:54.582" level="INFO"/>
<status status="PASS" starttime="20230530 04:27:54.581" endtime="20230530 04:27:54.582"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:27:54.582" endtime="20230530 04:27:54.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 04:27:54.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 04:27:54.583" endtime="20230530 04:27:54.584"/>
</kw>
<status status="PASS" starttime="20230530 04:27:54.581" endtime="20230530 04:27:54.584"/>
</kw>
<status status="PASS" starttime="20230530 04:27:54.581" endtime="20230530 04:27:54.584"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 04:27:54.584" endtime="20230530 04:27:54.584"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 04:27:54.584" endtime="20230530 04:27:54.584"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:27:54.585" endtime="20230530 04:27:54.585"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 04:27:54.585" endtime="20230530 04:27:54.585"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:27:54.584" endtime="20230530 04:27:54.585"/>
</branch>
<status status="PASS" starttime="20230530 04:27:54.581" endtime="20230530 04:27:54.585"/>
</if>
<status status="PASS" starttime="20230530 04:27:54.579" endtime="20230530 04:27:54.585"/>
</kw>
<status status="PASS" starttime="20230530 04:27:53.000" endtime="20230530 04:27:54.585"/>
</kw>
<status status="PASS" starttime="20230530 04:27:52.996" endtime="20230530 04:27:54.585"/>
</kw>
<status status="PASS" starttime="20230530 04:27:52.996" endtime="20230530 04:27:54.585"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 04:27:54.586" endtime="20230530 04:27:54.586"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:27:54.586" endtime="20230530 04:27:54.586"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:27:54.585" endtime="20230530 04:27:54.586"/>
</branch>
<status status="PASS" starttime="20230530 04:27:52.995" endtime="20230530 04:27:54.586"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:27:55.089" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:27:54.586" endtime="20230530 04:27:55.089"/>
</kw>
<status status="PASS" starttime="20230530 04:27:52.994" endtime="20230530 04:27:55.089"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:48.013" endtime="20230530 04:27:55.090"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 04:27:55.092" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 04:27:55.091" endtime="20230530 04:27:55.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:55.092" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x10b816f10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 04:27:55.092" endtime="20230530 04:27:55.093"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 04:27:55.093" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 04:27:55.093" endtime="20230530 04:27:55.093"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 04:27:55.094" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 04:27:55.094" endtime="20230530 04:27:55.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:27:55.094" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:27:55.094" endtime="20230530 04:27:55.095"/>
</kw>
<status status="PASS" starttime="20230530 04:27:55.093" endtime="20230530 04:27:55.095"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:55.095" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 04:27:55.095" endtime="20230530 04:27:55.095"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:27:55.101" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:27:55.100" endtime="20230530 04:27:55.101"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 04:27:55.101" endtime="20230530 04:27:55.101"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 04:27:55.102" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 04:27:55.101" endtime="20230530 04:27:55.110"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 04:27:55.110" endtime="20230530 04:27:55.111"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:27:55.112" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:27:55.111" endtime="20230530 04:27:55.414"/>
</kw>
<status status="PASS" starttime="20230530 04:27:55.100" endtime="20230530 04:27:55.414"/>
</kw>
<status status="PASS" starttime="20230530 04:27:55.095" endtime="20230530 04:27:55.414"/>
</kw>
<status status="PASS" starttime="20230530 04:27:55.091" endtime="20230530 04:27:55.414"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:27:55.415" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 04:27:55.415" endtime="20230530 04:27:55.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:55.416" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 04:27:55.416" endtime="20230530 04:27:55.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:55.416" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:27:55.416" endtime="20230530 04:27:55.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:55.417" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:27:55.416" endtime="20230530 04:27:55.417"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:27:57.831" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 04:27:55.417" endtime="20230530 04:27:57.831"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:27:58.267" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:27:58.268" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 04:27:57.832" endtime="20230530 04:27:58.268"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:27:58.706" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:27:58.707" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 04:27:58.269" endtime="20230530 04:27:58.838"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:27:58.940" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:27:58.839" endtime="20230530 04:27:58.940"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:27:58.941" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:27:58.940" endtime="20230530 04:27:59.226"/>
</kw>
<status status="PASS" starttime="20230530 04:27:55.415" endtime="20230530 04:27:59.226"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:27:59.227" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230530 04:27:59.227" endtime="20230530 04:27:59.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:27:59.228" level="INFO">${img} = reporter_macos_tab_preview.png</msg>
<status status="PASS" starttime="20230530 04:27:59.228" endtime="20230530 04:27:59.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:59.228" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:27:59.228" endtime="20230530 04:27:59.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:27:59.228" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:27:59.228" endtime="20230530 04:27:59.228"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:27:59.723" level="INFO">Image "reporter_macos_tab_preview.png" found at (482, 103)</msg>
<status status="PASS" starttime="20230530 04:27:59.229" endtime="20230530 04:27:59.724"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:00.164" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230530 04:28:00.164" level="INFO">@{coordinates} = [ 482 | 103 ]</msg>
<status status="PASS" starttime="20230530 04:27:59.724" endtime="20230530 04:28:00.164"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:00.577" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230530 04:28:00.577" level="INFO">Clicking image "reporter_macos_tab_preview.png" in position (482, 103)</msg>
<status status="PASS" starttime="20230530 04:28:00.165" endtime="20230530 04:28:00.711"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:00.833" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:00.711" endtime="20230530 04:28:00.833"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:00.833" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:00.833" endtime="20230530 04:28:01.116"/>
</kw>
<status status="PASS" starttime="20230530 04:27:59.226" endtime="20230530 04:28:01.116"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:01.118" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 04:28:01.117" endtime="20230530 04:28:01.118"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:01.118" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 04:28:01.118" endtime="20230530 04:28:01.118"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:01.526" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 04:28:01.526" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 04:28:01.123" endtime="20230530 04:28:01.698"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:01.701" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:01.699" endtime="20230530 04:28:02.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:02.790" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:02.281" endtime="20230530 04:28:02.790"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 04:28:02.791" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 04:28:02.791" level="INFO">Process completed.</msg>
<msg timestamp="20230530 04:28:02.791" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 04:28:02.790" endtime="20230530 04:28:02.791"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:02.792" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 04:28:02.791" endtime="20230530 04:28:02.792"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:02.793" level="INFO"/>
<status status="PASS" starttime="20230530 04:28:02.792" endtime="20230530 04:28:02.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:28:02.793" endtime="20230530 04:28:02.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 04:28:02.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 04:28:02.794" endtime="20230530 04:28:02.795"/>
</kw>
<status status="PASS" starttime="20230530 04:28:02.792" endtime="20230530 04:28:02.795"/>
</kw>
<status status="PASS" starttime="20230530 04:28:02.792" endtime="20230530 04:28:02.795"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 04:28:02.795" endtime="20230530 04:28:02.795"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 04:28:02.795" endtime="20230530 04:28:02.795"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:02.795" endtime="20230530 04:28:02.795"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 04:28:02.795" endtime="20230530 04:28:02.795"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:02.795" endtime="20230530 04:28:02.795"/>
</branch>
<status status="PASS" starttime="20230530 04:28:02.792" endtime="20230530 04:28:02.795"/>
</if>
<status status="PASS" starttime="20230530 04:28:02.790" endtime="20230530 04:28:02.795"/>
</kw>
<status status="PASS" starttime="20230530 04:28:01.123" endtime="20230530 04:28:02.796"/>
</kw>
<status status="PASS" starttime="20230530 04:28:01.118" endtime="20230530 04:28:02.796"/>
</kw>
<status status="PASS" starttime="20230530 04:28:01.118" endtime="20230530 04:28:02.796"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 04:28:02.796" endtime="20230530 04:28:02.796"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:02.796" endtime="20230530 04:28:02.796"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:02.796" endtime="20230530 04:28:02.796"/>
</branch>
<status status="PASS" starttime="20230530 04:28:01.118" endtime="20230530 04:28:02.796"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:03.312" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:02.796" endtime="20230530 04:28:03.312"/>
</kw>
<status status="PASS" starttime="20230530 04:28:01.117" endtime="20230530 04:28:03.312"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:27:55.090" endtime="20230530 04:28:03.312"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.313" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230530 04:28:03.313" endtime="20230530 04:28:03.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.314" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:28:03.313" endtime="20230530 04:28:03.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.314" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230530 04:28:03.314" endtime="20230530 04:28:03.314"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:28:03.314" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:28:03.314" endtime="20230530 04:28:03.315"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 04:28:03.315" endtime="20230530 04:28:03.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.315" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:28:03.315" endtime="20230530 04:28:03.315"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 04:28:03.316" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 04:28:03.315" endtime="20230530 04:28:03.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:03.316" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:28:03.316" endtime="20230530 04:28:03.316"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230530 04:28:03.316" level="INFO">${epoch} = 1685420883</msg>
<status status="PASS" starttime="20230530 04:28:03.316" endtime="20230530 04:28:03.316"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 04:28:03.317" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 04:28:03.317" endtime="20230530 04:28:03.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:03.318" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x10b816f10&gt;, '@{appargs}': ['-i', 'blank_1685420883.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 04:28:03.317" endtime="20230530 04:28:03.318"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 04:28:03.318" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 04:28:03.318" endtime="20230530 04:28:03.318"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 04:28:03.319" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 04:28:03.318" endtime="20230530 04:28:03.319"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:28:03.319" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:28:03.319" endtime="20230530 04:28:03.319"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.318" endtime="20230530 04:28:03.319"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.320" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 04:28:03.319" endtime="20230530 04:28:03.320"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:28:03.324" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:28:03.324" endtime="20230530 04:28:03.325"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 04:28:03.325" endtime="20230530 04:28:03.325"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 04:28:03.326" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1685420883.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 04:28:03.325" endtime="20230530 04:28:03.332"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 04:28:03.333" endtime="20230530 04:28:03.334"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:03.334" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:03.334" endtime="20230530 04:28:03.621"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.324" endtime="20230530 04:28:03.621"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.320" endtime="20230530 04:28:03.622"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.316" endtime="20230530 04:28:03.622"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:03.623" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 04:28:03.623" endtime="20230530 04:28:03.623"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:03.624" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 04:28:03.623" endtime="20230530 04:28:03.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:03.624" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:03.624" endtime="20230530 04:28:03.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:03.624" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:03.624" endtime="20230530 04:28:03.624"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:05.588" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 04:28:03.624" endtime="20230530 04:28:05.588"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:06.006" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:28:06.007" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 04:28:05.589" endtime="20230530 04:28:06.007"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:06.428" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:28:06.428" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 04:28:06.007" endtime="20230530 04:28:06.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:06.659" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:06.558" endtime="20230530 04:28:06.660"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:06.660" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:06.660" endtime="20230530 04:28:06.936"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.623" endtime="20230530 04:28:06.937"/>
</kw>
<status status="PASS" starttime="20230530 04:28:03.622" endtime="20230530 04:28:06.937"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:06.938" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 04:28:06.937" endtime="20230530 04:28:06.938"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:06.938" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 04:28:06.938" endtime="20230530 04:28:06.938"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:07.337" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 04:28:07.337" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 04:28:06.943" endtime="20230530 04:28:07.466"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:07.468" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:07.467" endtime="20230530 04:28:07.842"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:08.344" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:07.842" endtime="20230530 04:28:08.344"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 04:28:08.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 04:28:08.345" level="INFO">Process completed.</msg>
<msg timestamp="20230530 04:28:08.345" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 04:28:08.345" endtime="20230530 04:28:08.345"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:08.346" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 04:28:08.346" endtime="20230530 04:28:08.346"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:08.348" level="INFO"/>
<status status="PASS" starttime="20230530 04:28:08.347" endtime="20230530 04:28:08.348"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:28:08.348" endtime="20230530 04:28:08.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 04:28:08.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 04:28:08.349" endtime="20230530 04:28:08.349"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.346" endtime="20230530 04:28:08.349"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.346" endtime="20230530 04:28:08.349"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 04:28:08.350" endtime="20230530 04:28:08.350"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 04:28:08.350" endtime="20230530 04:28:08.350"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:08.350" endtime="20230530 04:28:08.350"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 04:28:08.350" endtime="20230530 04:28:08.350"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:08.349" endtime="20230530 04:28:08.350"/>
</branch>
<status status="PASS" starttime="20230530 04:28:08.346" endtime="20230530 04:28:08.350"/>
</if>
<status status="PASS" starttime="20230530 04:28:08.344" endtime="20230530 04:28:08.350"/>
</kw>
<status status="PASS" starttime="20230530 04:28:06.943" endtime="20230530 04:28:08.350"/>
</kw>
<status status="PASS" starttime="20230530 04:28:06.939" endtime="20230530 04:28:08.350"/>
</kw>
<status status="PASS" starttime="20230530 04:28:06.938" endtime="20230530 04:28:08.351"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 04:28:08.351" endtime="20230530 04:28:08.351"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:08.351" endtime="20230530 04:28:08.351"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:08.351" endtime="20230530 04:28:08.351"/>
</branch>
<status status="PASS" starttime="20230530 04:28:06.938" endtime="20230530 04:28:08.351"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:08.852" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:08.351" endtime="20230530 04:28:08.852"/>
</kw>
<status status="PASS" starttime="20230530 04:28:06.937" endtime="20230530 04:28:08.852"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:28:03.313" endtime="20230530 04:28:08.852"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 04:28:08.855" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 04:28:08.854" endtime="20230530 04:28:08.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:08.855" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x10b816f10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 04:28:08.855" endtime="20230530 04:28:08.855"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 04:28:08.856" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 04:28:08.855" endtime="20230530 04:28:08.856"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 04:28:08.856" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 04:28:08.856" endtime="20230530 04:28:08.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:28:08.857" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:28:08.857" endtime="20230530 04:28:08.857"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.855" endtime="20230530 04:28:08.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:08.857" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 04:28:08.857" endtime="20230530 04:28:08.857"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 04:28:08.863" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 04:28:08.862" endtime="20230530 04:28:08.863"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 04:28:08.863" endtime="20230530 04:28:08.863"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 04:28:08.864" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 04:28:08.863" endtime="20230530 04:28:08.871"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 04:28:08.872" endtime="20230530 04:28:08.873"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:08.873" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:08.873" endtime="20230530 04:28:09.165"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.862" endtime="20230530 04:28:09.165"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.858" endtime="20230530 04:28:09.166"/>
</kw>
<status status="PASS" starttime="20230530 04:28:08.853" endtime="20230530 04:28:09.166"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:09.167" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 04:28:09.167" endtime="20230530 04:28:09.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:09.167" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 04:28:09.167" endtime="20230530 04:28:09.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:09.168" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:09.167" endtime="20230530 04:28:09.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:09.168" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:09.168" endtime="20230530 04:28:09.168"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:11.630" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 04:28:09.168" endtime="20230530 04:28:11.631"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:12.061" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:28:12.062" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 04:28:11.631" endtime="20230530 04:28:12.062"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:12.478" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 04:28:12.478" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 04:28:12.062" endtime="20230530 04:28:12.623"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:12.735" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:12.623" endtime="20230530 04:28:12.736"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:12.736" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:12.736" endtime="20230530 04:28:13.022"/>
</kw>
<status status="PASS" starttime="20230530 04:28:09.166" endtime="20230530 04:28:13.022"/>
</kw>
<kw name="Click Section">
<arg>toc</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:13.024" level="INFO">${sectnamel} = toc</msg>
<status status="PASS" starttime="20230530 04:28:13.023" endtime="20230530 04:28:13.024"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:13.024" level="INFO">${img} = reporter_macos_section_toc.png</msg>
<status status="PASS" starttime="20230530 04:28:13.024" endtime="20230530 04:28:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:13.024" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:13.024" endtime="20230530 04:28:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:13.024" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:13.024" endtime="20230530 04:28:13.025"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:13.422" level="INFO">Image "reporter_macos_section_toc.png" found at (52, 161)</msg>
<status status="PASS" starttime="20230530 04:28:13.025" endtime="20230530 04:28:13.423"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:13.821" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_toc.png" found at Box(left=39, top=154, width=26, height=14)</msg>
<msg timestamp="20230530 04:28:13.822" level="INFO">@{coordinates} = [ 52 | 161 ]</msg>
<status status="PASS" starttime="20230530 04:28:13.423" endtime="20230530 04:28:13.822"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:14.219" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_toc.png" found at Box(left=39, top=154, width=26, height=14)</msg>
<msg timestamp="20230530 04:28:14.219" level="INFO">Clicking image "reporter_macos_section_toc.png" in position (52, 161)</msg>
<status status="PASS" starttime="20230530 04:28:13.822" endtime="20230530 04:28:14.345"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:14.455" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:14.346" endtime="20230530 04:28:14.455"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:14.455" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:14.455" endtime="20230530 04:28:14.727"/>
</kw>
<status status="PASS" starttime="20230530 04:28:13.023" endtime="20230530 04:28:14.727"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:14.728" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230530 04:28:14.728" endtime="20230530 04:28:14.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:14.729" level="INFO">${img} = reporter_macos_section_report.png</msg>
<status status="PASS" starttime="20230530 04:28:14.729" endtime="20230530 04:28:14.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:14.729" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:14.729" endtime="20230530 04:28:14.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:14.729" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:14.729" endtime="20230530 04:28:14.729"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:15.138" level="INFO">Image "reporter_macos_section_report.png" found at (42, 142)</msg>
<status status="PASS" starttime="20230530 04:28:14.730" endtime="20230530 04:28:15.138"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:15.543" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230530 04:28:15.544" level="INFO">@{coordinates} = [ 42 | 142 ]</msg>
<status status="PASS" starttime="20230530 04:28:15.139" endtime="20230530 04:28:15.544"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:15.945" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230530 04:28:15.945" level="INFO">Clicking image "reporter_macos_section_report.png" in position (42, 142)</msg>
<status status="PASS" starttime="20230530 04:28:15.544" endtime="20230530 04:28:16.102"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:16.203" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:16.103" endtime="20230530 04:28:16.203"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:16.204" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:16.203" endtime="20230530 04:28:16.480"/>
</kw>
<status status="PASS" starttime="20230530 04:28:14.728" endtime="20230530 04:28:16.480"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:16.481" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:16.480" endtime="20230530 04:28:16.758"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:16.759" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230530 04:28:16.759" endtime="20230530 04:28:16.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:16.760" level="INFO">${img} = reporter_macos_button_addsection.png</msg>
<status status="PASS" starttime="20230530 04:28:16.759" endtime="20230530 04:28:16.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:16.760" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:16.760" endtime="20230530 04:28:16.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:16.760" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:16.760" endtime="20230530 04:28:16.760"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:17.151" level="INFO">Image "reporter_macos_button_addsection.png" found at (36, 109)</msg>
<status status="PASS" starttime="20230530 04:28:16.760" endtime="20230530 04:28:17.151"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:17.561" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230530 04:28:17.561" level="INFO">@{coordinates} = [ 36 | 109 ]</msg>
<status status="PASS" starttime="20230530 04:28:17.152" endtime="20230530 04:28:17.562"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:17.957" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230530 04:28:17.957" level="INFO">Clicking image "reporter_macos_button_addsection.png" in position (36, 109)</msg>
<status status="PASS" starttime="20230530 04:28:17.562" endtime="20230530 04:28:18.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:18.203" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:18.079" endtime="20230530 04:28:18.203"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:18.204" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:18.203" endtime="20230530 04:28:18.478"/>
</kw>
<status status="PASS" starttime="20230530 04:28:16.758" endtime="20230530 04:28:18.479"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230530 04:28:18.877" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_sectionname.png" found at Box(left=494, top=430, width=92, height=23)</msg>
<msg timestamp="20230530 04:28:18.877" level="INFO">Clicking 1 time(s) at (540, 461) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230530 04:28:18.479" endtime="20230530 04:28:19.063"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230530 04:28:19.063" endtime="20230530 04:28:19.691"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:19.692" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230530 04:28:19.692" endtime="20230530 04:28:19.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:19.693" level="INFO">${img} = reporter_macos_button_ok.png</msg>
<status status="PASS" starttime="20230530 04:28:19.693" endtime="20230530 04:28:19.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:19.693" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:19.693" endtime="20230530 04:28:19.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:19.693" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:19.693" endtime="20230530 04:28:19.693"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:20.099" level="INFO">Image "reporter_macos_button_ok.png" found at (520, 502)</msg>
<status status="PASS" starttime="20230530 04:28:19.693" endtime="20230530 04:28:20.099"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:20.501" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230530 04:28:20.501" level="INFO">@{coordinates} = [ 520 | 502 ]</msg>
<status status="PASS" starttime="20230530 04:28:20.099" endtime="20230530 04:28:20.501"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:20.917" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230530 04:28:20.917" level="INFO">Clicking image "reporter_macos_button_ok.png" in position (520, 502)</msg>
<status status="PASS" starttime="20230530 04:28:20.502" endtime="20230530 04:28:21.106"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:21.234" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:21.109" endtime="20230530 04:28:21.234"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:21.235" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:21.234" endtime="20230530 04:28:21.536"/>
</kw>
<status status="PASS" starttime="20230530 04:28:19.692" endtime="20230530 04:28:21.536"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:21.537" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:21.536" endtime="20230530 04:28:21.809"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 04:28:21.811" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230530 04:28:21.810" endtime="20230530 04:28:21.811"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:21.811" level="INFO">${img} = reporter_macos_section_issue#149.png</msg>
<status status="PASS" starttime="20230530 04:28:21.811" endtime="20230530 04:28:21.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:21.812" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 04:28:21.811" endtime="20230530 04:28:21.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:21.812" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 04:28:21.812" endtime="20230530 04:28:21.812"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 04:28:22.219" level="INFO">Image "reporter_macos_section_issue#149.png" found at (73, 286)</msg>
<status status="PASS" starttime="20230530 04:28:21.812" endtime="20230530 04:28:22.220"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 04:28:22.617" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=39, top=278, width=69, height=17)</msg>
<msg timestamp="20230530 04:28:22.617" level="INFO">@{coordinates} = [ 73 | 286 ]</msg>
<status status="PASS" starttime="20230530 04:28:22.220" endtime="20230530 04:28:22.617"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:23.019" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=39, top=278, width=69, height=17)</msg>
<msg timestamp="20230530 04:28:23.020" level="INFO">Clicking image "reporter_macos_section_issue#149.png" in position (73, 286)</msg>
<status status="PASS" starttime="20230530 04:28:22.617" endtime="20230530 04:28:23.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:23.250" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:23.144" endtime="20230530 04:28:23.250"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:23.251" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:23.251" endtime="20230530 04:28:23.527"/>
</kw>
<status status="PASS" starttime="20230530 04:28:21.810" endtime="20230530 04:28:23.528"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:23.529" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:23.528" endtime="20230530 04:28:23.798"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 04:28:23.800" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 04:28:23.799" endtime="20230530 04:28:23.800"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:23.801" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 04:28:23.800" endtime="20230530 04:28:23.801"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 04:28:24.192" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 04:28:24.192" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 04:28:23.805" endtime="20230530 04:28:24.306"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 04:28:24.307" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 04:28:24.307" endtime="20230530 04:28:24.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:25.117" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:24.614" endtime="20230530 04:28:25.117"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 04:28:25.119" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 04:28:25.119" level="INFO">Process completed.</msg>
<msg timestamp="20230530 04:28:25.119" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 04:28:25.118" endtime="20230530 04:28:25.119"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 04:28:25.119" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 04:28:25.119" endtime="20230530 04:28:25.119"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 04:28:25.121" level="INFO"/>
<status status="PASS" starttime="20230530 04:28:25.120" endtime="20230530 04:28:25.121"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 04:28:25.121" endtime="20230530 04:28:25.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 04:28:25.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 04:28:25.122" endtime="20230530 04:28:25.122"/>
</kw>
<status status="PASS" starttime="20230530 04:28:25.120" endtime="20230530 04:28:25.123"/>
</kw>
<status status="PASS" starttime="20230530 04:28:25.120" endtime="20230530 04:28:25.123"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 04:28:25.123" endtime="20230530 04:28:25.123"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 04:28:25.123" endtime="20230530 04:28:25.123"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:25.123" endtime="20230530 04:28:25.123"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 04:28:25.123" endtime="20230530 04:28:25.123"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:25.123" endtime="20230530 04:28:25.123"/>
</branch>
<status status="PASS" starttime="20230530 04:28:25.119" endtime="20230530 04:28:25.123"/>
</if>
<status status="PASS" starttime="20230530 04:28:25.118" endtime="20230530 04:28:25.123"/>
</kw>
<status status="PASS" starttime="20230530 04:28:23.805" endtime="20230530 04:28:25.124"/>
</kw>
<status status="PASS" starttime="20230530 04:28:23.801" endtime="20230530 04:28:25.124"/>
</kw>
<status status="PASS" starttime="20230530 04:28:23.801" endtime="20230530 04:28:25.124"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 04:28:25.124" endtime="20230530 04:28:25.124"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 04:28:25.124" endtime="20230530 04:28:25.124"/>
</kw>
<status status="NOT RUN" starttime="20230530 04:28:25.124" endtime="20230530 04:28:25.124"/>
</branch>
<status status="PASS" starttime="20230530 04:28:23.801" endtime="20230530 04:28:25.124"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 04:28:25.638" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 04:28:25.124" endtime="20230530 04:28:25.638"/>
</kw>
<status status="PASS" starttime="20230530 04:28:23.799" endtime="20230530 04:28:25.638"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 04:28:08.853" endtime="20230530 04:28:25.639"/>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="69">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230530 04:28:25.640" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230530 04:28:25.639" endtime="20230530 04:28:25.640"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230530 04:28:25.639" endtime="20230530 04:28:25.640">AssertionError</status>
</test>
<status status="FAIL" starttime="20230530 04:27:41.976" endtime="20230530 04:28:25.641"/>
</suite>
<status status="FAIL" starttime="20230530 04:27:13.480" endtime="20230530 04:28:25.642"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="1" fail="0" skip="0">Issue #149</stat>
<stat pass="9" fail="1" skip="0">macos-latest</stat>
<stat pass="9" fail="1" skip="0">ubuntu-latest</stat>
<stat pass="9" fail="1" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="9" fail="1" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="4" fail="1" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
