<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on darwin)" generated="20230529 09:29:41.186" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 09:29:41.267" endtime="20230529 09:29:41.267"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 09:29:41.268" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230529 09:29:41.268" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 09:29:41.267" endtime="20230529 09:29:41.268"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 09:29:41.269" level="INFO" html="true">File '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/*.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/*.png&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20230529 09:29:41.269" endtime="20230529 09:29:41.269"/>
</kw>
<status status="PASS" starttime="20230529 09:29:41.267" endtime="20230529 09:29:41.269"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 09:29:41.273" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 09:29:53.796" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230529 09:29:41.270" endtime="20230529 09:29:53.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 09:29:53.797" endtime="20230529 09:29:53.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:29:53.797" endtime="20230529 09:29:53.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:29:53.798" endtime="20230529 09:29:53.798"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:29:41.269" endtime="20230529 09:29:53.798"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 09:29:53.802" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 09:29:54.805" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230529 09:29:53.799" endtime="20230529 09:29:54.805"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 09:29:54.805" endtime="20230529 09:29:54.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:29:54.806" endtime="20230529 09:29:54.806"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:29:53.799" endtime="20230529 09:29:54.806"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:29:54.807" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 09:29:54.807" endtime="20230529 09:29:54.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:29:54.808" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:29:54.807" endtime="20230529 09:29:54.808"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:29:54.808" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 09:29:54.808" endtime="20230529 09:29:54.808"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:29:54.808" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:29:54.808" endtime="20230529 09:29:54.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:29:54.809" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 09:29:54.808" endtime="20230529 09:29:54.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:29:54.809" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:29:54.809" endtime="20230529 09:29:54.809"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:29:54.809" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:29:54.809" endtime="20230529 09:29:54.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:29:54.810" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:29:54.810" endtime="20230529 09:29:54.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:29:54.810" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:29:54.810" endtime="20230529 09:29:54.810"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:29:54.811" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:29:54.810" endtime="20230529 09:29:54.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:29:54.811" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:29:54.811" endtime="20230529 09:29:54.811"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 09:29:54.814" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 09:30:00.949" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 09:29:54.811" endtime="20230529 09:30:00.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:00.949" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230529 09:30:00.949" endtime="20230529 09:30:00.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:00.950" endtime="20230529 09:30:00.950"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:00.950" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:00.950" endtime="20230529 09:30:00.950"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:29:54.807" endtime="20230529 09:30:00.951"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:00.952" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 09:30:00.951" endtime="20230529 09:30:00.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:00.952" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:00.952" endtime="20230529 09:30:00.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:00.952" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 09:30:00.952" endtime="20230529 09:30:00.952"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:00.953" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:00.952" endtime="20230529 09:30:00.953"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 09:30:00.953" endtime="20230529 09:30:00.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:00.953" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:00.953" endtime="20230529 09:30:00.953"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:00.954" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:00.953" endtime="20230529 09:30:00.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:00.954" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:00.954" endtime="20230529 09:30:00.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:00.954" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:30:00.954" endtime="20230529 09:30:00.954"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:00.955" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:00.954" endtime="20230529 09:30:00.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:00.955" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:30:00.955" endtime="20230529 09:30:00.955"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 09:30:00.958" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 09:30:07.457" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 09:30:00.955" endtime="20230529 09:30:07.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:07.458" level="INFO">
</msg>
<status status="PASS" starttime="20230529 09:30:07.457" endtime="20230529 09:30:07.458"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:07.458" endtime="20230529 09:30:07.458"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:07.459" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:07.458" endtime="20230529 09:30:07.459"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:30:00.951" endtime="20230529 09:30:07.459"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:07.461" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 09:30:07.461" endtime="20230529 09:30:07.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:07.461" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:07.461" endtime="20230529 09:30:07.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:07.462" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 09:30:07.462" endtime="20230529 09:30:07.462"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:07.462" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:07.462" endtime="20230529 09:30:07.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:07.462" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 09:30:07.462" endtime="20230529 09:30:07.462"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:07.463" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:07.463" endtime="20230529 09:30:07.463"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:07.463" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:07.463" endtime="20230529 09:30:07.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:07.463" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:07.463" endtime="20230529 09:30:07.463"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:07.464" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:30:07.463" endtime="20230529 09:30:07.464"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:07.464" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:07.464" endtime="20230529 09:30:07.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:07.464" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 09:30:07.464" endtime="20230529 09:30:07.464"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 09:30:07.467" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 09:30:12.277" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 09:30:07.465" endtime="20230529 09:30:12.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:12.278" level="INFO">
</msg>
<status status="PASS" starttime="20230529 09:30:12.278" endtime="20230529 09:30:12.278"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:12.278" endtime="20230529 09:30:12.279"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:12.279" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:12.279" endtime="20230529 09:30:12.279"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230529 09:30:07.459" endtime="20230529 09:30:12.279"/>
</test>
<status status="PASS" starttime="20230529 09:29:41.249" endtime="20230529 09:30:12.280"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 09:30:17.573" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230529 09:30:17.572" endtime="20230529 09:30:17.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:17.573" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x110c4a310&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 09:30:17.573" endtime="20230529 09:30:17.573"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 09:30:17.575" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 09:30:17.574" endtime="20230529 09:30:17.575"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:17.575" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230529 09:30:17.575" endtime="20230529 09:30:17.575"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:17.577" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:17.575" endtime="20230529 09:30:17.577"/>
</kw>
<status status="PASS" starttime="20230529 09:30:17.573" endtime="20230529 09:30:17.577"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:17.577" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:17.577" endtime="20230529 09:30:17.577"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:17.582" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:17.581" endtime="20230529 09:30:17.582"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 09:30:17.582" endtime="20230529 09:30:17.582"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 09:30:17.583" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230529 09:30:17.582" endtime="20230529 09:30:17.589"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 09:30:17.589" endtime="20230529 09:30:17.590"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:17.590" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:17.590" endtime="20230529 09:30:17.920"/>
</kw>
<status status="PASS" starttime="20230529 09:30:17.581" endtime="20230529 09:30:17.920"/>
</kw>
<status status="PASS" starttime="20230529 09:30:17.577" endtime="20230529 09:30:17.921"/>
</kw>
<status status="PASS" starttime="20230529 09:30:17.571" endtime="20230529 09:30:17.921"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 09:30:17.922" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 09:30:17.922" endtime="20230529 09:30:17.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:17.922" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 09:30:17.922" endtime="20230529 09:30:17.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:17.922" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 09:30:17.922" endtime="20230529 09:30:17.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:17.923" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 09:30:17.923" endtime="20230529 09:30:17.923"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 09:30:20.791" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:17.923" endtime="20230529 09:30:20.791"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 09:30:21.194" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:21.195" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230529 09:30:20.792" endtime="20230529 09:30:21.195"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:21.623" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:21.623" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:21.195" endtime="20230529 09:30:21.946"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:22.052" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:21.947" endtime="20230529 09:30:22.052"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:22.053" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:22.052" endtime="20230529 09:30:22.333"/>
</kw>
<status status="PASS" starttime="20230529 09:30:17.921" endtime="20230529 09:30:22.334"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:22.335" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:22.334" endtime="20230529 09:30:22.335"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:22.335" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 09:30:22.335" endtime="20230529 09:30:22.335"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:22.735" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230529 09:30:22.736" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230529 09:30:22.340" endtime="20230529 09:30:22.932"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:22.933" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:22.932" endtime="20230529 09:30:23.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:23.961" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:23.437" endtime="20230529 09:30:23.961"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 09:30:23.963" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 09:30:23.963" level="INFO">Process completed.</msg>
<msg timestamp="20230529 09:30:23.963" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 09:30:23.962" endtime="20230529 09:30:23.963"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:23.964" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 09:30:23.963" endtime="20230529 09:30:23.964"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:23.965" level="INFO"/>
<status status="PASS" starttime="20230529 09:30:23.964" endtime="20230529 09:30:23.965"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:23.965" endtime="20230529 09:30:23.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 09:30:23.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 09:30:23.966" endtime="20230529 09:30:23.967"/>
</kw>
<status status="PASS" starttime="20230529 09:30:23.964" endtime="20230529 09:30:23.967"/>
</kw>
<status status="PASS" starttime="20230529 09:30:23.964" endtime="20230529 09:30:23.967"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 09:30:23.967" endtime="20230529 09:30:23.967"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 09:30:23.967" endtime="20230529 09:30:23.967"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:23.967" endtime="20230529 09:30:23.967"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 09:30:23.967" endtime="20230529 09:30:23.967"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:23.967" endtime="20230529 09:30:23.967"/>
</branch>
<status status="PASS" starttime="20230529 09:30:23.964" endtime="20230529 09:30:23.967"/>
</if>
<status status="PASS" starttime="20230529 09:30:23.962" endtime="20230529 09:30:23.968"/>
</kw>
<status status="PASS" starttime="20230529 09:30:22.340" endtime="20230529 09:30:23.968"/>
</kw>
<status status="PASS" starttime="20230529 09:30:22.336" endtime="20230529 09:30:23.968"/>
</kw>
<status status="PASS" starttime="20230529 09:30:22.335" endtime="20230529 09:30:23.968"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 09:30:23.968" endtime="20230529 09:30:23.968"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:23.968" endtime="20230529 09:30:23.968"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:23.968" endtime="20230529 09:30:23.968"/>
</branch>
<status status="PASS" starttime="20230529 09:30:22.335" endtime="20230529 09:30:23.968"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:24.478" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:23.968" endtime="20230529 09:30:24.478"/>
</kw>
<status status="PASS" starttime="20230529 09:30:22.334" endtime="20230529 09:30:24.478"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:30:17.571" endtime="20230529 09:30:24.478"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 09:30:24.480" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230529 09:30:24.480" endtime="20230529 09:30:24.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:24.481" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x110c4a310&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 09:30:24.480" endtime="20230529 09:30:24.481"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 09:30:24.481" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 09:30:24.481" endtime="20230529 09:30:24.481"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:24.482" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230529 09:30:24.481" endtime="20230529 09:30:24.482"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:24.482" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:24.482" endtime="20230529 09:30:24.482"/>
</kw>
<status status="PASS" starttime="20230529 09:30:24.481" endtime="20230529 09:30:24.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:24.483" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:24.482" endtime="20230529 09:30:24.483"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:24.488" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:24.487" endtime="20230529 09:30:24.488"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 09:30:24.488" endtime="20230529 09:30:24.488"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 09:30:24.489" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230529 09:30:24.488" endtime="20230529 09:30:24.496"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 09:30:24.497" endtime="20230529 09:30:24.498"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:24.498" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:24.498" endtime="20230529 09:30:24.762"/>
</kw>
<status status="PASS" starttime="20230529 09:30:24.487" endtime="20230529 09:30:24.762"/>
</kw>
<status status="PASS" starttime="20230529 09:30:24.483" endtime="20230529 09:30:24.762"/>
</kw>
<status status="PASS" starttime="20230529 09:30:24.479" endtime="20230529 09:30:24.762"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 09:30:24.764" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 09:30:24.763" endtime="20230529 09:30:24.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:24.764" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 09:30:24.764" endtime="20230529 09:30:24.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:24.764" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 09:30:24.764" endtime="20230529 09:30:24.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:24.765" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 09:30:24.764" endtime="20230529 09:30:24.765"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 09:30:27.487" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:24.765" endtime="20230529 09:30:27.487"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 09:30:28.023" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:28.023" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230529 09:30:27.488" endtime="20230529 09:30:28.023"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:28.449" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:28.449" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:28.024" endtime="20230529 09:30:28.595"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:28.710" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:28.595" endtime="20230529 09:30:28.711"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:28.711" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:28.711" endtime="20230529 09:30:29.029"/>
</kw>
<status status="PASS" starttime="20230529 09:30:24.763" endtime="20230529 09:30:29.030"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 09:30:29.031" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230529 09:30:29.031" endtime="20230529 09:30:29.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:29.031" level="INFO">${img} = reporter_macos_tab_preview.png</msg>
<status status="PASS" starttime="20230529 09:30:29.031" endtime="20230529 09:30:29.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:29.032" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 09:30:29.031" endtime="20230529 09:30:29.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:29.032" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 09:30:29.032" endtime="20230529 09:30:29.032"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 09:30:29.419" level="INFO">Image "reporter_macos_tab_preview.png" found at (482, 103)</msg>
<status status="PASS" starttime="20230529 09:30:29.032" endtime="20230529 09:30:29.419"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 09:30:29.809" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230529 09:30:29.810" level="INFO">@{coordinates} = [ 482 | 103 ]</msg>
<status status="PASS" starttime="20230529 09:30:29.419" endtime="20230529 09:30:29.810"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:30.206" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230529 09:30:30.206" level="INFO">Clicking image "reporter_macos_tab_preview.png" in position (482, 103)</msg>
<status status="PASS" starttime="20230529 09:30:29.810" endtime="20230529 09:30:30.322"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:30.425" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:30.323" endtime="20230529 09:30:30.425"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:30.426" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:30.425" endtime="20230529 09:30:30.691"/>
</kw>
<status status="PASS" starttime="20230529 09:30:29.030" endtime="20230529 09:30:30.691"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:30.692" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:30.692" endtime="20230529 09:30:30.692"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:30.693" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 09:30:30.692" endtime="20230529 09:30:30.693"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:31.157" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230529 09:30:31.157" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230529 09:30:30.698" endtime="20230529 09:30:31.329"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:31.330" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:31.329" endtime="20230529 09:30:31.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:32.245" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:31.742" endtime="20230529 09:30:32.245"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 09:30:32.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 09:30:32.247" level="INFO">Process completed.</msg>
<msg timestamp="20230529 09:30:32.247" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 09:30:32.246" endtime="20230529 09:30:32.247"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:32.247" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 09:30:32.247" endtime="20230529 09:30:32.247"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:32.249" level="INFO"/>
<status status="PASS" starttime="20230529 09:30:32.248" endtime="20230529 09:30:32.249"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:32.249" endtime="20230529 09:30:32.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 09:30:32.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 09:30:32.249" endtime="20230529 09:30:32.250"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.247" endtime="20230529 09:30:32.250"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.247" endtime="20230529 09:30:32.250"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 09:30:32.250" endtime="20230529 09:30:32.250"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 09:30:32.251" endtime="20230529 09:30:32.251"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:32.251" endtime="20230529 09:30:32.251"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 09:30:32.251" endtime="20230529 09:30:32.251"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:32.250" endtime="20230529 09:30:32.251"/>
</branch>
<status status="PASS" starttime="20230529 09:30:32.247" endtime="20230529 09:30:32.251"/>
</if>
<status status="PASS" starttime="20230529 09:30:32.245" endtime="20230529 09:30:32.251"/>
</kw>
<status status="PASS" starttime="20230529 09:30:30.698" endtime="20230529 09:30:32.251"/>
</kw>
<status status="PASS" starttime="20230529 09:30:30.693" endtime="20230529 09:30:32.251"/>
</kw>
<status status="PASS" starttime="20230529 09:30:30.693" endtime="20230529 09:30:32.251"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 09:30:32.252" endtime="20230529 09:30:32.252"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:32.252" endtime="20230529 09:30:32.252"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:32.251" endtime="20230529 09:30:32.252"/>
</branch>
<status status="PASS" starttime="20230529 09:30:30.693" endtime="20230529 09:30:32.252"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:32.760" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:32.252" endtime="20230529 09:30:32.761"/>
</kw>
<status status="PASS" starttime="20230529 09:30:30.691" endtime="20230529 09:30:32.761"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:30:24.479" endtime="20230529 09:30:32.761"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:32.762" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230529 09:30:32.762" endtime="20230529 09:30:32.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:32.762" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:32.762" endtime="20230529 09:30:32.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:32.763" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230529 09:30:32.762" endtime="20230529 09:30:32.763"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:32.763" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:32.763" endtime="20230529 09:30:32.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 09:30:32.763" endtime="20230529 09:30:32.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:32.764" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:32.764" endtime="20230529 09:30:32.764"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 09:30:32.764" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 09:30:32.764" endtime="20230529 09:30:32.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:32.764" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:32.764" endtime="20230529 09:30:32.765"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230529 09:30:32.765" level="INFO">${epoch} = 1685352632</msg>
<status status="PASS" starttime="20230529 09:30:32.765" endtime="20230529 09:30:32.765"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 09:30:32.766" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230529 09:30:32.765" endtime="20230529 09:30:32.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:32.766" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x110c4a310&gt;, '@{appargs}': ['-i', 'blank_1685352632.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 09:30:32.766" endtime="20230529 09:30:32.766"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 09:30:32.767" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 09:30:32.767" endtime="20230529 09:30:32.767"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:32.767" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230529 09:30:32.767" endtime="20230529 09:30:32.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:32.768" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:32.768" endtime="20230529 09:30:32.768"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.766" endtime="20230529 09:30:32.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:32.768" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:32.768" endtime="20230529 09:30:32.768"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:32.773" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:32.773" endtime="20230529 09:30:32.773"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 09:30:32.773" endtime="20230529 09:30:32.773"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 09:30:32.774" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1685352632.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 09:30:32.773" endtime="20230529 09:30:32.780"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 09:30:32.781" endtime="20230529 09:30:32.781"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:32.782" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:32.781" endtime="20230529 09:30:33.050"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.772" endtime="20230529 09:30:33.051"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.768" endtime="20230529 09:30:33.051"/>
</kw>
<status status="PASS" starttime="20230529 09:30:32.765" endtime="20230529 09:30:33.051"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 09:30:33.052" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 09:30:33.052" endtime="20230529 09:30:33.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:33.053" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 09:30:33.052" endtime="20230529 09:30:33.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:33.053" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 09:30:33.053" endtime="20230529 09:30:33.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:33.053" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 09:30:33.053" endtime="20230529 09:30:33.053"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 09:30:35.296" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:33.053" endtime="20230529 09:30:35.297"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 09:30:35.716" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:35.716" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230529 09:30:35.297" endtime="20230529 09:30:35.716"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:36.135" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:36.135" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:35.717" endtime="20230529 09:30:36.322"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:36.451" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:36.323" endtime="20230529 09:30:36.451"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:36.452" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:36.452" endtime="20230529 09:30:36.751"/>
</kw>
<status status="PASS" starttime="20230529 09:30:33.052" endtime="20230529 09:30:36.751"/>
</kw>
<status status="PASS" starttime="20230529 09:30:33.051" endtime="20230529 09:30:36.751"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:36.753" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:36.752" endtime="20230529 09:30:36.753"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:36.753" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 09:30:36.753" endtime="20230529 09:30:36.753"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:37.173" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230529 09:30:37.173" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230529 09:30:36.758" endtime="20230529 09:30:37.304"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:37.305" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:37.304" endtime="20230529 09:30:37.834"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:38.344" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:37.834" endtime="20230529 09:30:38.344"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 09:30:38.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 09:30:38.345" level="INFO">Process completed.</msg>
<msg timestamp="20230529 09:30:38.345" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 09:30:38.345" endtime="20230529 09:30:38.345"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 09:30:38.346" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 09:30:38.345" endtime="20230529 09:30:38.346"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:38.347" level="INFO"/>
<status status="PASS" starttime="20230529 09:30:38.346" endtime="20230529 09:30:38.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 09:30:38.347" endtime="20230529 09:30:38.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 09:30:38.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 09:30:38.348" endtime="20230529 09:30:38.349"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.346" endtime="20230529 09:30:38.349"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.346" endtime="20230529 09:30:38.349"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 09:30:38.349" endtime="20230529 09:30:38.349"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 09:30:38.349" endtime="20230529 09:30:38.349"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:38.349" endtime="20230529 09:30:38.349"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 09:30:38.349" endtime="20230529 09:30:38.349"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:38.349" endtime="20230529 09:30:38.349"/>
</branch>
<status status="PASS" starttime="20230529 09:30:38.346" endtime="20230529 09:30:38.350"/>
</if>
<status status="PASS" starttime="20230529 09:30:38.344" endtime="20230529 09:30:38.350"/>
</kw>
<status status="PASS" starttime="20230529 09:30:36.758" endtime="20230529 09:30:38.350"/>
</kw>
<status status="PASS" starttime="20230529 09:30:36.754" endtime="20230529 09:30:38.350"/>
</kw>
<status status="PASS" starttime="20230529 09:30:36.753" endtime="20230529 09:30:38.350"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 09:30:38.350" endtime="20230529 09:30:38.350"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 09:30:38.350" endtime="20230529 09:30:38.350"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:38.350" endtime="20230529 09:30:38.350"/>
</branch>
<status status="PASS" starttime="20230529 09:30:36.753" endtime="20230529 09:30:38.350"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:38.881" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:38.350" endtime="20230529 09:30:38.882"/>
</kw>
<status status="PASS" starttime="20230529 09:30:36.752" endtime="20230529 09:30:38.882"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 09:30:32.761" endtime="20230529 09:30:38.882"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 09:30:38.884" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230529 09:30:38.884" endtime="20230529 09:30:38.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:38.885" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x110c4a310&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 09:30:38.884" endtime="20230529 09:30:38.885"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 09:30:38.886" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 09:30:38.885" endtime="20230529 09:30:38.886"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:38.886" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230529 09:30:38.886" endtime="20230529 09:30:38.886"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:38.886" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:38.886" endtime="20230529 09:30:38.886"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.885" endtime="20230529 09:30:38.887"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:38.887" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230529 09:30:38.887" endtime="20230529 09:30:38.887"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 09:30:38.891" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230529 09:30:38.891" endtime="20230529 09:30:38.891"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 09:30:38.892" endtime="20230529 09:30:38.892"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 09:30:38.893" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230529 09:30:38.892" endtime="20230529 09:30:38.899"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 09:30:38.899" endtime="20230529 09:30:38.900"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:38.900" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:38.900" endtime="20230529 09:30:39.193"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.891" endtime="20230529 09:30:39.193"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.887" endtime="20230529 09:30:39.193"/>
</kw>
<status status="PASS" starttime="20230529 09:30:38.883" endtime="20230529 09:30:39.193"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 09:30:39.195" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 09:30:39.194" endtime="20230529 09:30:39.195"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 09:30:39.195" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 09:30:39.195" endtime="20230529 09:30:39.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:39.195" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 09:30:39.195" endtime="20230529 09:30:39.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:39.196" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 09:30:39.196" endtime="20230529 09:30:39.196"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 09:30:41.602" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:39.196" endtime="20230529 09:30:41.602"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 09:30:42.027" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:42.028" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230529 09:30:41.603" endtime="20230529 09:30:42.028"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 09:30:42.463" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230529 09:30:42.463" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230529 09:30:42.030" endtime="20230529 09:30:42.619"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 09:30:42.721" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 09:30:42.620" endtime="20230529 09:30:42.721"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:42.721" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:42.721" endtime="20230529 09:30:43.023"/>
</kw>
<status status="PASS" starttime="20230529 09:30:39.194" endtime="20230529 09:30:43.023"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Click Text">
<arg>${sectname}</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 09:30:43.025" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 09:30:43.025" endtime="20230529 09:30:43.288"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:43.290" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml</msg>
<status status="PASS" starttime="20230529 09:30:43.289" endtime="20230529 09:30:43.290"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230529 09:30:43.290" level="INFO">${path} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11</msg>
<msg timestamp="20230529 09:30:43.290" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230529 09:30:43.290" endtime="20230529 09:30:43.290"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230529 09:30:43.291" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11&lt;/a&gt;'.</msg>
<msg timestamp="20230529 09:30:43.291" level="INFO">13 files:
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230529 09:30:43.291" level="INFO">@{files} = [ /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png | /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-lates...</msg>
<status status="PASS" starttime="20230529 09:30:43.290" endtime="20230529 09:30:43.291"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230529 09:30:43.291" endtime="20230529 09:30:43.291"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.292" level="INFO">Length is 13</msg>
<msg timestamp="20230529 09:30:43.292" level="INFO">${fc} = 13</msg>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.292"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.292" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.292" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.292"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.293" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.293" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.293" endtime="20230529 09:30:43.293"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.293" endtime="20230529 09:30:43.294"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.293" endtime="20230529 09:30:43.294"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.294" endtime="20230529 09:30:43.294"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.294" endtime="20230529 09:30:43.294"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.293" endtime="20230529 09:30:43.294"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.294"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.295" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.295" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.295"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.295"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.295"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.296"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.296"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.295" endtime="20230529 09:30:43.296"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.294" endtime="20230529 09:30:43.296"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.296" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.296" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.296"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.296"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.296"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.297"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.297"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.297"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.296" endtime="20230529 09:30:43.297"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.297" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.297" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.297"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.297"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.297"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.298"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.298"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.298"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.297" endtime="20230529 09:30:43.298"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.298" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.298" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.298"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.298"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.298"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.299"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.299"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.299"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.298" endtime="20230529 09:30:43.299"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.299" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.299" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.299"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.299"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.299"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.300"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.300"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.300"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.299" endtime="20230529 09:30:43.300"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.300" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.300" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.300"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.301"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.301"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.301" endtime="20230529 09:30:43.301"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.301" endtime="20230529 09:30:43.301"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.301"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.300" endtime="20230529 09:30:43.301"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.301" level="INFO">Length is 118</msg>
<msg timestamp="20230529 09:30:43.301" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 09:30:43.301" endtime="20230529 09:30:43.301"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.302"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.302"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.302"/>
</kw>
<status status="PASS" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.302"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.302"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.301" endtime="20230529 09:30:43.302"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 09:30:43.302" level="INFO">Length is 119</msg>
<msg timestamp="20230529 09:30:43.303" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.303"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.303"/>
</return>
<status status="PASS" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.303"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.303"/>
</kw>
<status status="NOT RUN" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.303"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.303"/>
</if>
<status status="PASS" starttime="20230529 09:30:43.302" endtime="20230529 09:30:43.303"/>
</iter>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.303"/>
</while>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.303"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 09:30:43.304" endtime="20230529 09:30:43.304"/>
</return>
<status status="NOT RUN" starttime="20230529 09:30:43.303" endtime="20230529 09:30:43.304"/>
</branch>
<status status="PASS" starttime="20230529 09:30:43.292" endtime="20230529 09:30:43.304"/>
</if>
<msg timestamp="20230529 09:30:43.304" level="INFO">${img} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 09:30:43.289" endtime="20230529 09:30:43.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:43.304" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 09:30:43.304" endtime="20230529 09:30:43.304"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230529 09:30:43.326" level="INFO">${processed_img} = [[[218 218 218]
  [218 218 218]
  [218 218 218]
  ...
  [218 218 218]
  [218 218 218]
  [218 218 218]]

 [[218 218 218]
  [218 218 218]
  [218 218 218]
  ...
  [218 218 218]
  [218 218 218]
  [218 218...</msg>
<status status="PASS" starttime="20230529 09:30:43.304" endtime="20230529 09:30:43.326"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230529 09:30:44.677" level="INFO">${bounds} = (265, 126, 39, 11)</msg>
<status status="PASS" starttime="20230529 09:30:43.326" endtime="20230529 09:30:44.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:44.678" level="INFO">(265, 126, 39, 11)</msg>
<status status="PASS" starttime="20230529 09:30:44.678" endtime="20230529 09:30:44.679"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${bounds}[0]+int(${bounds}[2]/2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:44.679" level="INFO">${x} = 284</msg>
<status status="PASS" starttime="20230529 09:30:44.679" endtime="20230529 09:30:44.679"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${bounds}[1]+int(${bounds}[3]/2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 09:30:44.680" level="INFO">${y} = 131</msg>
<status status="PASS" starttime="20230529 09:30:44.679" endtime="20230529 09:30:44.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 09:30:44.680" level="FAIL">AttributeError: 'int' object has no attribute 'upper'</msg>
<status status="FAIL" starttime="20230529 09:30:44.680" endtime="20230529 09:30:44.680"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20230529 09:30:44.680" endtime="20230529 09:30:44.681"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="NOT RUN" starttime="20230529 09:30:44.681" endtime="20230529 09:30:44.681"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="NOT RUN" starttime="20230529 09:30:44.681" endtime="20230529 09:30:44.681"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 09:30:44.681" endtime="20230529 09:30:44.681"/>
</kw>
<status status="FAIL" starttime="20230529 09:30:43.025" endtime="20230529 09:30:44.681"/>
</kw>
<status status="FAIL" starttime="20230529 09:30:43.024" endtime="20230529 09:30:44.681"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230529 09:30:44.682" endtime="20230529 09:30:44.682"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 09:30:38.883" endtime="20230529 09:30:44.682">AttributeError: 'int' object has no attribute 'upper'</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="55">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230529 09:30:44.683" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230529 09:30:44.683" endtime="20230529 09:30:44.683"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 09:30:44.682" endtime="20230529 09:30:44.683">AssertionError</status>
</test>
<status status="FAIL" starttime="20230529 09:30:12.281" endtime="20230529 09:30:44.684"/>
</suite>
<status status="FAIL" starttime="20230529 09:29:41.226" endtime="20230529 09:30:44.686"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
