<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on darwin)" generated="20230602 00:31:55.716" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 00:31:55.766" endtime="20230602 00:31:55.767"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 00:31:55.767" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.768" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 00:31:55.767" endtime="20230602 00:31:55.768"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 00:31:55.768" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.769" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.769" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.769" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.769" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.770" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.770" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.770" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.770" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.770" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.771" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.771" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.771" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.771" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.772" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.772" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.772" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.772" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.772" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.773" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.773" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.773" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.773" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:31:55.773" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 00:31:55.768" endtime="20230602 00:31:55.773"/>
</kw>
<status status="PASS" starttime="20230602 00:31:55.766" endtime="20230602 00:31:55.774"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 00:31:55.779" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 00:32:06.360" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230602 00:31:55.774" endtime="20230602 00:32:06.360"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 00:32:06.361" endtime="20230602 00:32:06.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:06.362" endtime="20230602 00:32:06.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:06.362" endtime="20230602 00:32:06.362"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:31:55.774" endtime="20230602 00:32:06.362"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 00:32:06.366" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 00:32:07.302" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230602 00:32:06.363" endtime="20230602 00:32:07.302"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 00:32:07.302" endtime="20230602 00:32:07.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:07.303" endtime="20230602 00:32:07.303"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:06.363" endtime="20230602 00:32:07.304"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:07.305" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:07.304" endtime="20230602 00:32:07.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:07.305" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:07.305" endtime="20230602 00:32:07.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:07.305" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:07.305" endtime="20230602 00:32:07.305"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:07.306" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:07.306" endtime="20230602 00:32:07.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:07.306" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:07.306" endtime="20230602 00:32:07.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:07.307" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:07.306" endtime="20230602 00:32:07.307"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:07.307" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:07.307" endtime="20230602 00:32:07.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:07.307" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:07.307" endtime="20230602 00:32:07.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:07.308" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:07.308" endtime="20230602 00:32:07.308"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:07.308" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:07.308" endtime="20230602 00:32:07.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:07.308" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:07.308" endtime="20230602 00:32:07.308"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 00:32:07.311" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 00:32:13.115" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 00:32:07.309" endtime="20230602 00:32:13.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:13.116" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230602 00:32:13.116" endtime="20230602 00:32:13.116"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:13.116" endtime="20230602 00:32:13.117"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:13.117" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:13.117" endtime="20230602 00:32:13.117"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:07.304" endtime="20230602 00:32:13.117"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:13.118" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:13.118" endtime="20230602 00:32:13.118"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:13.119" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:13.118" endtime="20230602 00:32:13.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:13.119" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:13.119" endtime="20230602 00:32:13.119"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:13.119" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:13.119" endtime="20230602 00:32:13.119"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 00:32:13.119" endtime="20230602 00:32:13.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:13.120" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:13.120" endtime="20230602 00:32:13.120"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:13.120" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:13.120" endtime="20230602 00:32:13.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:13.121" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:13.120" endtime="20230602 00:32:13.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:13.121" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:13.121" endtime="20230602 00:32:13.121"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:13.121" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:13.121" endtime="20230602 00:32:13.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:13.122" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:13.122" endtime="20230602 00:32:13.122"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 00:32:13.125" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 00:32:19.464" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 00:32:13.122" endtime="20230602 00:32:19.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:19.465" level="INFO">
</msg>
<status status="PASS" starttime="20230602 00:32:19.464" endtime="20230602 00:32:19.465"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:19.465" endtime="20230602 00:32:19.466"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:19.466" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:19.466" endtime="20230602 00:32:19.466"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:13.118" endtime="20230602 00:32:19.466"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:19.467" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:19.467" endtime="20230602 00:32:19.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:19.468" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:19.467" endtime="20230602 00:32:19.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:19.468" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:19.468" endtime="20230602 00:32:19.468"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:19.468" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:19.468" endtime="20230602 00:32:19.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:19.469" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 00:32:19.468" endtime="20230602 00:32:19.469"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:19.469" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:19.469" endtime="20230602 00:32:19.469"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:19.469" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:19.469" endtime="20230602 00:32:19.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:19.470" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:19.469" endtime="20230602 00:32:19.470"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:19.470" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:19.470" endtime="20230602 00:32:19.470"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:19.470" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:19.470" endtime="20230602 00:32:19.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:19.471" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 00:32:19.470" endtime="20230602 00:32:19.471"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 00:32:19.474" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 00:32:24.799" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 00:32:19.471" endtime="20230602 00:32:24.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:24.800" level="INFO">
</msg>
<status status="PASS" starttime="20230602 00:32:24.800" endtime="20230602 00:32:24.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:24.800" endtime="20230602 00:32:24.801"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:24.801" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:24.801" endtime="20230602 00:32:24.801"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230602 00:32:19.467" endtime="20230602 00:32:24.801"/>
</test>
<status status="PASS" starttime="20230602 00:31:55.748" endtime="20230602 00:32:24.802"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 00:32:30.039" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 00:32:30.038" endtime="20230602 00:32:30.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:30.039" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x11cbe4090&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 00:32:30.039" endtime="20230602 00:32:30.039"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 00:32:30.040" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 00:32:30.040" endtime="20230602 00:32:30.040"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:32:30.041" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 00:32:30.040" endtime="20230602 00:32:30.041"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:30.042" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:30.041" endtime="20230602 00:32:30.042"/>
</kw>
<status status="PASS" starttime="20230602 00:32:30.039" endtime="20230602 00:32:30.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:30.042" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:30.042" endtime="20230602 00:32:30.042"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:30.047" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:30.047" endtime="20230602 00:32:30.047"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 00:32:30.047" endtime="20230602 00:32:30.047"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 00:32:30.048" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 00:32:30.055" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:30.047" endtime="20230602 00:32:30.055"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:30.056" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:30.056" endtime="20230602 00:32:30.056"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 00:32:30.056" endtime="20230602 00:32:30.057"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:30.057" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:30.057" endtime="20230602 00:32:30.408"/>
</kw>
<status status="PASS" starttime="20230602 00:32:30.046" endtime="20230602 00:32:30.408"/>
</kw>
<status status="PASS" starttime="20230602 00:32:30.042" endtime="20230602 00:32:30.409"/>
</kw>
<status status="PASS" starttime="20230602 00:32:30.037" endtime="20230602 00:32:30.409"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:30.410" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 00:32:30.410" endtime="20230602 00:32:30.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:30.410" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 00:32:30.410" endtime="20230602 00:32:30.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:30.411" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:30.410" endtime="20230602 00:32:30.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:30.411" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:30.411" endtime="20230602 00:32:30.411"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:33.864" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:30.411" endtime="20230602 00:32:33.865"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:34.527" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:34.527" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 00:32:33.865" endtime="20230602 00:32:34.527"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:34.918" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:34.918" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:34.528" endtime="20230602 00:32:35.212"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:35.718" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:35.213" endtime="20230602 00:32:35.718"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:35.719" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:35.718" endtime="20230602 00:32:35.979"/>
</kw>
<status status="PASS" starttime="20230602 00:32:30.409" endtime="20230602 00:32:35.979"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:35.981" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:35.980" endtime="20230602 00:32:35.981"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:35.981" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 00:32:35.981" endtime="20230602 00:32:35.981"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:36.355" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 00:32:36.356" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 00:32:35.986" endtime="20230602 00:32:36.513"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:36.514" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:36.514" endtime="20230602 00:32:36.919"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:37.422" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:36.920" endtime="20230602 00:32:37.422"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 00:32:37.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 00:32:37.423" level="INFO">Process completed.</msg>
<msg timestamp="20230602 00:32:37.423" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 00:32:37.423" endtime="20230602 00:32:37.423"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:37.424" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 00:32:37.423" endtime="20230602 00:32:37.424"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:37.425" level="INFO"/>
<status status="PASS" starttime="20230602 00:32:37.425" endtime="20230602 00:32:37.425"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:37.425" endtime="20230602 00:32:37.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 00:32:37.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 00:32:37.426" endtime="20230602 00:32:37.427"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.424" endtime="20230602 00:32:37.427"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.424" endtime="20230602 00:32:37.427"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 00:32:37.427" endtime="20230602 00:32:37.427"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 00:32:37.428" endtime="20230602 00:32:37.428"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:37.428" endtime="20230602 00:32:37.428"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 00:32:37.428" endtime="20230602 00:32:37.428"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:37.427" endtime="20230602 00:32:37.428"/>
</branch>
<status status="PASS" starttime="20230602 00:32:37.424" endtime="20230602 00:32:37.428"/>
</if>
<status status="PASS" starttime="20230602 00:32:37.422" endtime="20230602 00:32:37.428"/>
</kw>
<status status="PASS" starttime="20230602 00:32:35.986" endtime="20230602 00:32:37.428"/>
</kw>
<status status="PASS" starttime="20230602 00:32:35.982" endtime="20230602 00:32:37.428"/>
</kw>
<status status="PASS" starttime="20230602 00:32:35.982" endtime="20230602 00:32:37.428"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 00:32:37.428" endtime="20230602 00:32:37.428"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:37.429" endtime="20230602 00:32:37.429"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:37.428" endtime="20230602 00:32:37.429"/>
</branch>
<status status="PASS" starttime="20230602 00:32:35.982" endtime="20230602 00:32:37.429"/>
</if>
<status status="PASS" starttime="20230602 00:32:35.981" endtime="20230602 00:32:37.429"/>
</branch>
<status status="PASS" starttime="20230602 00:32:35.981" endtime="20230602 00:32:37.429"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:37.429" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 00:32:37.429" endtime="20230602 00:32:37.429"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:37.935" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:37.429" endtime="20230602 00:32:37.935"/>
</kw>
<status status="PASS" starttime="20230602 00:32:35.980" endtime="20230602 00:32:37.935"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:30.037" endtime="20230602 00:32:37.935"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 00:32:37.937" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 00:32:37.936" endtime="20230602 00:32:37.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:37.937" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x11cbe4090&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 00:32:37.937" endtime="20230602 00:32:37.937"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 00:32:37.938" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 00:32:37.938" endtime="20230602 00:32:37.938"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:32:37.938" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 00:32:37.938" endtime="20230602 00:32:37.938"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:37.939" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:37.939" endtime="20230602 00:32:37.939"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.937" endtime="20230602 00:32:37.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:37.939" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:37.939" endtime="20230602 00:32:37.939"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:37.944" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:37.943" endtime="20230602 00:32:37.944"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 00:32:37.944" endtime="20230602 00:32:37.944"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 00:32:37.945" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 00:32:37.951" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:37.944" endtime="20230602 00:32:37.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:37.952" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:37.952" endtime="20230602 00:32:37.952"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 00:32:37.952" endtime="20230602 00:32:37.953"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:37.953" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:37.953" endtime="20230602 00:32:38.212"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.943" endtime="20230602 00:32:38.212"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.939" endtime="20230602 00:32:38.212"/>
</kw>
<status status="PASS" starttime="20230602 00:32:37.936" endtime="20230602 00:32:38.212"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:38.213" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 00:32:38.213" endtime="20230602 00:32:38.214"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:38.214" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 00:32:38.214" endtime="20230602 00:32:38.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:38.214" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:38.214" endtime="20230602 00:32:38.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:38.214" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:38.214" endtime="20230602 00:32:38.214"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:40.368" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:38.215" endtime="20230602 00:32:40.368"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:40.781" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:40.782" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 00:32:40.368" endtime="20230602 00:32:40.782"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:41.166" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:41.166" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:40.782" endtime="20230602 00:32:41.287"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:41.794" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:41.287" endtime="20230602 00:32:41.795"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:41.795" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:41.795" endtime="20230602 00:32:42.061"/>
</kw>
<status status="PASS" starttime="20230602 00:32:38.213" endtime="20230602 00:32:42.061"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:42.062" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230602 00:32:42.062" endtime="20230602 00:32:42.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:42.063" level="INFO">${img} = reporter_macos_tab_preview.png</msg>
<status status="PASS" starttime="20230602 00:32:42.062" endtime="20230602 00:32:42.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:42.063" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:42.063" endtime="20230602 00:32:42.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:42.063" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:42.063" endtime="20230602 00:32:42.063"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:42.459" level="INFO">Image "reporter_macos_tab_preview.png" found at (482, 103)</msg>
<status status="PASS" starttime="20230602 00:32:42.063" endtime="20230602 00:32:42.459"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:42.870" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230602 00:32:42.870" level="INFO">@{coordinates} = [ 482 | 103 ]</msg>
<status status="PASS" starttime="20230602 00:32:42.460" endtime="20230602 00:32:42.870"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:43.281" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230602 00:32:43.281" level="INFO">Clicking image "reporter_macos_tab_preview.png" in position (482, 103)</msg>
<status status="PASS" starttime="20230602 00:32:42.871" endtime="20230602 00:32:43.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:43.938" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:43.437" endtime="20230602 00:32:43.938"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:43.939" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:43.938" endtime="20230602 00:32:44.208"/>
</kw>
<status status="PASS" starttime="20230602 00:32:42.061" endtime="20230602 00:32:44.209"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:44.210" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:44.210" endtime="20230602 00:32:44.210"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:44.211" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 00:32:44.210" endtime="20230602 00:32:44.211"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:44.593" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 00:32:44.593" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 00:32:44.215" endtime="20230602 00:32:44.763"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:44.764" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:44.763" endtime="20230602 00:32:45.307"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:45.815" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:45.309" endtime="20230602 00:32:45.815"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 00:32:45.816" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 00:32:45.817" level="INFO">Process completed.</msg>
<msg timestamp="20230602 00:32:45.817" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 00:32:45.816" endtime="20230602 00:32:45.817"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:45.817" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 00:32:45.817" endtime="20230602 00:32:45.817"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:45.819" level="INFO"/>
<status status="PASS" starttime="20230602 00:32:45.818" endtime="20230602 00:32:45.819"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:45.819" endtime="20230602 00:32:45.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 00:32:45.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 00:32:45.820" endtime="20230602 00:32:45.821"/>
</kw>
<status status="PASS" starttime="20230602 00:32:45.818" endtime="20230602 00:32:45.821"/>
</kw>
<status status="PASS" starttime="20230602 00:32:45.817" endtime="20230602 00:32:45.821"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 00:32:45.821" endtime="20230602 00:32:45.821"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 00:32:45.821" endtime="20230602 00:32:45.821"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:45.821" endtime="20230602 00:32:45.821"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 00:32:45.821" endtime="20230602 00:32:45.821"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:45.821" endtime="20230602 00:32:45.821"/>
</branch>
<status status="PASS" starttime="20230602 00:32:45.817" endtime="20230602 00:32:45.821"/>
</if>
<status status="PASS" starttime="20230602 00:32:45.815" endtime="20230602 00:32:45.822"/>
</kw>
<status status="PASS" starttime="20230602 00:32:44.215" endtime="20230602 00:32:45.822"/>
</kw>
<status status="PASS" starttime="20230602 00:32:44.211" endtime="20230602 00:32:45.822"/>
</kw>
<status status="PASS" starttime="20230602 00:32:44.211" endtime="20230602 00:32:45.822"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 00:32:45.822" endtime="20230602 00:32:45.822"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:45.822" endtime="20230602 00:32:45.822"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:45.822" endtime="20230602 00:32:45.822"/>
</branch>
<status status="PASS" starttime="20230602 00:32:44.211" endtime="20230602 00:32:45.822"/>
</if>
<status status="PASS" starttime="20230602 00:32:44.210" endtime="20230602 00:32:45.822"/>
</branch>
<status status="PASS" starttime="20230602 00:32:44.210" endtime="20230602 00:32:45.822"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:45.823" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 00:32:45.822" endtime="20230602 00:32:45.823"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:46.324" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:45.823" endtime="20230602 00:32:46.324"/>
</kw>
<status status="PASS" starttime="20230602 00:32:44.209" endtime="20230602 00:32:46.324"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:37.936" endtime="20230602 00:32:46.324"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.325" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230602 00:32:46.325" endtime="20230602 00:32:46.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.325" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:46.325" endtime="20230602 00:32:46.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.326" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230602 00:32:46.325" endtime="20230602 00:32:46.326"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:46.326" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:46.326" endtime="20230602 00:32:46.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 00:32:46.326" endtime="20230602 00:32:46.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.327" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:46.327" endtime="20230602 00:32:46.327"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 00:32:46.327" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 00:32:46.327" endtime="20230602 00:32:46.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:46.328" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 00:32:46.327" endtime="20230602 00:32:46.328"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230602 00:32:46.328" level="INFO">${epoch} = 1685665966</msg>
<status status="PASS" starttime="20230602 00:32:46.328" endtime="20230602 00:32:46.328"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 00:32:46.329" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 00:32:46.328" endtime="20230602 00:32:46.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:46.330" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x11cbe4090&gt;, '@{appargs}': ['-i', 'blank_1685665966.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 00:32:46.329" endtime="20230602 00:32:46.330"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 00:32:46.330" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 00:32:46.330" endtime="20230602 00:32:46.330"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:32:46.331" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 00:32:46.330" endtime="20230602 00:32:46.331"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:46.331" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:46.331" endtime="20230602 00:32:46.331"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.330" endtime="20230602 00:32:46.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.332" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:46.332" endtime="20230602 00:32:46.332"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:46.336" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:46.336" endtime="20230602 00:32:46.336"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 00:32:46.336" endtime="20230602 00:32:46.336"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 00:32:46.337" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1685665966.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg timestamp="20230602 00:32:46.344" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:46.337" endtime="20230602 00:32:46.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:46.345" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:46.344" endtime="20230602 00:32:46.345"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 00:32:46.345" endtime="20230602 00:32:46.345"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:46.346" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:46.346" endtime="20230602 00:32:46.614"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.336" endtime="20230602 00:32:46.614"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.332" endtime="20230602 00:32:46.614"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.328" endtime="20230602 00:32:46.614"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:46.616" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 00:32:46.616" endtime="20230602 00:32:46.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:46.616" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 00:32:46.616" endtime="20230602 00:32:46.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:46.617" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:46.616" endtime="20230602 00:32:46.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:46.617" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:46.617" endtime="20230602 00:32:46.617"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:48.724" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:46.617" endtime="20230602 00:32:48.724"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:49.124" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:49.125" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 00:32:48.725" endtime="20230602 00:32:49.125"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:49.512" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:49.512" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:49.125" endtime="20230602 00:32:49.674"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:50.180" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:49.674" endtime="20230602 00:32:50.180"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:50.180" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:50.180" endtime="20230602 00:32:50.455"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.615" endtime="20230602 00:32:50.455"/>
</kw>
<status status="PASS" starttime="20230602 00:32:46.615" endtime="20230602 00:32:50.455"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:50.456" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:50.456" endtime="20230602 00:32:50.457"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:50.457" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:50.457"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:50.900" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 00:32:50.900" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 00:32:50.462" endtime="20230602 00:32:51.056"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:51.059" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:51.057" endtime="20230602 00:32:51.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:52.003" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:51.501" endtime="20230602 00:32:52.004"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 00:32:52.005" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 00:32:52.005" level="INFO">Process completed.</msg>
<msg timestamp="20230602 00:32:52.005" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 00:32:52.004" endtime="20230602 00:32:52.005"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:32:52.005" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 00:32:52.005" endtime="20230602 00:32:52.005"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:52.007" level="INFO"/>
<status status="PASS" starttime="20230602 00:32:52.006" endtime="20230602 00:32:52.007"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:32:52.007" endtime="20230602 00:32:52.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 00:32:52.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 00:32:52.008" endtime="20230602 00:32:52.008"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.006" endtime="20230602 00:32:52.009"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.005" endtime="20230602 00:32:52.009"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 00:32:52.009" endtime="20230602 00:32:52.009"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 00:32:52.009" endtime="20230602 00:32:52.009"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:52.009" endtime="20230602 00:32:52.009"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 00:32:52.009" endtime="20230602 00:32:52.009"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:52.009" endtime="20230602 00:32:52.009"/>
</branch>
<status status="PASS" starttime="20230602 00:32:52.005" endtime="20230602 00:32:52.009"/>
</if>
<status status="PASS" starttime="20230602 00:32:52.004" endtime="20230602 00:32:52.010"/>
</kw>
<status status="PASS" starttime="20230602 00:32:50.462" endtime="20230602 00:32:52.010"/>
</kw>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:52.010"/>
</kw>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:52.010"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 00:32:52.010" endtime="20230602 00:32:52.010"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:32:52.010" endtime="20230602 00:32:52.010"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:32:52.010" endtime="20230602 00:32:52.010"/>
</branch>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:52.010"/>
</if>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:52.010"/>
</branch>
<status status="PASS" starttime="20230602 00:32:50.457" endtime="20230602 00:32:52.010"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:52.011" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 00:32:52.010" endtime="20230602 00:32:52.011"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:52.518" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:52.011" endtime="20230602 00:32:52.518"/>
</kw>
<status status="PASS" starttime="20230602 00:32:50.456" endtime="20230602 00:32:52.518"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 00:32:46.324" endtime="20230602 00:32:52.518"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 00:32:52.520" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230602 00:32:52.520" endtime="20230602 00:32:52.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:52.521" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x11cbe4090&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 00:32:52.521" endtime="20230602 00:32:52.521"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 00:32:52.522" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 00:32:52.521" endtime="20230602 00:32:52.522"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:32:52.522" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230602 00:32:52.522" endtime="20230602 00:32:52.522"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:52.522" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:52.522" endtime="20230602 00:32:52.522"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.521" endtime="20230602 00:32:52.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:52.523" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230602 00:32:52.523" endtime="20230602 00:32:52.523"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:52.527" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230602 00:32:52.527" endtime="20230602 00:32:52.527"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 00:32:52.527" endtime="20230602 00:32:52.528"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 00:32:52.529" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230602 00:32:52.535" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:52.528" endtime="20230602 00:32:52.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:32:52.536" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230602 00:32:52.536" endtime="20230602 00:32:52.536"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 00:32:52.536" endtime="20230602 00:32:52.537"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:52.537" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:52.537" endtime="20230602 00:32:52.821"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.527" endtime="20230602 00:32:52.822"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.523" endtime="20230602 00:32:52.822"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.520" endtime="20230602 00:32:52.822"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:52.823" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 00:32:52.823" endtime="20230602 00:32:52.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:52.824" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 00:32:52.823" endtime="20230602 00:32:52.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:52.824" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:52.824" endtime="20230602 00:32:52.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:52.824" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:52.824" endtime="20230602 00:32:52.824"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:55.655" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:52.824" endtime="20230602 00:32:55.655"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:56.072" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:56.073" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 00:32:55.656" endtime="20230602 00:32:56.073"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:56.508" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:32:56.508" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 00:32:56.073" endtime="20230602 00:32:56.630"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:57.141" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:56.630" endtime="20230602 00:32:57.141"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:57.142" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:57.141" endtime="20230602 00:32:57.427"/>
</kw>
<status status="PASS" starttime="20230602 00:32:52.822" endtime="20230602 00:32:57.428"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:57.429" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230602 00:32:57.429" endtime="20230602 00:32:57.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:57.429" level="INFO">${img} = reporter_macos_section_report.png</msg>
<status status="PASS" starttime="20230602 00:32:57.429" endtime="20230602 00:32:57.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:57.430" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:57.429" endtime="20230602 00:32:57.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:57.430" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:57.430" endtime="20230602 00:32:57.430"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:32:57.839" level="INFO">Image "reporter_macos_section_report.png" found at (42, 142)</msg>
<status status="PASS" starttime="20230602 00:32:57.430" endtime="20230602 00:32:57.839"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:32:58.277" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230602 00:32:58.278" level="INFO">@{coordinates} = [ 42 | 142 ]</msg>
<status status="PASS" starttime="20230602 00:32:57.840" endtime="20230602 00:32:58.278"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:32:58.691" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230602 00:32:58.691" level="INFO">Clicking image "reporter_macos_section_report.png" in position (42, 142)</msg>
<status status="PASS" starttime="20230602 00:32:58.278" endtime="20230602 00:32:58.822"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:32:59.348" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:32:58.823" endtime="20230602 00:32:59.348"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:59.349" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:59.349" endtime="20230602 00:32:59.657"/>
</kw>
<status status="PASS" starttime="20230602 00:32:57.428" endtime="20230602 00:32:59.657"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:32:59.658" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:32:59.658" endtime="20230602 00:32:59.945"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:32:59.946" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230602 00:32:59.946" endtime="20230602 00:32:59.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:32:59.947" level="INFO">${img} = reporter_macos_button_addsection.png</msg>
<status status="PASS" starttime="20230602 00:32:59.946" endtime="20230602 00:32:59.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:59.947" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:32:59.947" endtime="20230602 00:32:59.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:32:59.947" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:32:59.947" endtime="20230602 00:32:59.947"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:00.371" level="INFO">Image "reporter_macos_button_addsection.png" found at (36, 109)</msg>
<status status="PASS" starttime="20230602 00:32:59.947" endtime="20230602 00:33:00.371"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:00.763" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230602 00:33:00.763" level="INFO">@{coordinates} = [ 36 | 109 ]</msg>
<status status="PASS" starttime="20230602 00:33:00.371" endtime="20230602 00:33:00.763"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:01.131" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230602 00:33:01.131" level="INFO">Clicking image "reporter_macos_button_addsection.png" in position (36, 109)</msg>
<status status="PASS" starttime="20230602 00:33:00.764" endtime="20230602 00:33:01.336"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:01.844" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:01.336" endtime="20230602 00:33:01.844"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:01.844" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:01.844" endtime="20230602 00:33:02.187"/>
</kw>
<status status="PASS" starttime="20230602 00:32:59.945" endtime="20230602 00:33:02.187"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230602 00:33:02.577" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_sectionname.png" found at Box(left=494, top=430, width=92, height=23)</msg>
<msg timestamp="20230602 00:33:02.577" level="INFO">Clicking 1 time(s) at (540, 461) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230602 00:33:02.187" endtime="20230602 00:33:02.694"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230602 00:33:02.694" endtime="20230602 00:33:03.336"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:33:03.337" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230602 00:33:03.337" endtime="20230602 00:33:03.337"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:03.338" level="INFO">${img} = reporter_macos_button_ok.png</msg>
<status status="PASS" starttime="20230602 00:33:03.337" endtime="20230602 00:33:03.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:03.338" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:33:03.338" endtime="20230602 00:33:03.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:03.338" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:33:03.338" endtime="20230602 00:33:03.338"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:03.727" level="INFO">Image "reporter_macos_button_ok.png" found at (520, 502)</msg>
<status status="PASS" starttime="20230602 00:33:03.339" endtime="20230602 00:33:03.727"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:04.116" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230602 00:33:04.116" level="INFO">@{coordinates} = [ 520 | 502 ]</msg>
<status status="PASS" starttime="20230602 00:33:03.727" endtime="20230602 00:33:04.116"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:04.499" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=506, top=491, width=28, height=22)</msg>
<msg timestamp="20230602 00:33:04.499" level="INFO">Clicking image "reporter_macos_button_ok.png" in position (520, 502)</msg>
<status status="PASS" starttime="20230602 00:33:04.117" endtime="20230602 00:33:04.629"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:05.135" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:04.629" endtime="20230602 00:33:05.135"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:05.136" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:05.135" endtime="20230602 00:33:05.408"/>
</kw>
<status status="PASS" starttime="20230602 00:33:03.337" endtime="20230602 00:33:05.408"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:05.409" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:05.409" endtime="20230602 00:33:05.696"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:33:05.697" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230602 00:33:05.697" endtime="20230602 00:33:05.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:05.698" level="INFO">${img} = reporter_macos_section_issue#149.png</msg>
<status status="PASS" starttime="20230602 00:33:05.697" endtime="20230602 00:33:05.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:05.698" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:33:05.698" endtime="20230602 00:33:05.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:05.699" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:33:05.698" endtime="20230602 00:33:05.699"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:06.111" level="INFO">Image "reporter_macos_section_issue#149.png" found at (74, 286)</msg>
<status status="PASS" starttime="20230602 00:33:05.699" endtime="20230602 00:33:06.112"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:06.500" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=38, top=278, width=73, height=16)</msg>
<msg timestamp="20230602 00:33:06.500" level="INFO">@{coordinates} = [ 74 | 286 ]</msg>
<status status="PASS" starttime="20230602 00:33:06.112" endtime="20230602 00:33:06.500"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:06.881" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" found at Box(left=38, top=278, width=73, height=16)</msg>
<msg timestamp="20230602 00:33:06.881" level="INFO">Clicking image "reporter_macos_section_issue#149.png" in position (74, 286)</msg>
<status status="PASS" starttime="20230602 00:33:06.501" endtime="20230602 00:33:07.018"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:07.529" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:07.019" endtime="20230602 00:33:07.529"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:07.530" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:07.529" endtime="20230602 00:33:07.790"/>
</kw>
<status status="PASS" starttime="20230602 00:33:05.696" endtime="20230602 00:33:07.790"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:33:07.792" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230602 00:33:07.791" endtime="20230602 00:33:07.792"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:07.792" level="INFO">${img} = reporter_macos_label_type.png</msg>
<status status="PASS" starttime="20230602 00:33:07.792" endtime="20230602 00:33:07.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:07.792" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:33:07.792" endtime="20230602 00:33:07.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:07.793" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:33:07.793" endtime="20230602 00:33:07.793"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:08.193" level="INFO">Image "reporter_macos_label_type.png" found at (293, 161)</msg>
<status status="PASS" starttime="20230602 00:33:07.793" endtime="20230602 00:33:08.193"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:08.601" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_type.png" found at Box(left=261, top=150, width=64, height=22)</msg>
<msg timestamp="20230602 00:33:08.602" level="INFO">@{coordinates} = [ 293 | 161 ]</msg>
<status status="PASS" starttime="20230602 00:33:08.194" endtime="20230602 00:33:08.602"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:33:08.604" level="INFO">${x} = 343</msg>
<status status="PASS" starttime="20230602 00:33:08.603" endtime="20230602 00:33:08.604"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 00:33:08.604" level="INFO">${y} = 161</msg>
<status status="PASS" starttime="20230602 00:33:08.604" endtime="20230602 00:33:08.604"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 00:33:08.605" level="INFO">@{coordinates} = [ 343 | 161 ]</msg>
<status status="PASS" starttime="20230602 00:33:08.604" endtime="20230602 00:33:08.605"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 00:33:08.605" endtime="20230602 00:33:08.735"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 00:33:08.735" endtime="20230602 00:33:08.865"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:09.367" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:08.865" endtime="20230602 00:33:09.367"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:09.368" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:09.367" endtime="20230602 00:33:09.631"/>
</kw>
<status status="PASS" starttime="20230602 00:33:07.791" endtime="20230602 00:33:09.631"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:33:09.632" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230602 00:33:09.632" endtime="20230602 00:33:09.632"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:09.633" level="INFO">${img} = reporter_macos_option_datatable.png</msg>
<status status="PASS" starttime="20230602 00:33:09.632" endtime="20230602 00:33:09.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:09.633" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:33:09.633" endtime="20230602 00:33:09.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:09.633" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:33:09.633" endtime="20230602 00:33:09.633"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:10.020" level="INFO">Image "reporter_macos_option_datatable.png" found at (389, 276)</msg>
<status status="PASS" starttime="20230602 00:33:09.633" endtime="20230602 00:33:10.021"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:10.404" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_datatable.png" found at Box(left=344, top=269, width=90, height=14)</msg>
<msg timestamp="20230602 00:33:10.405" level="INFO">@{coordinates} = [ 389 | 276 ]</msg>
<status status="PASS" starttime="20230602 00:33:10.021" endtime="20230602 00:33:10.405"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:10.791" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_option_datatable.png" found at Box(left=344, top=269, width=90, height=14)</msg>
<msg timestamp="20230602 00:33:10.791" level="INFO">Clicking image "reporter_macos_option_datatable.png" in position (389, 276)</msg>
<status status="PASS" starttime="20230602 00:33:10.405" endtime="20230602 00:33:10.915"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:11.419" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:10.915" endtime="20230602 00:33:11.419"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:11.419" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:11.419" endtime="20230602 00:33:11.679"/>
</kw>
<status status="PASS" starttime="20230602 00:33:09.631" endtime="20230602 00:33:11.680"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 00:33:11.681" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 00:33:11.681" endtime="20230602 00:33:11.681"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:11.682" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 00:33:11.682" endtime="20230602 00:33:11.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:11.682" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 00:33:11.682" endtime="20230602 00:33:11.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:11.682" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 00:33:11.682" endtime="20230602 00:33:11.682"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 00:33:12.072" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230602 00:33:11.683" endtime="20230602 00:33:12.072"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 00:33:12.456" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:33:12.457" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230602 00:33:12.072" endtime="20230602 00:33:12.457"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:12.855" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230602 00:33:12.855" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230602 00:33:12.457" endtime="20230602 00:33:12.986"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:13.504" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:12.986" endtime="20230602 00:33:13.504"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:13.505" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:13.504" endtime="20230602 00:33:13.762"/>
</kw>
<status status="PASS" starttime="20230602 00:33:11.681" endtime="20230602 00:33:13.763"/>
</kw>
<status status="PASS" starttime="20230602 00:33:11.680" endtime="20230602 00:33:13.763"/>
</kw>
<kw name="Find Text">
<arg>Data Type:</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:13.764" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:13.764" endtime="20230602 00:33:14.019"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:14.020" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/output.xml</msg>
<status status="PASS" starttime="20230602 00:33:14.020" endtime="20230602 00:33:14.020"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230602 00:33:14.021" level="INFO">${path} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11</msg>
<msg timestamp="20230602 00:33:14.021" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230602 00:33:14.020" endtime="20230602 00:33:14.021"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230602 00:33:14.021" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11&lt;/a&gt;'.</msg>
<msg timestamp="20230602 00:33:14.022" level="INFO">22 files:
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-10.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-11.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-12.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-13.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-14.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-15.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-16.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-17.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-18.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-19.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-2.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-20.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-21.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-3.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-4.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-5.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-6.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-7.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-8.png
/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230602 00:33:14.022" level="INFO">@{files} = [ /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-1.png | /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-lates...</msg>
<status status="PASS" starttime="20230602 00:33:14.021" endtime="20230602 00:33:14.022"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230602 00:33:14.022" endtime="20230602 00:33:14.022"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.023" level="INFO">Length is 22</msg>
<msg timestamp="20230602 00:33:14.023" level="INFO">${fc} = 22</msg>
<status status="PASS" starttime="20230602 00:33:14.022" endtime="20230602 00:33:14.023"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.023" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.023" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.023" endtime="20230602 00:33:14.023"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.024" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.024" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.024" endtime="20230602 00:33:14.024"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.024" endtime="20230602 00:33:14.024"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.024" endtime="20230602 00:33:14.024"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.025"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.024" endtime="20230602 00:33:14.025"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.024" endtime="20230602 00:33:14.025"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.023" endtime="20230602 00:33:14.025"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.025" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.025" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.025"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.025"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.025"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.026" endtime="20230602 00:33:14.026"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.026" endtime="20230602 00:33:14.026"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.026"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.025" endtime="20230602 00:33:14.026"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.026" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.027" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.026" endtime="20230602 00:33:14.027"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.027"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.027"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.027"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.027"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.027"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.026" endtime="20230602 00:33:14.027"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.028" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.028" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.028"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.028"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.028"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.029"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.029"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.028" endtime="20230602 00:33:14.029"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.027" endtime="20230602 00:33:14.029"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.029" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.029" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.029" endtime="20230602 00:33:14.029"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.030" endtime="20230602 00:33:14.030"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.030" endtime="20230602 00:33:14.030"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.030" endtime="20230602 00:33:14.030"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.030" endtime="20230602 00:33:14.030"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.030" endtime="20230602 00:33:14.030"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.029" endtime="20230602 00:33:14.030"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.031" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.031" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.031" endtime="20230602 00:33:14.031"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.031" endtime="20230602 00:33:14.031"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.031" endtime="20230602 00:33:14.031"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.032" endtime="20230602 00:33:14.032"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.032" endtime="20230602 00:33:14.032"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.031" endtime="20230602 00:33:14.032"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.031" endtime="20230602 00:33:14.032"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.033" level="INFO">Length is 118</msg>
<msg timestamp="20230602 00:33:14.033" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230602 00:33:14.032" endtime="20230602 00:33:14.033"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.033" endtime="20230602 00:33:14.033"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.033" endtime="20230602 00:33:14.033"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 00:33:14.033" endtime="20230602 00:33:14.033"/>
</kw>
<status status="PASS" starttime="20230602 00:33:14.033" endtime="20230602 00:33:14.033"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.033" endtime="20230602 00:33:14.034"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.032" endtime="20230602 00:33:14.034"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 00:33:14.034" level="INFO">Length is 119</msg>
<msg timestamp="20230602 00:33:14.034" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230602 00:33:14.034" endtime="20230602 00:33:14.034"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230602 00:33:14.034" endtime="20230602 00:33:14.035"/>
</return>
<status status="PASS" starttime="20230602 00:33:14.034" endtime="20230602 00:33:14.035"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230602 00:33:14.035" endtime="20230602 00:33:14.035"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:33:14.035" endtime="20230602 00:33:14.035"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.034" endtime="20230602 00:33:14.035"/>
</if>
<status status="PASS" starttime="20230602 00:33:14.034" endtime="20230602 00:33:14.038"/>
</iter>
<status status="PASS" starttime="20230602 00:33:14.023" endtime="20230602 00:33:14.038"/>
</while>
<status status="PASS" starttime="20230602 00:33:14.023" endtime="20230602 00:33:14.038"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 00:33:14.039" endtime="20230602 00:33:14.039"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:14.038" endtime="20230602 00:33:14.039"/>
</branch>
<status status="PASS" starttime="20230602 00:33:14.023" endtime="20230602 00:33:14.039"/>
</if>
<msg timestamp="20230602 00:33:14.040" level="INFO">${img} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png</msg>
<status status="PASS" starttime="20230602 00:33:14.019" endtime="20230602 00:33:14.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:14.040" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-22.png</msg>
<status status="PASS" starttime="20230602 00:33:14.040" endtime="20230602 00:33:14.040"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230602 00:33:14.061" level="INFO">${processed_img} = [[[218 218 218]
  [218 218 218]
  [218 218 218]
  ...
  [218 218 218]
  [218 218 218]
  [218 218 218]]

 [[218 218 218]
  [218 218 218]
  [218 218 218]
  ...
  [218 218 218]
  [218 218 218]
  [218 218...</msg>
<status status="PASS" starttime="20230602 00:33:14.040" endtime="20230602 00:33:14.061"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230602 00:33:15.210" level="INFO">${bounds} = None</msg>
<status status="PASS" starttime="20230602 00:33:14.062" endtime="20230602 00:33:15.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:15.211" level="INFO">None</msg>
<status status="PASS" starttime="20230602 00:33:15.210" endtime="20230602 00:33:15.211"/>
</kw>
<if>
<branch type="IF" condition="${bounds}">
<return>
<value>${bounds}</value>
<status status="NOT RUN" starttime="20230602 00:33:15.211" endtime="20230602 00:33:15.211"/>
</return>
<status status="NOT RUN" starttime="20230602 00:33:15.211" endtime="20230602 00:33:15.211"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 00:33:15.212" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 00:33:15.212" endtime="20230602 00:33:15.212"/>
</kw>
<status status="FAIL" starttime="20230602 00:33:15.211" endtime="20230602 00:33:15.212"/>
</branch>
<status status="FAIL" starttime="20230602 00:33:15.211" endtime="20230602 00:33:15.212"/>
</if>
<status status="FAIL" starttime="20230602 00:33:13.763" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Find Text">
<arg>Filter Type:</arg>
<status status="NOT RUN" starttime="20230602 00:33:15.213" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Find Text">
<arg>Result Name</arg>
<status status="NOT RUN" starttime="20230602 00:33:15.213" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<status status="NOT RUN" starttime="20230602 00:33:15.213" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 00:33:15.213" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 00:33:15.213" endtime="20230602 00:33:15.213"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:15.214" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 00:33:15.214" endtime="20230602 00:33:15.214"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:33:15.215" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 00:33:15.214" endtime="20230602 00:33:15.215"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 00:33:15.600" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230602 00:33:15.600" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230602 00:33:15.219" endtime="20230602 00:33:15.749"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 00:33:15.749" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.11/Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 00:33:15.749" endtime="20230602 00:33:16.026"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:16.539" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:16.026" endtime="20230602 00:33:16.540"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 00:33:16.542" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 00:33:16.543" level="INFO">Process completed.</msg>
<msg timestamp="20230602 00:33:16.543" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 00:33:16.541" endtime="20230602 00:33:16.543"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 00:33:16.544" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 00:33:16.544" endtime="20230602 00:33:16.545"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 00:33:16.547" level="INFO"/>
<status status="PASS" starttime="20230602 00:33:16.546" endtime="20230602 00:33:16.547"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 00:33:16.547" endtime="20230602 00:33:16.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 00:33:16.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 00:33:16.548" endtime="20230602 00:33:16.548"/>
</kw>
<status status="PASS" starttime="20230602 00:33:16.545" endtime="20230602 00:33:16.548"/>
</kw>
<status status="PASS" starttime="20230602 00:33:16.545" endtime="20230602 00:33:16.549"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 00:33:16.549" endtime="20230602 00:33:16.549"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 00:33:16.549" endtime="20230602 00:33:16.549"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:33:16.549" endtime="20230602 00:33:16.549"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 00:33:16.549" endtime="20230602 00:33:16.549"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:33:16.549" endtime="20230602 00:33:16.549"/>
</branch>
<status status="PASS" starttime="20230602 00:33:16.545" endtime="20230602 00:33:16.549"/>
</if>
<status status="PASS" starttime="20230602 00:33:16.540" endtime="20230602 00:33:16.549"/>
</kw>
<status status="PASS" starttime="20230602 00:33:15.219" endtime="20230602 00:33:16.549"/>
</kw>
<status status="PASS" starttime="20230602 00:33:15.215" endtime="20230602 00:33:16.550"/>
</kw>
<status status="PASS" starttime="20230602 00:33:15.215" endtime="20230602 00:33:16.550"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 00:33:16.550" endtime="20230602 00:33:16.550"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:33:16.550" endtime="20230602 00:33:16.550"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:33:16.550" endtime="20230602 00:33:16.550"/>
</branch>
<status status="PASS" starttime="20230602 00:33:15.215" endtime="20230602 00:33:16.550"/>
</if>
<status status="PASS" starttime="20230602 00:33:15.214" endtime="20230602 00:33:16.550"/>
</branch>
<status status="PASS" starttime="20230602 00:33:15.214" endtime="20230602 00:33:16.550"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:33:16.551" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 00:33:16.550" endtime="20230602 00:33:16.551"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:17.051" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:16.551" endtime="20230602 00:33:17.052"/>
</kw>
<status status="PASS" starttime="20230602 00:33:15.214" endtime="20230602 00:33:17.052"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 00:32:52.519" endtime="20230602 00:33:17.052">AssertionError</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="91">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 00:33:17.053" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 00:33:17.053" endtime="20230602 00:33:17.054"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 00:33:17.054" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230602 00:33:17.054" endtime="20230602 00:33:17.054"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</kw>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</branch>
<status status="NOT RUN" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.055"/>
</if>
<status status="NOT RUN" starttime="20230602 00:33:17.054" endtime="20230602 00:33:17.055"/>
</branch>
<status status="PASS" starttime="20230602 00:33:17.054" endtime="20230602 00:33:17.055"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 00:33:17.056" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 00:33:17.055" endtime="20230602 00:33:17.056"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 00:33:17.561" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 00:33:17.056" endtime="20230602 00:33:17.561"/>
</kw>
<status status="PASS" starttime="20230602 00:33:17.054" endtime="20230602 00:33:17.561"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 00:33:17.053" endtime="20230602 00:33:17.561">AssertionError</status>
</test>
<status status="FAIL" starttime="20230602 00:32:24.803" endtime="20230602 00:33:17.562"/>
</suite>
<status status="FAIL" starttime="20230602 00:31:55.719" endtime="20230602 00:33:17.563"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
