<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.16 on linux)" generated="20230529 03:23:58.788" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 03:23:58.820" endtime="20230529 03:23:58.821"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 03:23:58.821" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.821" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 03:23:58.821" endtime="20230529 03:23:58.821"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.822" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.823" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.823" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.823" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 03:23:58.823" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 03:23:58.821" endtime="20230529 03:23:58.823"/>
</kw>
<status status="PASS" starttime="20230529 03:23:58.820" endtime="20230529 03:23:58.823"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 03:23:58.825" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 03:24:00.406" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230529 03:23:58.823" endtime="20230529 03:24:00.406"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 03:24:00.406" endtime="20230529 03:24:00.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:00.407" endtime="20230529 03:24:00.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:00.407" endtime="20230529 03:24:00.407"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:23:58.823" endtime="20230529 03:24:00.408"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 03:24:00.410" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 03:24:01.168" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

optional ar...</msg>
<status status="PASS" starttime="20230529 03:24:00.408" endtime="20230529 03:24:01.168"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 03:24:01.168" endtime="20230529 03:24:01.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:01.169" endtime="20230529 03:24:01.169"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:00.408" endtime="20230529 03:24:01.169"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:01.170" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:01.170" endtime="20230529 03:24:01.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:01.170" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:01.170" endtime="20230529 03:24:01.171"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:01.171" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:01.171" endtime="20230529 03:24:01.171"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:01.171" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:01.171" endtime="20230529 03:24:01.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:01.172" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:01.171" endtime="20230529 03:24:01.172"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:01.172" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:01.172" endtime="20230529 03:24:01.172"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:01.172" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:01.172" endtime="20230529 03:24:01.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:01.173" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:01.173" endtime="20230529 03:24:01.173"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:01.173" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:01.173" endtime="20230529 03:24:01.173"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:01.174" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:01.173" endtime="20230529 03:24:01.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:01.174" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:01.174" endtime="20230529 03:24:01.174"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 03:24:01.176" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 03:24:04.606" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 03:24:01.174" endtime="20230529 03:24:04.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:04.607" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230529 03:24:04.606" endtime="20230529 03:24:04.607"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:04.607" endtime="20230529 03:24:04.607"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:04.608" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:04.607" endtime="20230529 03:24:04.608"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:01.170" endtime="20230529 03:24:04.608"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:04.609" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:04.609" endtime="20230529 03:24:04.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:04.609" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:04.609" endtime="20230529 03:24:04.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:04.610" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:04.609" endtime="20230529 03:24:04.610"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:04.610" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:04.610" endtime="20230529 03:24:04.610"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 03:24:04.610" endtime="20230529 03:24:04.611"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:04.611" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:04.611" endtime="20230529 03:24:04.611"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:04.611" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:04.611" endtime="20230529 03:24:04.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:04.612" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:04.611" endtime="20230529 03:24:04.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:04.612" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:04.612" endtime="20230529 03:24:04.612"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:04.612" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:04.612" endtime="20230529 03:24:04.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:04.613" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:04.612" endtime="20230529 03:24:04.613"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 03:24:04.615" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 03:24:08.853" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 03:24:04.613" endtime="20230529 03:24:08.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:08.854" level="INFO">
</msg>
<status status="PASS" starttime="20230529 03:24:08.853" endtime="20230529 03:24:08.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:08.855" endtime="20230529 03:24:08.855"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:08.856" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:08.855" endtime="20230529 03:24:08.856"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:04.608" endtime="20230529 03:24:08.856"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:08.857" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:08.857" endtime="20230529 03:24:08.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:08.858" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:08.857" endtime="20230529 03:24:08.858"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:08.858" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:08.858" endtime="20230529 03:24:08.858"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:08.858" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:08.858" endtime="20230529 03:24:08.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:08.859" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 03:24:08.859" endtime="20230529 03:24:08.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:08.859" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:08.859" endtime="20230529 03:24:08.859"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:08.860" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:08.859" endtime="20230529 03:24:08.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:08.860" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:08.860" endtime="20230529 03:24:08.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:08.860" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:08.860" endtime="20230529 03:24:08.861"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:08.861" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:08.861" endtime="20230529 03:24:08.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:08.861" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 03:24:08.861" endtime="20230529 03:24:08.861"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 03:24:08.863" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 03:24:12.319" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 03:24:08.861" endtime="20230529 03:24:12.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:12.320" level="INFO">
</msg>
<status status="PASS" starttime="20230529 03:24:12.319" endtime="20230529 03:24:12.320"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:12.320" endtime="20230529 03:24:12.320"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:12.321" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:12.320" endtime="20230529 03:24:12.321"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230529 03:24:08.856" endtime="20230529 03:24:12.321"/>
</test>
<status status="PASS" starttime="20230529 03:23:58.807" endtime="20230529 03:24:12.322"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="14">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 03:24:12.648" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 03:24:12.647" endtime="20230529 03:24:12.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:12.649" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f9f290c6c10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 03:24:12.648" endtime="20230529 03:24:12.649"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 03:24:12.650" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 03:24:12.649" endtime="20230529 03:24:12.650"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 03:24:12.650" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 03:24:12.650" endtime="20230529 03:24:12.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:12.651" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:12.650" endtime="20230529 03:24:12.651"/>
</kw>
<status status="PASS" starttime="20230529 03:24:12.649" endtime="20230529 03:24:12.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:12.652" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:12.651" endtime="20230529 03:24:12.652"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:12.656" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:12.655" endtime="20230529 03:24:12.656"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 03:24:12.656" endtime="20230529 03:24:12.656"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 03:24:12.657" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 03:24:12.656" endtime="20230529 03:24:12.661"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 03:24:12.662" endtime="20230529 03:24:12.662"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:12.663" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:12.662" endtime="20230529 03:24:12.792"/>
</kw>
<status status="PASS" starttime="20230529 03:24:12.655" endtime="20230529 03:24:12.793"/>
</kw>
<status status="PASS" starttime="20230529 03:24:12.652" endtime="20230529 03:24:12.793"/>
</kw>
<status status="PASS" starttime="20230529 03:24:12.647" endtime="20230529 03:24:12.793"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:12.794" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 03:24:12.794" endtime="20230529 03:24:12.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:12.795" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 03:24:12.794" endtime="20230529 03:24:12.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:12.795" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:12.795" endtime="20230529 03:24:12.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:12.795" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:12.795" endtime="20230529 03:24:12.795"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:24.162" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:12.795" endtime="20230529 03:24:24.163"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 03:24:24.372" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:24.372" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 03:24:24.163" endtime="20230529 03:24:24.372"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:24.578" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:24.579" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:24.373" endtime="20230529 03:24:24.687"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:24.788" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:24.687" endtime="20230529 03:24:24.788"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:24.789" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:24.789" endtime="20230529 03:24:24.919"/>
</kw>
<status status="PASS" starttime="20230529 03:24:12.793" endtime="20230529 03:24:24.919"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:24.920" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:24.920" endtime="20230529 03:24:24.920"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:24.921" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 03:24:24.921" endtime="20230529 03:24:24.921"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:25.128" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 03:24:25.128" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 03:24:24.925" endtime="20230529 03:24:25.231"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:25.232" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:25.231" endtime="20230529 03:24:25.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:25.861" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:25.360" endtime="20230529 03:24:25.861"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 03:24:25.862" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 03:24:25.863" level="INFO">Process completed.</msg>
<msg timestamp="20230529 03:24:25.863" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 03:24:25.862" endtime="20230529 03:24:25.863"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:25.863" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 03:24:25.863" endtime="20230529 03:24:25.863"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:25.865" level="INFO"/>
<status status="PASS" starttime="20230529 03:24:25.864" endtime="20230529 03:24:25.865"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:25.865" endtime="20230529 03:24:25.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 03:24:25.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 03:24:25.866" endtime="20230529 03:24:25.867"/>
</kw>
<status status="PASS" starttime="20230529 03:24:25.864" endtime="20230529 03:24:25.867"/>
</kw>
<status status="PASS" starttime="20230529 03:24:25.863" endtime="20230529 03:24:25.867"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 03:24:25.867" endtime="20230529 03:24:25.867"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 03:24:25.867" endtime="20230529 03:24:25.867"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:25.867" endtime="20230529 03:24:25.867"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 03:24:25.867" endtime="20230529 03:24:25.867"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:25.867" endtime="20230529 03:24:25.867"/>
</branch>
<status status="PASS" starttime="20230529 03:24:25.863" endtime="20230529 03:24:25.867"/>
</if>
<status status="PASS" starttime="20230529 03:24:25.861" endtime="20230529 03:24:25.867"/>
</kw>
<status status="PASS" starttime="20230529 03:24:24.925" endtime="20230529 03:24:25.868"/>
</kw>
<status status="PASS" starttime="20230529 03:24:24.921" endtime="20230529 03:24:25.868"/>
</kw>
<status status="PASS" starttime="20230529 03:24:24.921" endtime="20230529 03:24:25.868"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 03:24:25.868" endtime="20230529 03:24:25.868"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:25.868" endtime="20230529 03:24:25.868"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:25.868" endtime="20230529 03:24:25.868"/>
</branch>
<status status="PASS" starttime="20230529 03:24:24.921" endtime="20230529 03:24:25.868"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:26.368" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:25.868" endtime="20230529 03:24:26.369"/>
</kw>
<status status="PASS" starttime="20230529 03:24:24.920" endtime="20230529 03:24:26.369"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:12.646" endtime="20230529 03:24:26.369"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="20">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 03:24:26.371" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 03:24:26.371" endtime="20230529 03:24:26.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:26.372" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f9f290c6c10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 03:24:26.371" endtime="20230529 03:24:26.372"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 03:24:26.373" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 03:24:26.372" endtime="20230529 03:24:26.373"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 03:24:26.373" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 03:24:26.373" endtime="20230529 03:24:26.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:26.374" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:26.373" endtime="20230529 03:24:26.374"/>
</kw>
<status status="PASS" starttime="20230529 03:24:26.372" endtime="20230529 03:24:26.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:26.374" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:26.374" endtime="20230529 03:24:26.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:26.378" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:26.378" endtime="20230529 03:24:26.378"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 03:24:26.378" endtime="20230529 03:24:26.378"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 03:24:26.379" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 03:24:26.378" endtime="20230529 03:24:26.384"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 03:24:26.384" endtime="20230529 03:24:26.385"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:26.385" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:26.385" endtime="20230529 03:24:26.509"/>
</kw>
<status status="PASS" starttime="20230529 03:24:26.378" endtime="20230529 03:24:26.510"/>
</kw>
<status status="PASS" starttime="20230529 03:24:26.374" endtime="20230529 03:24:26.510"/>
</kw>
<status status="PASS" starttime="20230529 03:24:26.370" endtime="20230529 03:24:26.510"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:26.512" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 03:24:26.511" endtime="20230529 03:24:26.512"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:26.512" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 03:24:26.512" endtime="20230529 03:24:26.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:26.512" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:26.512" endtime="20230529 03:24:26.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:26.513" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:26.512" endtime="20230529 03:24:26.513"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:37.033" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:26.513" endtime="20230529 03:24:37.034"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 03:24:37.245" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:37.246" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 03:24:37.034" endtime="20230529 03:24:37.246"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:37.455" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:37.455" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:37.246" endtime="20230529 03:24:37.558"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:37.659" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:37.558" endtime="20230529 03:24:37.659"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:37.660" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:37.660" endtime="20230529 03:24:37.789"/>
</kw>
<status status="PASS" starttime="20230529 03:24:26.511" endtime="20230529 03:24:37.790"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:37.791" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230529 03:24:37.791" endtime="20230529 03:24:37.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:37.791" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230529 03:24:37.791" endtime="20230529 03:24:37.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:37.792" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:37.791" endtime="20230529 03:24:37.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:37.792" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:37.792" endtime="20230529 03:24:37.792"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:37.999" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230529 03:24:37.792" endtime="20230529 03:24:38.000"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 03:24:38.207" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 03:24:38.208" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230529 03:24:38.000" endtime="20230529 03:24:38.208"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:38.421" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 03:24:38.422" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230529 03:24:38.208" endtime="20230529 03:24:38.525"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:38.626" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:38.525" endtime="20230529 03:24:38.626"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:38.627" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:38.626" endtime="20230529 03:24:38.764"/>
</kw>
<status status="PASS" starttime="20230529 03:24:37.790" endtime="20230529 03:24:38.765"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:38.766" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:38.766" endtime="20230529 03:24:38.766"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:38.766" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 03:24:38.766" endtime="20230529 03:24:38.766"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:38.979" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 03:24:38.979" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 03:24:38.771" endtime="20230529 03:24:39.082"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:39.083" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:39.082" endtime="20230529 03:24:39.209"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:39.710" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:39.210" endtime="20230529 03:24:39.710"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 03:24:39.712" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 03:24:39.712" level="INFO">Process completed.</msg>
<msg timestamp="20230529 03:24:39.712" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 03:24:39.711" endtime="20230529 03:24:39.712"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:39.712" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 03:24:39.712" endtime="20230529 03:24:39.713"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:39.714" level="INFO"/>
<status status="PASS" starttime="20230529 03:24:39.713" endtime="20230529 03:24:39.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:39.714" endtime="20230529 03:24:39.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 03:24:39.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 03:24:39.715" endtime="20230529 03:24:39.716"/>
</kw>
<status status="PASS" starttime="20230529 03:24:39.713" endtime="20230529 03:24:39.716"/>
</kw>
<status status="PASS" starttime="20230529 03:24:39.713" endtime="20230529 03:24:39.716"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 03:24:39.716" endtime="20230529 03:24:39.716"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 03:24:39.716" endtime="20230529 03:24:39.716"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:39.717" endtime="20230529 03:24:39.717"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 03:24:39.717" endtime="20230529 03:24:39.717"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:39.716" endtime="20230529 03:24:39.717"/>
</branch>
<status status="PASS" starttime="20230529 03:24:39.713" endtime="20230529 03:24:39.717"/>
</if>
<status status="PASS" starttime="20230529 03:24:39.711" endtime="20230529 03:24:39.717"/>
</kw>
<status status="PASS" starttime="20230529 03:24:38.770" endtime="20230529 03:24:39.717"/>
</kw>
<status status="PASS" starttime="20230529 03:24:38.767" endtime="20230529 03:24:39.717"/>
</kw>
<status status="PASS" starttime="20230529 03:24:38.767" endtime="20230529 03:24:39.717"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 03:24:39.717" endtime="20230529 03:24:39.717"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:39.717" endtime="20230529 03:24:39.717"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:39.717" endtime="20230529 03:24:39.717"/>
</branch>
<status status="PASS" starttime="20230529 03:24:38.767" endtime="20230529 03:24:39.717"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:40.218" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:39.718" endtime="20230529 03:24:40.218"/>
</kw>
<status status="PASS" starttime="20230529 03:24:38.765" endtime="20230529 03:24:40.218"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:26.370" endtime="20230529 03:24:40.218"/>
</test>
<test id="s1-s2-t3" name="First Run" line="27">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.220" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230529 03:24:40.219" endtime="20230529 03:24:40.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.220" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:40.220" endtime="20230529 03:24:40.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.220" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230529 03:24:40.220" endtime="20230529 03:24:40.220"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:40.221" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:40.221" endtime="20230529 03:24:40.221"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 03:24:40.221" endtime="20230529 03:24:40.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.222" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:40.221" endtime="20230529 03:24:40.222"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 03:24:40.222" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 03:24:40.222" endtime="20230529 03:24:40.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:40.223" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:40.222" endtime="20230529 03:24:40.223"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230529 03:24:40.223" level="INFO">${epoch} = 1685330680</msg>
<status status="PASS" starttime="20230529 03:24:40.223" endtime="20230529 03:24:40.223"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 03:24:40.224" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 03:24:40.224" endtime="20230529 03:24:40.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:40.225" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f9f290c6c10&gt;, '@{appargs}': ['-i', 'blank_1685330680.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 03:24:40.224" endtime="20230529 03:24:40.225"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 03:24:40.226" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 03:24:40.225" endtime="20230529 03:24:40.226"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 03:24:40.226" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 03:24:40.226" endtime="20230529 03:24:40.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:40.227" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:40.226" endtime="20230529 03:24:40.227"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.225" endtime="20230529 03:24:40.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.227" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:40.227" endtime="20230529 03:24:40.227"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:40.231" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:40.231" endtime="20230529 03:24:40.231"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 03:24:40.232" endtime="20230529 03:24:40.232"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 03:24:40.233" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685330680.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 03:24:40.232" endtime="20230529 03:24:40.237"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 03:24:40.237" endtime="20230529 03:24:40.238"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:40.238" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:40.238" endtime="20230529 03:24:40.363"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.231" endtime="20230529 03:24:40.363"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.227" endtime="20230529 03:24:40.364"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.223" endtime="20230529 03:24:40.364"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:40.365" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 03:24:40.365" endtime="20230529 03:24:40.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:40.366" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 03:24:40.365" endtime="20230529 03:24:40.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:40.366" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:40.366" endtime="20230529 03:24:40.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:40.366" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:40.366" endtime="20230529 03:24:40.366"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:42.691" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:40.366" endtime="20230529 03:24:42.692"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 03:24:42.897" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:42.897" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 03:24:42.692" endtime="20230529 03:24:42.897"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:43.103" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:43.103" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:42.898" endtime="20230529 03:24:43.206"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:43.307" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:43.207" endtime="20230529 03:24:43.307"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:43.308" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:43.308" endtime="20230529 03:24:43.437"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.365" endtime="20230529 03:24:43.438"/>
</kw>
<status status="PASS" starttime="20230529 03:24:40.364" endtime="20230529 03:24:43.438"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:43.439" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:43.439" endtime="20230529 03:24:43.439"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:43.439" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 03:24:43.439" endtime="20230529 03:24:43.440"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:43.647" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 03:24:43.647" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 03:24:43.443" endtime="20230529 03:24:43.749"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:43.750" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:43.750" endtime="20230529 03:24:43.875"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:44.377" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:43.876" endtime="20230529 03:24:44.377"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 03:24:44.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 03:24:44.378" level="INFO">Process completed.</msg>
<msg timestamp="20230529 03:24:44.378" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 03:24:44.377" endtime="20230529 03:24:44.378"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 03:24:44.379" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 03:24:44.378" endtime="20230529 03:24:44.379"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:44.381" level="INFO"/>
<status status="PASS" starttime="20230529 03:24:44.380" endtime="20230529 03:24:44.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 03:24:44.381" endtime="20230529 03:24:44.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 03:24:44.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 03:24:44.382" endtime="20230529 03:24:44.382"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.380" endtime="20230529 03:24:44.382"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.379" endtime="20230529 03:24:44.382"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.383"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.383"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.383"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.383"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:44.382" endtime="20230529 03:24:44.383"/>
</branch>
<status status="PASS" starttime="20230529 03:24:44.379" endtime="20230529 03:24:44.383"/>
</if>
<status status="PASS" starttime="20230529 03:24:44.377" endtime="20230529 03:24:44.383"/>
</kw>
<status status="PASS" starttime="20230529 03:24:43.443" endtime="20230529 03:24:44.383"/>
</kw>
<status status="PASS" starttime="20230529 03:24:43.440" endtime="20230529 03:24:44.383"/>
</kw>
<status status="PASS" starttime="20230529 03:24:43.440" endtime="20230529 03:24:44.383"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.383"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 03:24:44.384" endtime="20230529 03:24:44.384"/>
</kw>
<status status="NOT RUN" starttime="20230529 03:24:44.383" endtime="20230529 03:24:44.384"/>
</branch>
<status status="PASS" starttime="20230529 03:24:43.440" endtime="20230529 03:24:44.384"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:44.884" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:44.384" endtime="20230529 03:24:44.884"/>
</kw>
<status status="PASS" starttime="20230529 03:24:43.438" endtime="20230529 03:24:44.884"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 03:24:40.219" endtime="20230529 03:24:44.885"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="43">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 03:24:44.887" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 03:24:44.886" endtime="20230529 03:24:44.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:44.887" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f9f290c6c10&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 03:24:44.887" endtime="20230529 03:24:44.887"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 03:24:44.888" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 03:24:44.888" endtime="20230529 03:24:44.888"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 03:24:44.889" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 03:24:44.888" endtime="20230529 03:24:44.889"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:44.889" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:44.889" endtime="20230529 03:24:44.889"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.888" endtime="20230529 03:24:44.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:44.890" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:44.889" endtime="20230529 03:24:44.890"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 03:24:44.894" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 03:24:44.894" endtime="20230529 03:24:44.894"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 03:24:44.894" endtime="20230529 03:24:44.894"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 03:24:44.895" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 03:24:44.894" endtime="20230529 03:24:44.900"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 03:24:44.900" endtime="20230529 03:24:44.901"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:44.901" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:44.901" endtime="20230529 03:24:45.025"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.893" endtime="20230529 03:24:45.025"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.890" endtime="20230529 03:24:45.025"/>
</kw>
<status status="PASS" starttime="20230529 03:24:44.886" endtime="20230529 03:24:45.025"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:45.027" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 03:24:45.026" endtime="20230529 03:24:45.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:45.027" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 03:24:45.027" endtime="20230529 03:24:45.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:45.027" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:45.027" endtime="20230529 03:24:45.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:45.028" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:45.028" endtime="20230529 03:24:45.028"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:55.790" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:45.028" endtime="20230529 03:24:55.791"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 03:24:56.008" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:56.009" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 03:24:55.791" endtime="20230529 03:24:56.009"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 03:24:56.218" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 03:24:56.218" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 03:24:56.009" endtime="20230529 03:24:56.321"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 03:24:56.422" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 03:24:56.322" endtime="20230529 03:24:56.422"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 03:24:56.423" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.9/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 03:24:56.423" endtime="20230529 03:24:56.552"/>
</kw>
<status status="PASS" starttime="20230529 03:24:45.026" endtime="20230529 03:24:56.553"/>
</kw>
<kw name="Click Button">
<arg>NewSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 03:24:56.554" level="INFO">${bttnnamel} = newsection</msg>
<status status="PASS" starttime="20230529 03:24:56.554" endtime="20230529 03:24:56.554"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 03:24:56.554" level="INFO">${img} = reporter_ubuntu_button_newsection.png</msg>
<status status="PASS" starttime="20230529 03:24:56.554" endtime="20230529 03:24:56.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:56.555" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 03:24:56.555" endtime="20230529 03:24:56.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 03:24:56.555" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 03:24:56.555" endtime="20230529 03:24:56.556"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 03:24:56.556" level="FAIL">InvalidImageException: Image path not found: "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_newsection.png".</msg>
<status status="FAIL" starttime="20230529 03:24:56.556" endtime="20230529 03:24:56.557"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230529 03:24:56.557" endtime="20230529 03:24:56.557"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230529 03:24:56.557" endtime="20230529 03:24:56.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230529 03:24:56.557" endtime="20230529 03:24:56.557"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 03:24:56.557" endtime="20230529 03:24:56.557"/>
</kw>
<status status="FAIL" starttime="20230529 03:24:56.553" endtime="20230529 03:24:56.557"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230529 03:24:56.557" endtime="20230529 03:24:56.557"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 03:24:44.885" endtime="20230529 03:24:56.558">InvalidImageException: Image path not found: "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_newsection.png".</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="53">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230529 03:24:56.559" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230529 03:24:56.559" endtime="20230529 03:24:56.559"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 03:24:56.558" endtime="20230529 03:24:56.559">AssertionError</status>
</test>
<status status="FAIL" starttime="20230529 03:24:12.323" endtime="20230529 03:24:56.560"/>
</suite>
<status status="FAIL" starttime="20230529 03:23:58.789" endtime="20230529 03:24:56.562"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
