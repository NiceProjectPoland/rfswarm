<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.11 on win32)" generated="20230602 06:36:49.797" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 06:36:49.844" endtime="20230602 06:36:49.844"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 06:36:49.844" endtime="20230602 06:36:49.844"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.844" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:36:49.860" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 06:36:49.844" endtime="20230602 06:36:49.860"/>
</kw>
<status status="PASS" starttime="20230602 06:36:49.844" endtime="20230602 06:36:49.860"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 06:36:49.860" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 06:37:07.077" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230602 06:36:49.860" endtime="20230602 06:37:07.077"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 06:37:07.077" endtime="20230602 06:37:07.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:07.077" endtime="20230602 06:37:07.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:07.077" endtime="20230602 06:37:07.077"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:36:49.860" endtime="20230602 06:37:07.077"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 06:37:07.077" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 06:37:08.375" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230602 06:37:07.077" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:37:07.077" endtime="20230602 06:37:08.375"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:08.375"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 06:37:08.375" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 06:37:13.459" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:37:08.375" endtime="20230602 06:37:13.459"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:13.459"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 06:37:13.459" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 06:37:19.096" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">
</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:37:13.459" endtime="20230602 06:37:19.096"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:19.096" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:19.096"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 06:37:19.111" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 06:37:23.721" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:23.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:23.721" level="INFO">
</msg>
<status status="PASS" starttime="20230602 06:37:23.721" endtime="20230602 06:37:23.721"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:23.721" endtime="20230602 06:37:23.721"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:37:23.721" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:37:23.721" endtime="20230602 06:37:23.721"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230602 06:37:19.096" endtime="20230602 06:37:23.721"/>
</test>
<status status="PASS" starttime="20230602 06:36:49.828" endtime="20230602 06:37:23.721"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 06:37:25.083" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230602 06:37:25.083" endtime="20230602 06:37:25.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:25.083" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D3B7DAFE0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 06:37:25.083" endtime="20230602 06:37:25.083"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<status status="PASS" starttime="20230602 06:37:25.083" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 06:37:25.098" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.098"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:37:25.098" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.208"/>
</kw>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.208"/>
</kw>
<status status="PASS" starttime="20230602 06:37:25.098" endtime="20230602 06:37:25.208"/>
</kw>
<status status="PASS" starttime="20230602 06:37:25.083" endtime="20230602 06:37:25.208"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:37:25.208" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:37:25.208" endtime="20230602 06:37:25.208"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:25.208" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:37:25.208" endtime="20230602 06:37:25.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:25.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:37:25.208" endtime="20230602 06:37:25.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:25.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:37:25.223" endtime="20230602 06:37:25.223"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:37:44.688" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (187, 561)</msg>
<status status="PASS" starttime="20230602 06:37:25.223" endtime="20230602 06:37:44.688"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:37:44.845" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=139, top=552, width=96, height=18)</msg>
<msg timestamp="20230602 06:37:44.845" level="INFO">@{coordinates} = [ 187 | 561 ]</msg>
<status status="PASS" starttime="20230602 06:37:44.688" endtime="20230602 06:37:44.845"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:37:44.986" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=139, top=552, width=96, height=18)</msg>
<msg timestamp="20230602 06:37:44.986" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (187, 561)</msg>
<status status="PASS" starttime="20230602 06:37:44.845" endtime="20230602 06:37:45.111"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:37:45.612" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:37:45.111" endtime="20230602 06:37:45.612"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:37:45.612" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:37:45.612" endtime="20230602 06:37:45.722"/>
</kw>
<status status="PASS" starttime="20230602 06:37:25.208" endtime="20230602 06:37:45.722"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:45.722" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:45.722"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:37:45.722" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:45.722"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:37:45.847" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=893, top=130, width=45, height=30)</msg>
<msg timestamp="20230602 06:37:45.847" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (915, 145)</msg>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:45.956"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:37:45.956" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:37:45.956" endtime="20230602 06:37:46.050"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:37:46.050" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 06:37:46.550" level="INFO">Process completed.</msg>
<msg timestamp="20230602 06:37:46.550" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO"/>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</branch>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</if>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</kw>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</kw>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</branch>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</if>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</branch>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:46.550"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:37:46.550" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:46.550"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:37:46.550" endtime="20230602 06:37:47.050"/>
</kw>
<status status="PASS" starttime="20230602 06:37:45.722" endtime="20230602 06:37:47.050"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:37:25.083" endtime="20230602 06:37:47.050"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D3B7DAFE0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.050"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 06:37:47.050" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 06:37:47.066" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:37:47.066" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:37:47.066" endtime="20230602 06:37:47.066"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 06:37:47.066" endtime="20230602 06:37:47.066"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:37:47.066" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:37:47.066" endtime="20230602 06:37:47.175"/>
</kw>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.175"/>
</kw>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.175"/>
</kw>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:37:47.175"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:37:47.175" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:37:47.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:37:47.175" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:37:47.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:47.175" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:37:47.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:37:47.175" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:37:47.175"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:01.386" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (83, 457)</msg>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:38:01.402"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:01.558" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=35, top=448, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:01.558" level="INFO">@{coordinates} = [ 83 | 457 ]</msg>
<status status="PASS" starttime="20230602 06:38:01.402" endtime="20230602 06:38:01.558"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:01.714" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=35, top=448, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:01.714" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (83, 457)</msg>
<status status="PASS" starttime="20230602 06:38:01.558" endtime="20230602 06:38:01.839"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:02.344" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:01.839" endtime="20230602 06:38:02.344"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:02.344" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:02.344" endtime="20230602 06:38:02.439"/>
</kw>
<status status="PASS" starttime="20230602 06:37:47.175" endtime="20230602 06:38:02.439"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:02.439" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:02.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:02.439" level="INFO">${img} = reporter_windows_tab_preview.png</msg>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:02.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:02.439" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:02.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:02.439" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:02.439"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:02.579" level="INFO">Image "reporter_windows_tab_preview.png" found at (293, 116)</msg>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:02.579"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:02.704" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230602 06:38:02.704" level="INFO">@{coordinates} = [ 293 | 116 ]</msg>
<status status="PASS" starttime="20230602 06:38:02.579" endtime="20230602 06:38:02.704"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:02.830" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230602 06:38:02.830" level="INFO">Clicking image "reporter_windows_tab_preview.png" in position (293, 116)</msg>
<status status="PASS" starttime="20230602 06:38:02.704" endtime="20230602 06:38:02.939"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:03.446" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:02.939" endtime="20230602 06:38:03.446"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:03.446" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:03.446" endtime="20230602 06:38:03.549"/>
</kw>
<status status="PASS" starttime="20230602 06:38:02.439" endtime="20230602 06:38:03.549"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:03.549" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:03.549"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:03.549" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:03.549"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:03.681" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=789, top=26, width=45, height=30)</msg>
<msg timestamp="20230602 06:38:03.681" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (811, 41)</msg>
<status status="PASS" starttime="20230602 06:38:03.556" endtime="20230602 06:38:03.807"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:03.807" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:03.807" endtime="20230602 06:38:03.916"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:03.916" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 06:38:04.417" level="INFO">Process completed.</msg>
<msg timestamp="20230602 06:38:04.417" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO"/>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</branch>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</if>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<status status="PASS" starttime="20230602 06:38:03.556" endtime="20230602 06:38:04.417"/>
</kw>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.417"/>
</kw>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.417"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</branch>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.417"/>
</if>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.417"/>
</branch>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.417"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:04.417" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.417"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:04.417" endtime="20230602 06:38:04.917"/>
</kw>
<status status="PASS" starttime="20230602 06:38:03.549" endtime="20230602 06:38:04.917"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:37:47.050" endtime="20230602 06:38:04.917"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${epoch} = 1685687884</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D3B7DAFE0&gt;, '@{appargs}': ['-i', 'blank_1685687884.ini', '-d', 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\testdata\\Issue-#147\\20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:04.917" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:04.917"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:04.932" level="INFO">${args} = -i 	blank_1685687884.ini 	-d 	D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:04.932"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:04.932"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 06:38:04.932" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6 -i blank_1685687884.ini -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<msg timestamp="20230602 06:38:04.932" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:04.932"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:04.932" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:04.932"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:04.932"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:04.932" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:05.026"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.932" endtime="20230602 06:38:05.026"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:05.026"/>
</kw>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:05.026"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:05.042" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:38:05.026" endtime="20230602 06:38:05.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:05.042" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:38:05.042" endtime="20230602 06:38:05.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:05.042" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:05.042" endtime="20230602 06:38:05.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:05.042" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:05.042" endtime="20230602 06:38:05.042"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:08.794" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (109, 483)</msg>
<status status="PASS" starttime="20230602 06:38:05.042" endtime="20230602 06:38:08.794"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:08.935" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=61, top=474, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:08.935" level="INFO">@{coordinates} = [ 109 | 483 ]</msg>
<status status="PASS" starttime="20230602 06:38:08.794" endtime="20230602 06:38:08.935"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:09.091" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=61, top=474, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:09.091" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (109, 483)</msg>
<status status="PASS" starttime="20230602 06:38:08.935" endtime="20230602 06:38:09.216"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:09.716" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:09.216" endtime="20230602 06:38:09.716"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:09.716" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:09.716" endtime="20230602 06:38:09.825"/>
</kw>
<status status="PASS" starttime="20230602 06:38:05.026" endtime="20230602 06:38:09.825"/>
</kw>
<status status="PASS" starttime="20230602 06:38:05.026" endtime="20230602 06:38:09.825"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:09.825" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:09.825"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:09.825" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:09.825"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:09.950" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=815, top=52, width=45, height=30)</msg>
<msg timestamp="20230602 06:38:09.950" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (837, 67)</msg>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.060"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:10.060" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:10.060" endtime="20230602 06:38:10.154"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:10.154" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 06:38:10.654" level="INFO">Process completed.</msg>
<msg timestamp="20230602 06:38:10.654" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO"/>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</branch>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</if>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</kw>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</kw>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</branch>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</if>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</branch>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:10.654"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:10.654" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:10.654"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:10.654" endtime="20230602 06:38:11.154"/>
</kw>
<status status="PASS" starttime="20230602 06:38:09.825" endtime="20230602 06:38:11.154"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 06:38:04.917" endtime="20230602 06:38:11.154"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D3B7DAFE0&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.154"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 06:38:11.154" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 06:38:11.169" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:11.169" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230602 06:38:11.169" endtime="20230602 06:38:11.169"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 06:38:11.169" endtime="20230602 06:38:11.169"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:11.169" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:11.169" endtime="20230602 06:38:11.279"/>
</kw>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.279"/>
</kw>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.279"/>
</kw>
<status status="PASS" starttime="20230602 06:38:11.154" endtime="20230602 06:38:11.279"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:11.279" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:11.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:11.279" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:11.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:11.279" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:11.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:11.279" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:11.279"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:25.632" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:25.632"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:25.788" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:25.788" level="INFO">@{coordinates} = [ 161 | 535 ]</msg>
<status status="PASS" starttime="20230602 06:38:25.632" endtime="20230602 06:38:25.788"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:25.944" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:25.944" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:25.788" endtime="20230602 06:38:26.085"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:26.601" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:26.085" endtime="20230602 06:38:26.601"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:26.601" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:26.601" endtime="20230602 06:38:26.679"/>
</kw>
<status status="PASS" starttime="20230602 06:38:11.279" endtime="20230602 06:38:26.679"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:26.679" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:26.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:26.679" level="INFO">${img} = reporter_windows_section_report.png</msg>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:26.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:26.679" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:26.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:26.679" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:26.679"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:26.820" level="INFO">Image "reporter_windows_section_report.png" found at (154, 231)</msg>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:26.820"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:26.946" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=133, top=209, width=42, height=45)</msg>
<msg timestamp="20230602 06:38:26.946" level="INFO">@{coordinates} = [ 154 | 231 ]</msg>
<status status="PASS" starttime="20230602 06:38:26.820" endtime="20230602 06:38:26.946"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:27.071" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=133, top=209, width=42, height=45)</msg>
<msg timestamp="20230602 06:38:27.071" level="INFO">Clicking image "reporter_windows_section_report.png" in position (154, 231)</msg>
<status status="PASS" starttime="20230602 06:38:26.946" endtime="20230602 06:38:27.180"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:27.685" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:27.180" endtime="20230602 06:38:27.685"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:27.685" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:27.685" endtime="20230602 06:38:27.763"/>
</kw>
<status status="PASS" starttime="20230602 06:38:26.679" endtime="20230602 06:38:27.763"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:27.763" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:27.763" endtime="20230602 06:38:27.856"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:27.856" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:27.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:27.856" level="INFO">${img} = reporter_windows_button_addsection.png</msg>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:27.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:27.856" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:27.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:27.856" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:27.856"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:27.981" level="INFO">Image "reporter_windows_button_addsection.png" found at (127, 200)</msg>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:27.981"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:28.107" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=114, top=186, width=26, height=28)</msg>
<msg timestamp="20230602 06:38:28.107" level="INFO">@{coordinates} = [ 127 | 200 ]</msg>
<status status="PASS" starttime="20230602 06:38:27.981" endtime="20230602 06:38:28.107"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:28.247" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=114, top=186, width=26, height=28)</msg>
<msg timestamp="20230602 06:38:28.247" level="INFO">Clicking image "reporter_windows_button_addsection.png" in position (127, 200)</msg>
<status status="PASS" starttime="20230602 06:38:28.107" endtime="20230602 06:38:28.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:28.873" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:28.372" endtime="20230602 06:38:28.873"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:28.873" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:28.873" endtime="20230602 06:38:28.966"/>
</kw>
<status status="PASS" starttime="20230602 06:38:27.856" endtime="20230602 06:38:28.966"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230602 06:38:29.092" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_sectionname.png" found at Box(left=460, top=379, width=80, height=21)</msg>
<msg timestamp="20230602 06:38:29.092" level="INFO">Clicking 1 time(s) at (500, 409) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230602 06:38:28.966" endtime="20230602 06:38:29.217"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230602 06:38:29.217" endtime="20230602 06:38:29.326"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:29.326" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:29.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:29.326" level="INFO">${img} = reporter_windows_button_ok.png</msg>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:29.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:29.326" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:29.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:29.326" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:29.326"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:29.451" level="INFO">Image "reporter_windows_button_ok.png" found at (475, 440)</msg>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:29.451"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:29.592" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230602 06:38:29.592" level="INFO">@{coordinates} = [ 475 | 440 ]</msg>
<status status="PASS" starttime="20230602 06:38:29.451" endtime="20230602 06:38:29.592"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:29.748" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230602 06:38:29.748" level="INFO">Clicking image "reporter_windows_button_ok.png" in position (475, 440)</msg>
<status status="PASS" starttime="20230602 06:38:29.592" endtime="20230602 06:38:29.857"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:30.358" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:29.857" endtime="20230602 06:38:30.358"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:30.358" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:30.358" endtime="20230602 06:38:30.436"/>
</kw>
<status status="PASS" starttime="20230602 06:38:29.326" endtime="20230602 06:38:30.436"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:30.451" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:30.451" endtime="20230602 06:38:30.545"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:30.545" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:30.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:30.545" level="INFO">${img} = reporter_windows_section_issue#149.png</msg>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:30.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:30.545" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:30.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:30.545" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:30.545"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:30.670" level="INFO">Image "reporter_windows_section_issue#149.png" found at (185, 389)</msg>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:30.670"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:30.811" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=155, top=381, width=60, height=16)</msg>
<msg timestamp="20230602 06:38:30.811" level="INFO">@{coordinates} = [ 185 | 389 ]</msg>
<status status="PASS" starttime="20230602 06:38:30.670" endtime="20230602 06:38:30.811"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:30.967" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=155, top=381, width=60, height=16)</msg>
<msg timestamp="20230602 06:38:30.967" level="INFO">Clicking image "reporter_windows_section_issue#149.png" in position (185, 389)</msg>
<status status="PASS" starttime="20230602 06:38:30.811" endtime="20230602 06:38:31.109"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:31.609" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:31.109" endtime="20230602 06:38:31.609"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:31.609" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:31.609" endtime="20230602 06:38:31.702"/>
</kw>
<status status="PASS" starttime="20230602 06:38:30.545" endtime="20230602 06:38:31.702"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:31.702" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:31.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:31.702" level="INFO">${img} = reporter_windows_label_type.png</msg>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:31.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:31.702" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:31.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:31.702" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:31.702"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:31.827" level="INFO">Image "reporter_windows_label_type.png" found at (365, 242)</msg>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:31.827"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:31.968" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_type.png" found at Box(left=339, top=234, width=53, height=17)</msg>
<msg timestamp="20230602 06:38:31.968" level="INFO">@{coordinates} = [ 365 | 242 ]</msg>
<status status="PASS" starttime="20230602 06:38:31.827" endtime="20230602 06:38:31.968"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:31.968" level="INFO">${x} = 415</msg>
<status status="PASS" starttime="20230602 06:38:31.968" endtime="20230602 06:38:31.968"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:31.968" level="INFO">${y} = 242</msg>
<status status="PASS" starttime="20230602 06:38:31.968" endtime="20230602 06:38:31.968"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 06:38:31.968" level="INFO">@{coordinates} = [ 415 | 242 ]</msg>
<status status="PASS" starttime="20230602 06:38:31.968" endtime="20230602 06:38:31.968"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 06:38:31.968" endtime="20230602 06:38:32.077"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 06:38:32.077" endtime="20230602 06:38:32.202"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:32.702" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:32.202" endtime="20230602 06:38:32.702"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:32.702" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:32.702" endtime="20230602 06:38:32.796"/>
</kw>
<status status="PASS" starttime="20230602 06:38:31.702" endtime="20230602 06:38:32.796"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:32.796" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:32.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:32.796" level="INFO">${img} = reporter_windows_option_datatable.png</msg>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:32.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:32.796" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:32.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:32.796" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:32.796"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:32.937" level="INFO">Image "reporter_windows_option_datatable.png" found at (454, 341)</msg>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:32.937"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:33.078" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=413, top=335, width=83, height=13)</msg>
<msg timestamp="20230602 06:38:33.078" level="INFO">@{coordinates} = [ 454 | 341 ]</msg>
<status status="PASS" starttime="20230602 06:38:32.937" endtime="20230602 06:38:33.078"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:33.219" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=413, top=335, width=83, height=13)</msg>
<msg timestamp="20230602 06:38:33.219" level="INFO">Clicking image "reporter_windows_option_datatable.png" in position (454, 341)</msg>
<status status="PASS" starttime="20230602 06:38:33.078" endtime="20230602 06:38:33.344"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:33.860" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:33.344" endtime="20230602 06:38:33.860"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:33.860" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:33.860" endtime="20230602 06:38:33.953"/>
</kw>
<status status="PASS" starttime="20230602 06:38:32.796" endtime="20230602 06:38:33.953"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:33.953" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:33.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:33.953" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:33.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:33.953" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:33.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:33.953" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:33.953"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:34.094" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:34.094"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:34.235" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:34.235" level="INFO">@{coordinates} = [ 161 | 535 ]</msg>
<status status="PASS" starttime="20230602 06:38:34.094" endtime="20230602 06:38:34.235"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:34.376" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:34.376" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:34.235" endtime="20230602 06:38:34.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:35.001" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:34.501" endtime="20230602 06:38:35.001"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:35.001" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:35.001" endtime="20230602 06:38:35.111"/>
</kw>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:35.111"/>
</kw>
<status status="PASS" starttime="20230602 06:38:33.953" endtime="20230602 06:38:35.111"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<arg>60</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:35.111" level="INFO">${labell} = showgraphcolours</msg>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:35.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:35.111" level="INFO">${img} = reporter_windows_label_showgraphcolours.png</msg>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:35.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:35.111" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:35.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:35.111" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:35.111"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:35.251" level="INFO">Image "reporter_windows_label_showgraphcolours.png" found at (394, 265)</msg>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:35.251"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:35.392" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_showgraphcolours.png" found at Box(left=338, top=257, width=112, height=17)</msg>
<msg timestamp="20230602 06:38:35.392" level="INFO">@{coordinates} = [ 394 | 265 ]</msg>
<status status="PASS" starttime="20230602 06:38:35.251" endtime="20230602 06:38:35.392"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:35.392" level="INFO">${x} = 454</msg>
<status status="PASS" starttime="20230602 06:38:35.392" endtime="20230602 06:38:35.392"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:35.392" level="INFO">${y} = 265</msg>
<status status="PASS" starttime="20230602 06:38:35.392" endtime="20230602 06:38:35.392"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 06:38:35.408" level="INFO">@{coordinates} = [ 454 | 265 ]</msg>
<status status="PASS" starttime="20230602 06:38:35.392" endtime="20230602 06:38:35.408"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 06:38:35.408" endtime="20230602 06:38:35.517"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 06:38:35.517" endtime="20230602 06:38:35.626"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:36.129" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:35.626" endtime="20230602 06:38:36.129"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:36.129" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:36.129" endtime="20230602 06:38:36.223"/>
</kw>
<status status="PASS" starttime="20230602 06:38:35.111" endtime="20230602 06:38:36.223"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<arg>60</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:36.223" level="INFO">${labell} = datatype</msg>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:36.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:36.223" level="INFO">${img} = reporter_windows_label_datatype.png</msg>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:36.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:36.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:36.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:36.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:36.223"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:36.348" level="INFO">Image "reporter_windows_label_datatype.png" found at (396, 287)</msg>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:36.348"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:36.473" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_datatype.png" found at Box(left=339, top=279, width=114, height=16)</msg>
<msg timestamp="20230602 06:38:36.473" level="INFO">@{coordinates} = [ 396 | 287 ]</msg>
<status status="PASS" starttime="20230602 06:38:36.348" endtime="20230602 06:38:36.473"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:36.473" level="INFO">${x} = 456</msg>
<status status="PASS" starttime="20230602 06:38:36.473" endtime="20230602 06:38:36.473"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 06:38:36.473" level="INFO">${y} = 287</msg>
<status status="PASS" starttime="20230602 06:38:36.473" endtime="20230602 06:38:36.473"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 06:38:36.473" level="INFO">@{coordinates} = [ 456 | 287 ]</msg>
<status status="PASS" starttime="20230602 06:38:36.473" endtime="20230602 06:38:36.473"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 06:38:36.473" endtime="20230602 06:38:36.583"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 06:38:36.583" endtime="20230602 06:38:36.723"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:37.224" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:36.723" endtime="20230602 06:38:37.224"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:37.224" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:37.224" endtime="20230602 06:38:37.333"/>
</kw>
<status status="PASS" starttime="20230602 06:38:36.223" endtime="20230602 06:38:37.349"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 06:38:37.349" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:37.349"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:37.349" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:37.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:37.349" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:37.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:37.349" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:37.349"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 06:38:37.505" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:37.505"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 06:38:37.646" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:37.646" level="INFO">@{coordinates} = [ 161 | 535 ]</msg>
<status status="PASS" starttime="20230602 06:38:37.505" endtime="20230602 06:38:37.646"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:37.802" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=113, top=526, width=96, height=18)</msg>
<msg timestamp="20230602 06:38:37.802" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (161, 535)</msg>
<status status="PASS" starttime="20230602 06:38:37.646" endtime="20230602 06:38:37.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:38.437" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:37.927" endtime="20230602 06:38:38.437"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:38.437" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:38.437" endtime="20230602 06:38:38.531"/>
</kw>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:38.531"/>
</kw>
<status status="PASS" starttime="20230602 06:38:37.349" endtime="20230602 06:38:38.531"/>
</kw>
<kw name="Find Text">
<arg>Filter Type:</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:38.531" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:38.531" endtime="20230602 06:38:38.625"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\output.xml</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">${path} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO" html="true">Listing contents of directory '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10&lt;/a&gt;'.</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">25 files:
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png
D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">@{files} = [ D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png | D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic...</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 25</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${fc} = 25</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${len0} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.625" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.625" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.625"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.640" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.640" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.640" level="INFO">Length is 106</msg>
<msg timestamp="20230602 06:38:38.640" level="INFO">${lenlast} = 106</msg>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230602 06:38:38.640" level="INFO">Length is 107</msg>
<msg timestamp="20230602 06:38:38.640" level="INFO">${lenlast} = 107</msg>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</return>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</if>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</iter>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</while>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</branch>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</if>
<msg timestamp="20230602 06:38:38.640" level="INFO">${img} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png</msg>
<status status="PASS" starttime="20230602 06:38:38.625" endtime="20230602 06:38:38.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:38.640" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png</msg>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.640"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230602 06:38:38.656" level="INFO">${processed_img} = [[[243 159   0]
  [243 159   0]
  [243 159   0]
  ...
  [180  62   3]
  [179  61   2]
  [179  61   2]]

 [[243 159   0]
  [243 159   0]
  [243 159   0]
  ...
  [182  64   5]
  [183  65   6]
  [183  65...</msg>
<status status="PASS" starttime="20230602 06:38:38.640" endtime="20230602 06:38:38.656"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230602 06:38:39.438" level="INFO">${bounds} = None</msg>
<status status="PASS" starttime="20230602 06:38:38.656" endtime="20230602 06:38:39.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:39.438" level="INFO">None</msg>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<if>
<branch type="IF" condition="${bounds}">
<return>
<value>${bounds}</value>
<status status="NOT RUN" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</return>
<status status="NOT RUN" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>${mytext} Not Found</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 06:38:39.438" level="FAIL">Filter Type: Not Found</msg>
<status status="FAIL" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<status status="FAIL" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</branch>
<status status="FAIL" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</if>
<status status="FAIL" starttime="20230602 06:38:38.531" endtime="20230602 06:38:39.438"/>
</kw>
<kw name="Find Text">
<arg>Result Name</arg>
<status status="NOT RUN" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:39.438" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:39.438" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:39.438"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 06:38:39.578" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=867, top=104, width=45, height=30)</msg>
<msg timestamp="20230602 06:38:39.578" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (889, 119)</msg>
<status status="PASS" starttime="20230602 06:38:39.453" endtime="20230602 06:38:39.703"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 06:38:39.703" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 06:38:39.703" endtime="20230602 06:38:39.797"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:39.797" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 06:38:40.298" level="INFO">Process completed.</msg>
<msg timestamp="20230602 06:38:40.298" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO"/>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</branch>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</if>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:39.453" endtime="20230602 06:38:40.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.298"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</branch>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.298"/>
</if>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.298"/>
</branch>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.298"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:40.298" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.298"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:40.798" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:40.298" endtime="20230602 06:38:40.798"/>
</kw>
<status status="PASS" starttime="20230602 06:38:39.438" endtime="20230602 06:38:40.798"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 06:38:11.154" endtime="20230602 06:38:40.798">Filter Type: Not Found</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="95">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 06:38:40.798" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 06:38:40.798" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</branch>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</if>
<status status="NOT RUN" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</branch>
<status status="PASS" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 06:38:40.798" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 06:38:40.798" endtime="20230602 06:38:40.798"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 06:38:41.298" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 06:38:40.798" endtime="20230602 06:38:41.298"/>
</kw>
<status status="PASS" starttime="20230602 06:38:40.798" endtime="20230602 06:38:41.298"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 06:38:40.798" endtime="20230602 06:38:41.298">AssertionError</status>
</test>
<status status="FAIL" starttime="20230602 06:37:23.721" endtime="20230602 06:38:41.298"/>
</suite>
<status status="FAIL" starttime="20230602 06:36:49.797" endtime="20230602 06:38:41.298"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
