<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.11 on win32)" generated="20230604 03:13:41.626" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:13:41.672"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:13:41.672"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-27.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-27.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-28.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-28.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-29.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-29.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:13:41.672" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:13:41.672"/>
</kw>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:13:41.672"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:13:41.672" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:14:00.339" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:14:00.339"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:14:00.339" endtime="20230604 03:14:00.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:00.339" endtime="20230604 03:14:00.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:00.339" endtime="20230604 03:14:00.339"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:13:41.672" endtime="20230604 03:14:00.339"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:14:00.339" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:14:01.293" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230604 03:14:00.339" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:00.339" endtime="20230604 03:14:01.293"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:01.293"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:14:01.293" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:14:05.005" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:05.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:05.005" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230604 03:14:05.005" endtime="20230604 03:14:05.005"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:05.005" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:01.293" endtime="20230604 03:14:05.021"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:05.021"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:14:05.021" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:14:09.717" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:09.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">
</msg>
<status status="PASS" starttime="20230604 03:14:09.717" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:05.021" endtime="20230604 03:14:09.733"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:09.733"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:14:09.733" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:14:13.410" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:13.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:13.426" level="INFO">
</msg>
<status status="PASS" starttime="20230604 03:14:13.410" endtime="20230604 03:14:13.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:13.426" endtime="20230604 03:14:13.426"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:13.426" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:13.426" endtime="20230604 03:14:13.426"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230604 03:14:09.733" endtime="20230604 03:14:13.426"/>
</test>
<status status="PASS" starttime="20230604 03:13:41.657" endtime="20230604 03:14:13.426"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:14:14.849" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:14.849" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017A9DD51720&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:14:14.849" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:14.849" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:14.849" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.849"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:14.865" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:14.865" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:14:14.865" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:14:14.865" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:14.865" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.865"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:14.865" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.975"/>
</kw>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.975"/>
</kw>
<status status="PASS" starttime="20230604 03:14:14.865" endtime="20230604 03:14:14.975"/>
</kw>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:14.975"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:14:14.975" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:14.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:14.975" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:14.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:14.975" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:14.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:14.975" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:14.975"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:14:31.248" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (83, 457)</msg>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:31.248"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:31.764" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:31.248" endtime="20230604 03:14:31.764"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:31.764" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:31.764" endtime="20230604 03:14:31.857"/>
</kw>
<status status="PASS" starttime="20230604 03:14:14.975" endtime="20230604 03:14:31.857"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:31.857" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:31.857"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:31.857" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:31.857"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:14:31.951" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=789, top=26, width=45, height=30)</msg>
<msg timestamp="20230604 03:14:31.951" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (811, 41)</msg>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.077"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:32.077" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:32.077" endtime="20230604 03:14:32.186"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:32.186" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:14:32.686" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:14:32.686" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO"/>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</branch>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</if>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</kw>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</kw>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</branch>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</if>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</branch>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:32.686"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:32.686" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:32.686"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:32.686" endtime="20230604 03:14:33.187"/>
</kw>
<status status="PASS" starttime="20230604 03:14:31.857" endtime="20230604 03:14:33.187"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:14.849" endtime="20230604 03:14:33.187"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017A9DD51720&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:14:33.187" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.187"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:33.187" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.265"/>
</kw>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.265"/>
</kw>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.265"/>
</kw>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:33.265"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:14:33.265" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:33.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:33.265" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:33.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:33.265" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:33.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:33.265" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:33.265"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:14:45.351" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (109, 483)</msg>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:45.351"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:45.858" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:45.351" endtime="20230604 03:14:45.858"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:45.858" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:45.858" endtime="20230604 03:14:45.936"/>
</kw>
<status status="PASS" starttime="20230604 03:14:33.265" endtime="20230604 03:14:45.936"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:14:45.936" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:45.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:45.936" level="INFO">${img} = reporter_windows_tab_preview.png</msg>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:45.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:45.936" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:45.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:45.936" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:45.936"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:14:46.030" level="INFO">Image "reporter_windows_tab_preview.png" found at (319, 142)</msg>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:46.030"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:14:46.123" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=287, top=131, width=65, height=23)</msg>
<msg timestamp="20230604 03:14:46.123" level="INFO">@{coordinates} = [ 319 | 142 ]</msg>
<status status="PASS" starttime="20230604 03:14:46.030" endtime="20230604 03:14:46.123"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:14:46.233" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=287, top=131, width=65, height=23)</msg>
<msg timestamp="20230604 03:14:46.233" level="INFO">Clicking image "reporter_windows_tab_preview.png" in position (319, 142)</msg>
<status status="PASS" starttime="20230604 03:14:46.123" endtime="20230604 03:14:46.358"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:46.858" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:46.358" endtime="20230604 03:14:46.858"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:46.858" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:46.858" endtime="20230604 03:14:46.952"/>
</kw>
<status status="PASS" starttime="20230604 03:14:45.936" endtime="20230604 03:14:46.952"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:46.952" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:46.952"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:46.952" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:46.952"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:14:47.077" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=815, top=52, width=45, height=30)</msg>
<msg timestamp="20230604 03:14:47.077" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (837, 67)</msg>
<status status="PASS" starttime="20230604 03:14:46.968" endtime="20230604 03:14:47.218"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:47.218" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:47.218" endtime="20230604 03:14:47.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:47.312" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:14:47.812" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:14:47.812" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO"/>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</branch>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</if>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<status status="PASS" starttime="20230604 03:14:46.968" endtime="20230604 03:14:47.812"/>
</kw>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:47.812"/>
</kw>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:47.812"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</branch>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:47.812"/>
</if>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:47.812"/>
</branch>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:47.812"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:47.812" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:47.812"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:47.812" endtime="20230604 03:14:48.312"/>
</kw>
<status status="PASS" starttime="20230604 03:14:46.952" endtime="20230604 03:14:48.312"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:33.187" endtime="20230604 03:14:48.312"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${epoch} = 1685848488</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017A9DD51720&gt;, '@{appargs}': ['-i', 'blank_1685848488.ini', '-d', 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\testdata\\Issue-#147\\20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${args} = -i 	blank_1685848488.ini 	-d 	D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6 -i blank_1685848488.ini -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<msg timestamp="20230604 03:14:48.312" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:48.312" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.328"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:14:48.328" endtime="20230604 03:14:48.328"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:48.328" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:48.328" endtime="20230604 03:14:48.406"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.406"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.406"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:48.406"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:14:48.406" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:48.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:48.406" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:48.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:48.406" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:48.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:48.406" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:48.406"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:14:51.408" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:51.408"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:51.923" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:51.408" endtime="20230604 03:14:51.923"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:51.923" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:51.923" endtime="20230604 03:14:52.017"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:52.017"/>
</kw>
<status status="PASS" starttime="20230604 03:14:48.406" endtime="20230604 03:14:52.017"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:52.017" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.017"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:52.017" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.017"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:14:52.127" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=867, top=104, width=45, height=30)</msg>
<msg timestamp="20230604 03:14:52.127" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (889, 119)</msg>
<status status="PASS" starttime="20230604 03:14:52.033" endtime="20230604 03:14:52.252"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:52.252" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:52.252" endtime="20230604 03:14:52.330"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:52.330" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:14:52.836" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:14:52.836" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO"/>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</branch>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</if>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.033" endtime="20230604 03:14:52.836"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.836"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.836"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</branch>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.836"/>
</if>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.836"/>
</branch>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:52.836"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:52.836" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:52.836"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:14:52.836" endtime="20230604 03:14:53.339"/>
</kw>
<status status="PASS" starttime="20230604 03:14:52.017" endtime="20230604 03:14:53.339"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:48.312" endtime="20230604 03:14:53.339"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.10\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017A9DD51720&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:14:53.339" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.339"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:14:53.339" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.438"/>
</kw>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.438"/>
</kw>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.438"/>
</kw>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:14:53.438"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:14:53.438" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:14:53.438"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:14:53.438" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:14:53.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:53.438" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:14:53.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:14:53.438" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:14:53.438"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:06.144" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (213, 587)</msg>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:15:06.144"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:06.644" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:06.144" endtime="20230604 03:15:06.644"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:06.644" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:06.644" endtime="20230604 03:15:06.722"/>
</kw>
<status status="PASS" starttime="20230604 03:14:53.438" endtime="20230604 03:15:06.722"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:06.722" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:06.722"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:06.722" level="INFO">${img} = reporter_windows_section_report.png</msg>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:06.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:06.722" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:06.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:06.722" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:06.722"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:06.816" level="INFO">Image "reporter_windows_section_report.png" found at (206, 283)</msg>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:06.816"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:06.926" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=185, top=261, width=42, height=45)</msg>
<msg timestamp="20230604 03:15:06.926" level="INFO">@{coordinates} = [ 206 | 283 ]</msg>
<status status="PASS" starttime="20230604 03:15:06.816" endtime="20230604 03:15:06.926"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:07.035" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=185, top=261, width=42, height=45)</msg>
<msg timestamp="20230604 03:15:07.035" level="INFO">Clicking image "reporter_windows_section_report.png" in position (206, 283)</msg>
<status status="PASS" starttime="20230604 03:15:06.926" endtime="20230604 03:15:07.160"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:07.661" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:07.160" endtime="20230604 03:15:07.661"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:07.661" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:07.661" endtime="20230604 03:15:07.754"/>
</kw>
<status status="PASS" starttime="20230604 03:15:06.722" endtime="20230604 03:15:07.754"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:07.754" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:07.754" endtime="20230604 03:15:07.833"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:07.833" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:07.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:07.833" level="INFO">${img} = reporter_windows_button_addsection.png</msg>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:07.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:07.833" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:07.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:07.833" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:07.833"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:07.926" level="INFO">Image "reporter_windows_button_addsection.png" found at (179, 252)</msg>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:07.926"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:08.036" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=166, top=238, width=26, height=28)</msg>
<msg timestamp="20230604 03:15:08.036" level="INFO">@{coordinates} = [ 179 | 252 ]</msg>
<status status="PASS" starttime="20230604 03:15:07.926" endtime="20230604 03:15:08.036"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:08.145" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=166, top=238, width=26, height=28)</msg>
<msg timestamp="20230604 03:15:08.145" level="INFO">Clicking image "reporter_windows_button_addsection.png" in position (179, 252)</msg>
<status status="PASS" starttime="20230604 03:15:08.036" endtime="20230604 03:15:08.286"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:08.786" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:08.286" endtime="20230604 03:15:08.786"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:08.786" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:08.786" endtime="20230604 03:15:08.864"/>
</kw>
<status status="PASS" starttime="20230604 03:15:07.833" endtime="20230604 03:15:08.864"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230604 03:15:08.958" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_sectionname.png" found at Box(left=460, top=379, width=80, height=21)</msg>
<msg timestamp="20230604 03:15:08.958" level="INFO">Clicking 1 time(s) at (500, 409) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230604 03:15:08.864" endtime="20230604 03:15:09.099"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230604 03:15:09.099" endtime="20230604 03:15:09.224"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:09.224" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:09.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:09.224" level="INFO">${img} = reporter_windows_button_ok.png</msg>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:09.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:09.224" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:09.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:09.224" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:09.224"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:09.317" level="INFO">Image "reporter_windows_button_ok.png" found at (475, 440)</msg>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:09.317"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:09.427" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230604 03:15:09.427" level="INFO">@{coordinates} = [ 475 | 440 ]</msg>
<status status="PASS" starttime="20230604 03:15:09.317" endtime="20230604 03:15:09.427"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:09.521" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230604 03:15:09.521" level="INFO">Clicking image "reporter_windows_button_ok.png" in position (475, 440)</msg>
<status status="PASS" starttime="20230604 03:15:09.427" endtime="20230604 03:15:09.630"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:10.130" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:09.630" endtime="20230604 03:15:10.130"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:10.130" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:10.130" endtime="20230604 03:15:10.224"/>
</kw>
<status status="PASS" starttime="20230604 03:15:09.224" endtime="20230604 03:15:10.224"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:10.224" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:10.224" endtime="20230604 03:15:10.302"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:10.302" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:10.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:10.302" level="INFO">${img} = reporter_windows_section_issue#149.png</msg>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:10.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:10.302" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:10.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:10.302" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:10.302"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:10.396" level="INFO">Image "reporter_windows_section_issue#149.png" found at (237, 441)</msg>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:10.396"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:10.490" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=207, top=433, width=60, height=16)</msg>
<msg timestamp="20230604 03:15:10.490" level="INFO">@{coordinates} = [ 237 | 441 ]</msg>
<status status="PASS" starttime="20230604 03:15:10.396" endtime="20230604 03:15:10.490"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:10.599" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=207, top=433, width=60, height=16)</msg>
<msg timestamp="20230604 03:15:10.599" level="INFO">Clicking image "reporter_windows_section_issue#149.png" in position (237, 441)</msg>
<status status="PASS" starttime="20230604 03:15:10.490" endtime="20230604 03:15:10.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:11.229" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:10.724" endtime="20230604 03:15:11.229"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:11.229" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:11.229" endtime="20230604 03:15:11.307"/>
</kw>
<status status="PASS" starttime="20230604 03:15:10.302" endtime="20230604 03:15:11.307"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:11.307" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:11.307" level="INFO">${img} = reporter_windows_label_type.png</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:11.307" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=53x17 at 0x17AA0FAD6C0&gt;</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:11.307" level="INFO">${imgsize} = (53, 17)</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</return>
<msg timestamp="20230604 03:15:11.307" level="INFO">${imgsize} = (53, 17)</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:11.323" level="INFO">(53, 17)</msg>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:11.323"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:11.323" level="INFO">${offsetx} = 31</msg>
<status status="PASS" starttime="20230604 03:15:11.323" endtime="20230604 03:15:11.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:11.323" level="INFO">31</msg>
<status status="PASS" starttime="20230604 03:15:11.323" endtime="20230604 03:15:11.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:11.323" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:11.323" endtime="20230604 03:15:11.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:11.323" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:11.323" endtime="20230604 03:15:11.323"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:11.432" level="INFO">Image "reporter_windows_label_type.png" found at (417, 294)</msg>
<status status="PASS" starttime="20230604 03:15:11.323" endtime="20230604 03:15:11.432"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:11.526" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_type.png" found at Box(left=391, top=286, width=53, height=17)</msg>
<msg timestamp="20230604 03:15:11.526" level="INFO">@{coordinates} = [ 417 | 294 ]</msg>
<status status="PASS" starttime="20230604 03:15:11.432" endtime="20230604 03:15:11.526"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:11.526" level="INFO">${x} = 448</msg>
<status status="PASS" starttime="20230604 03:15:11.526" endtime="20230604 03:15:11.526"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:11.526" level="INFO">${y} = 294</msg>
<status status="PASS" starttime="20230604 03:15:11.526" endtime="20230604 03:15:11.526"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:15:11.526" level="INFO">@{coordinates} = [ 448 | 294 ]</msg>
<status status="PASS" starttime="20230604 03:15:11.526" endtime="20230604 03:15:11.526"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:15:11.526" endtime="20230604 03:15:11.635"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:15:11.635" endtime="20230604 03:15:11.776"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:12.292" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:11.776" endtime="20230604 03:15:12.292"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:12.292" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:12.292" endtime="20230604 03:15:12.385"/>
</kw>
<status status="PASS" starttime="20230604 03:15:11.307" endtime="20230604 03:15:12.385"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:12.385" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:12.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:12.385" level="INFO">${img} = reporter_windows_option_datatable.png</msg>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:12.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:12.385" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:12.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:12.385" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:12.385"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:12.479" level="INFO">Image "reporter_windows_option_datatable.png" found at (506, 393)</msg>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:12.479"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:12.573" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=465, top=387, width=83, height=13)</msg>
<msg timestamp="20230604 03:15:12.573" level="INFO">@{coordinates} = [ 506 | 393 ]</msg>
<status status="PASS" starttime="20230604 03:15:12.479" endtime="20230604 03:15:12.573"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:12.667" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=465, top=387, width=83, height=13)</msg>
<msg timestamp="20230604 03:15:12.667" level="INFO">Clicking image "reporter_windows_option_datatable.png" in position (506, 393)</msg>
<status status="PASS" starttime="20230604 03:15:12.573" endtime="20230604 03:15:12.792"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:13.292" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:12.792" endtime="20230604 03:15:13.292"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:13.292" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:13.292" endtime="20230604 03:15:13.370"/>
</kw>
<status status="PASS" starttime="20230604 03:15:12.385" endtime="20230604 03:15:13.370"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:13.370" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:13.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:13.370" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:13.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:13.370" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:13.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:13.370" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:13.370"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:13.464" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (213, 587)</msg>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:13.464"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:13.964" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:13.464" endtime="20230604 03:15:13.964"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:13.964" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:13.964" endtime="20230604 03:15:14.042"/>
</kw>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:14.042"/>
</kw>
<status status="PASS" starttime="20230604 03:15:13.370" endtime="20230604 03:15:14.042"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:14.042" level="INFO">${labell} = showgraphcolours</msg>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:14.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:14.042" level="INFO">${img} = reporter_windows_label_showgraphcolours.png</msg>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:14.042"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:14.042" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=112x17 at 0x17AA0EAEAD0&gt;</msg>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:14.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">${imgsize} = (112, 17)</msg>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:14.058"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</return>
<msg timestamp="20230604 03:15:14.058" level="INFO">${imgsize} = (112, 17)</msg>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">(112, 17)</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">${offsetx} = 61</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">61</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:14.058" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.058"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:14.167" level="INFO">Image "reporter_windows_label_showgraphcolours.png" found at (446, 317)</msg>
<status status="PASS" starttime="20230604 03:15:14.058" endtime="20230604 03:15:14.167"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:14.261" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_showgraphcolours.png" found at Box(left=390, top=309, width=112, height=17)</msg>
<msg timestamp="20230604 03:15:14.261" level="INFO">@{coordinates} = [ 446 | 317 ]</msg>
<status status="PASS" starttime="20230604 03:15:14.167" endtime="20230604 03:15:14.261"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:14.261" level="INFO">${x} = 507</msg>
<status status="PASS" starttime="20230604 03:15:14.261" endtime="20230604 03:15:14.261"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:14.277" level="INFO">${y} = 317</msg>
<status status="PASS" starttime="20230604 03:15:14.261" endtime="20230604 03:15:14.277"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:15:14.277" level="INFO">@{coordinates} = [ 507 | 317 ]</msg>
<status status="PASS" starttime="20230604 03:15:14.277" endtime="20230604 03:15:14.277"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:15:14.277" endtime="20230604 03:15:14.386"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:15:14.386" endtime="20230604 03:15:14.527"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:15.027" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:14.527" endtime="20230604 03:15:15.027"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:15.027" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:15.027" endtime="20230604 03:15:15.121"/>
</kw>
<status status="PASS" starttime="20230604 03:15:14.042" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">${labell} = datatype</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">${img} = reporter_windows_label_datatype.png</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=114x16 at 0x17AA0FAC370&gt;</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">${imgsize} = (114, 16)</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</return>
<msg timestamp="20230604 03:15:15.121" level="INFO">${imgsize} = (114, 16)</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">(114, 16)</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">${offsetx} = 62</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">62</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:15.121" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.121"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:15.215" level="INFO">Image "reporter_windows_label_datatype.png" found at (448, 339)</msg>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:15.215"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:15.309" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_datatype.png" found at Box(left=391, top=331, width=114, height=16)</msg>
<msg timestamp="20230604 03:15:15.309" level="INFO">@{coordinates} = [ 448 | 339 ]</msg>
<status status="PASS" starttime="20230604 03:15:15.215" endtime="20230604 03:15:15.309"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:15.309" level="INFO">${x} = 510</msg>
<status status="PASS" starttime="20230604 03:15:15.309" endtime="20230604 03:15:15.309"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:15.309" level="INFO">${y} = 339</msg>
<status status="PASS" starttime="20230604 03:15:15.309" endtime="20230604 03:15:15.309"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:15:15.309" level="INFO">@{coordinates} = [ 510 | 339 ]</msg>
<status status="PASS" starttime="20230604 03:15:15.309" endtime="20230604 03:15:15.309"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:15:15.309" endtime="20230604 03:15:15.418"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:15:15.418" endtime="20230604 03:15:15.543"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:16.043" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:15.543" endtime="20230604 03:15:16.043"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:16.043" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:16.043" endtime="20230604 03:15:16.137"/>
</kw>
<status status="PASS" starttime="20230604 03:15:15.121" endtime="20230604 03:15:16.137"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:16.137" level="INFO">${optnamel} = result</msg>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:16.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:16.137" level="INFO">${img} = reporter_windows_option_result.png</msg>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:16.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:16.137" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:16.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:16.137" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:16.137"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:16.231" level="INFO">Image "reporter_windows_option_result.png" found at (530, 380)</msg>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:16.231"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:16.325" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_result.png" found at Box(left=502, top=374, width=57, height=12)</msg>
<msg timestamp="20230604 03:15:16.325" level="INFO">@{coordinates} = [ 530 | 380 ]</msg>
<status status="PASS" starttime="20230604 03:15:16.231" endtime="20230604 03:15:16.325"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:16.434" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_result.png" found at Box(left=502, top=374, width=57, height=12)</msg>
<msg timestamp="20230604 03:15:16.434" level="INFO">Clicking image "reporter_windows_option_result.png" in position (530, 380)</msg>
<status status="PASS" starttime="20230604 03:15:16.325" endtime="20230604 03:15:16.559"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:17.059" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:16.559" endtime="20230604 03:15:17.059"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:17.059" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-24.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:17.059" endtime="20230604 03:15:17.138"/>
</kw>
<status status="PASS" starttime="20230604 03:15:16.137" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">${labell} = resulttype</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">${img} = reporter_windows_label_resulttype.png</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=76x16 at 0x17AA0FAC310&gt;</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">${imgsize} = (76, 16)</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</return>
<msg timestamp="20230604 03:15:17.138" level="INFO">${imgsize} = (76, 16)</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">(76, 16)</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">${offsetx} = 43</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">43</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:17.138" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.138"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:17.232" level="INFO">Image "reporter_windows_label_resulttype.png" found at (426, 381)</msg>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:17.232"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:17.341" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_resulttype.png" found at Box(left=388, top=373, width=76, height=16)</msg>
<msg timestamp="20230604 03:15:17.341" level="INFO">@{coordinates} = [ 426 | 381 ]</msg>
<status status="PASS" starttime="20230604 03:15:17.232" endtime="20230604 03:15:17.341"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:17.341" level="INFO">${x} = 469</msg>
<status status="PASS" starttime="20230604 03:15:17.341" endtime="20230604 03:15:17.341"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:15:17.341" level="INFO">${y} = 381</msg>
<status status="PASS" starttime="20230604 03:15:17.341" endtime="20230604 03:15:17.341"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:15:17.341" level="INFO">@{coordinates} = [ 469 | 381 ]</msg>
<status status="PASS" starttime="20230604 03:15:17.341" endtime="20230604 03:15:17.341"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:15:17.341" endtime="20230604 03:15:17.450"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:15:17.450" endtime="20230604 03:15:17.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:18.075" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:17.575" endtime="20230604 03:15:18.075"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:18.075" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-25.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:18.075" endtime="20230604 03:15:18.169"/>
</kw>
<status status="PASS" starttime="20230604 03:15:17.138" endtime="20230604 03:15:18.169"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:18.169" level="INFO">${optnamel} = responsetime</msg>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:18.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:18.169" level="INFO">${img} = reporter_windows_option_responsetime.png</msg>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:18.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:18.169" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:18.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:18.169" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:18.169"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:18.278" level="INFO">Image "reporter_windows_option_responsetime.png" found at (520, 405)</msg>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:18.278"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:18.388" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_responsetime.png" found at Box(left=463, top=396, width=114, height=18)</msg>
<msg timestamp="20230604 03:15:18.388" level="INFO">@{coordinates} = [ 520 | 405 ]</msg>
<status status="PASS" starttime="20230604 03:15:18.278" endtime="20230604 03:15:18.388"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:18.482" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_responsetime.png" found at Box(left=463, top=396, width=114, height=18)</msg>
<msg timestamp="20230604 03:15:18.482" level="INFO">Clicking image "reporter_windows_option_responsetime.png" in position (520, 405)</msg>
<status status="PASS" starttime="20230604 03:15:18.388" endtime="20230604 03:15:18.622"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:19.123" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:18.622" endtime="20230604 03:15:19.123"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:19.123" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-26.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:19.123" endtime="20230604 03:15:19.232"/>
</kw>
<status status="PASS" starttime="20230604 03:15:18.169" endtime="20230604 03:15:19.232"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:19.232" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:19.232" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:19.232" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:19.232" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.232"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:19.342" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (213, 587)</msg>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.342"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:19.842" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:19.342" endtime="20230604 03:15:19.842"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:19.842" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-27.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-27.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:19.842" endtime="20230604 03:15:19.920"/>
</kw>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.920"/>
</kw>
<status status="PASS" starttime="20230604 03:15:19.232" endtime="20230604 03:15:19.920"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:15:19.920" level="INFO">${bttnnamel} = generatehtml</msg>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:19.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:19.920" level="INFO">${img} = reporter_windows_button_generatehtml.png</msg>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:19.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:19.920" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:19.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:19.920" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:19.920"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:15:20.014" level="INFO">Image "reporter_windows_button_generatehtml.png" found at (889, 222)</msg>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:20.014"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:15:20.123" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_generatehtml.png" found at Box(left=877, top=207, width=24, height=30)</msg>
<msg timestamp="20230604 03:15:20.123" level="INFO">@{coordinates} = [ 889 | 222 ]</msg>
<status status="PASS" starttime="20230604 03:15:20.014" endtime="20230604 03:15:20.123"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:20.232" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_generatehtml.png" found at Box(left=877, top=207, width=24, height=30)</msg>
<msg timestamp="20230604 03:15:20.232" level="INFO">Clicking image "reporter_windows_button_generatehtml.png" in position (889, 222)</msg>
<status status="PASS" starttime="20230604 03:15:20.123" endtime="20230604 03:15:20.357"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:20.858" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:20.357" endtime="20230604 03:15:20.858"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:20.858" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-28.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-28.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:20.858" endtime="20230604 03:15:20.936"/>
</kw>
<status status="PASS" starttime="20230604 03:15:19.920" endtime="20230604 03:15:20.936"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:21.045" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:20.936" endtime="20230604 03:15:21.045"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:21.045" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-29.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-29.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:21.045" endtime="20230604 03:15:21.124"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:31.126" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230604 03:15:21.124" endtime="20230604 03:15:31.126"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:31.126" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-30.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-30.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:31.126" endtime="20230604 03:15:31.219"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:31.219" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:31.219"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:15:31.219" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:31.219"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:15:31.329" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=919, top=156, width=45, height=30)</msg>
<msg timestamp="20230604 03:15:31.329" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (941, 171)</msg>
<status status="PASS" starttime="20230604 03:15:31.235" endtime="20230604 03:15:31.438"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:15:31.438" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-31.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.10\Reporter.GUIBasic-screenshot-31.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:15:31.438" endtime="20230604 03:15:31.516"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:31.516" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:15:32.016" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:15:32.016" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO"/>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</branch>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</if>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<status status="PASS" starttime="20230604 03:15:31.235" endtime="20230604 03:15:32.016"/>
</kw>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.016"/>
</kw>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.016"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</branch>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.016"/>
</if>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.016"/>
</branch>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.016"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:15:32.016" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.016"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:32.517" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:32.016" endtime="20230604 03:15:32.517"/>
</kw>
<status status="PASS" starttime="20230604 03:15:31.219" endtime="20230604 03:15:32.517"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:14:53.339" endtime="20230604 03:15:32.517"/>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="100">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230604 03:15:32.517" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:15:32.517" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</branch>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</if>
<status status="NOT RUN" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</branch>
<status status="PASS" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:15:32.517" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:15:32.517" endtime="20230604 03:15:32.517"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:15:33.018" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:15:32.517" endtime="20230604 03:15:33.018"/>
</kw>
<status status="PASS" starttime="20230604 03:15:32.517" endtime="20230604 03:15:33.018"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230604 03:15:32.517" endtime="20230604 03:15:33.018">AssertionError</status>
</test>
<status status="FAIL" starttime="20230604 03:14:13.426" endtime="20230604 03:15:33.018"/>
</suite>
<status status="FAIL" starttime="20230604 03:13:41.626" endtime="20230604 03:15:33.018"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="1" fail="0" skip="0">Issue #149</stat>
<stat pass="9" fail="1" skip="0">macos-latest</stat>
<stat pass="9" fail="1" skip="0">ubuntu-latest</stat>
<stat pass="9" fail="1" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="9" fail="1" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="4" fail="1" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
