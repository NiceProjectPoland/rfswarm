<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.16 on darwin)" generated="20230530 05:56:17.335" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 05:56:17.393" endtime="20230530 05:56:17.393"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230530 05:56:17.394" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.394" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230530 05:56:17.393" endtime="20230530 05:56:17.394"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230530 05:56:17.395" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.395" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.395" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.396" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.396" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-21.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.396" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-20.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.396" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.396" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.397" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.397" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.397" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.397" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.398" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.398" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.398" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.398" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.398" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.399" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.399" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.399" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230530 05:56:17.399" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230530 05:56:17.394" endtime="20230530 05:56:17.399"/>
</kw>
<status status="PASS" starttime="20230530 05:56:17.392" endtime="20230530 05:56:17.400"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 05:56:17.405" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 05:56:30.100" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230530 05:56:17.400" endtime="20230530 05:56:30.100"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 05:56:30.101" endtime="20230530 05:56:30.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:30.102" endtime="20230530 05:56:30.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:30.102" endtime="20230530 05:56:30.102"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:56:17.400" endtime="20230530 05:56:30.103"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 05:56:30.107" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 05:56:31.221" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

optional ar...</msg>
<status status="PASS" starttime="20230530 05:56:30.104" endtime="20230530 05:56:31.221"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 05:56:31.221" endtime="20230530 05:56:31.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:31.222" endtime="20230530 05:56:31.222"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:56:30.103" endtime="20230530 05:56:31.223"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:31.224" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:31.224" endtime="20230530 05:56:31.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:31.224" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:31.224" endtime="20230530 05:56:31.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:31.225" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:31.224" endtime="20230530 05:56:31.225"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:31.225" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:31.225" endtime="20230530 05:56:31.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:31.226" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:31.225" endtime="20230530 05:56:31.226"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:31.226" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:31.226" endtime="20230530 05:56:31.226"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:31.227" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:31.226" endtime="20230530 05:56:31.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:31.227" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:31.227" endtime="20230530 05:56:31.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:31.228" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:31.227" endtime="20230530 05:56:31.228"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:31.229" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:31.228" endtime="20230530 05:56:31.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:31.229" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:31.229" endtime="20230530 05:56:31.229"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 05:56:31.235" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 05:56:37.518" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 05:56:31.229" endtime="20230530 05:56:37.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:37.520" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230530 05:56:37.519" endtime="20230530 05:56:37.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:37.520" endtime="20230530 05:56:37.520"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:37.521" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:37.520" endtime="20230530 05:56:37.521"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:56:31.223" endtime="20230530 05:56:37.521"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:37.522" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:37.522" endtime="20230530 05:56:37.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:37.523" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:37.522" endtime="20230530 05:56:37.523"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:37.523" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:37.523" endtime="20230530 05:56:37.523"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:37.524" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:37.523" endtime="20230530 05:56:37.524"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 05:56:37.524" endtime="20230530 05:56:37.524"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:37.525" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:37.524" endtime="20230530 05:56:37.525"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:37.525" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:37.525" endtime="20230530 05:56:37.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:37.526" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:37.525" endtime="20230530 05:56:37.526"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:37.526" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:37.526" endtime="20230530 05:56:37.526"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:37.527" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:37.526" endtime="20230530 05:56:37.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:37.527" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:37.527" endtime="20230530 05:56:37.527"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 05:56:37.533" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 05:56:44.647" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 05:56:37.527" endtime="20230530 05:56:44.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:44.648" level="INFO">
</msg>
<status status="PASS" starttime="20230530 05:56:44.647" endtime="20230530 05:56:44.648"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:44.648" endtime="20230530 05:56:44.648"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:44.649" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:44.648" endtime="20230530 05:56:44.649"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:56:37.521" endtime="20230530 05:56:44.649"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:44.651" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:44.650" endtime="20230530 05:56:44.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:44.651" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:44.651" endtime="20230530 05:56:44.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:44.651" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:44.651" endtime="20230530 05:56:44.651"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:44.652" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:44.652" endtime="20230530 05:56:44.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:44.652" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230530 05:56:44.652" endtime="20230530 05:56:44.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:44.653" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:44.653" endtime="20230530 05:56:44.653"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:44.653" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:44.653" endtime="20230530 05:56:44.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:44.654" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:56:44.653" endtime="20230530 05:56:44.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:56:44.654" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:44.654" endtime="20230530 05:56:44.654"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:44.655" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:44.654" endtime="20230530 05:56:44.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:44.655" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230530 05:56:44.655" endtime="20230530 05:56:44.655"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230530 05:56:44.658" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230530 05:56:50.992" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230530 05:56:44.655" endtime="20230530 05:56:50.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:56:50.994" level="INFO">
</msg>
<status status="PASS" starttime="20230530 05:56:50.993" endtime="20230530 05:56:50.994"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:56:50.994" endtime="20230530 05:56:50.994"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:56:50.995" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:56:50.994" endtime="20230530 05:56:50.995"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230530 05:56:44.650" endtime="20230530 05:56:50.995"/>
</test>
<status status="PASS" starttime="20230530 05:56:17.374" endtime="20230530 05:56:50.996"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 05:57:00.045" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 05:57:00.044" endtime="20230530 05:57:00.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:00.046" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103d4b970&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 05:57:00.045" endtime="20230530 05:57:00.046"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 05:57:00.047" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 05:57:00.046" endtime="20230530 05:57:00.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 05:57:00.047" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 05:57:00.047" endtime="20230530 05:57:00.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:00.049" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:00.048" endtime="20230530 05:57:00.049"/>
</kw>
<status status="PASS" starttime="20230530 05:57:00.046" endtime="20230530 05:57:00.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:00.050" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:00.049" endtime="20230530 05:57:00.050"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:00.056" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:00.055" endtime="20230530 05:57:00.056"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 05:57:00.056" endtime="20230530 05:57:00.056"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 05:57:00.057" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 05:57:00.056" endtime="20230530 05:57:00.064"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 05:57:00.065" endtime="20230530 05:57:00.066"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:00.066" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:00.066" endtime="20230530 05:57:00.393"/>
</kw>
<status status="PASS" starttime="20230530 05:57:00.055" endtime="20230530 05:57:00.394"/>
</kw>
<status status="PASS" starttime="20230530 05:57:00.050" endtime="20230530 05:57:00.394"/>
</kw>
<status status="PASS" starttime="20230530 05:57:00.043" endtime="20230530 05:57:00.394"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:00.395" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 05:57:00.395" endtime="20230530 05:57:00.395"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:00.396" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 05:57:00.396" endtime="20230530 05:57:00.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:00.396" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:00.396" endtime="20230530 05:57:00.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:00.397" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:00.397" endtime="20230530 05:57:00.397"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:03.410" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:00.397" endtime="20230530 05:57:03.411"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:03.828" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:03.829" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 05:57:03.411" endtime="20230530 05:57:03.829"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:04.277" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:04.278" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:03.829" endtime="20230530 05:57:04.468"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:04.576" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:04.469" endtime="20230530 05:57:04.576"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:04.577" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:04.577" endtime="20230530 05:57:04.848"/>
</kw>
<status status="PASS" starttime="20230530 05:57:00.394" endtime="20230530 05:57:04.849"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:04.851" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:04.850" endtime="20230530 05:57:04.851"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:04.851" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 05:57:04.851" endtime="20230530 05:57:04.851"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:05.246" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 05:57:05.246" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 05:57:04.858" endtime="20230530 05:57:05.372"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:05.387" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:05.373" endtime="20230530 05:57:05.847"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:06.377" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:05.848" endtime="20230530 05:57:06.378"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 05:57:06.381" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 05:57:06.382" level="INFO">Process completed.</msg>
<msg timestamp="20230530 05:57:06.382" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 05:57:06.380" endtime="20230530 05:57:06.382"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:06.382" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 05:57:06.382" endtime="20230530 05:57:06.382"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:06.384" level="INFO"/>
<status status="PASS" starttime="20230530 05:57:06.383" endtime="20230530 05:57:06.384"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:57:06.384" endtime="20230530 05:57:06.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 05:57:06.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 05:57:06.385" endtime="20230530 05:57:06.386"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.383" endtime="20230530 05:57:06.386"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.382" endtime="20230530 05:57:06.386"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 05:57:06.387" endtime="20230530 05:57:06.387"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 05:57:06.387" endtime="20230530 05:57:06.387"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:06.387" endtime="20230530 05:57:06.387"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 05:57:06.387" endtime="20230530 05:57:06.387"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:06.386" endtime="20230530 05:57:06.387"/>
</branch>
<status status="PASS" starttime="20230530 05:57:06.382" endtime="20230530 05:57:06.387"/>
</if>
<status status="PASS" starttime="20230530 05:57:06.379" endtime="20230530 05:57:06.387"/>
</kw>
<status status="PASS" starttime="20230530 05:57:04.858" endtime="20230530 05:57:06.388"/>
</kw>
<status status="PASS" starttime="20230530 05:57:04.852" endtime="20230530 05:57:06.388"/>
</kw>
<status status="PASS" starttime="20230530 05:57:04.852" endtime="20230530 05:57:06.388"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 05:57:06.388" endtime="20230530 05:57:06.388"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:06.388" endtime="20230530 05:57:06.388"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:06.388" endtime="20230530 05:57:06.388"/>
</branch>
<status status="PASS" starttime="20230530 05:57:04.851" endtime="20230530 05:57:06.388"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:06.919" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:06.388" endtime="20230530 05:57:06.919"/>
</kw>
<status status="PASS" starttime="20230530 05:57:04.849" endtime="20230530 05:57:06.919"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:57:00.042" endtime="20230530 05:57:06.920"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 05:57:06.922" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 05:57:06.921" endtime="20230530 05:57:06.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:06.922" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103d4b970&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 05:57:06.922" endtime="20230530 05:57:06.922"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 05:57:06.923" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 05:57:06.923" endtime="20230530 05:57:06.923"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 05:57:06.924" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 05:57:06.924" endtime="20230530 05:57:06.924"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:06.924" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:06.924" endtime="20230530 05:57:06.925"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.923" endtime="20230530 05:57:06.925"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:06.925" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:06.925" endtime="20230530 05:57:06.925"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:06.933" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:06.932" endtime="20230530 05:57:06.933"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 05:57:06.933" endtime="20230530 05:57:06.933"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 05:57:06.934" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 05:57:06.933" endtime="20230530 05:57:06.941"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 05:57:06.941" endtime="20230530 05:57:06.942"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:06.943" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:06.942" endtime="20230530 05:57:07.217"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.932" endtime="20230530 05:57:07.217"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.925" endtime="20230530 05:57:07.217"/>
</kw>
<status status="PASS" starttime="20230530 05:57:06.921" endtime="20230530 05:57:07.218"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:07.219" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 05:57:07.219" endtime="20230530 05:57:07.219"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:07.220" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 05:57:07.219" endtime="20230530 05:57:07.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:07.220" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:07.220" endtime="20230530 05:57:07.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:07.221" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:07.220" endtime="20230530 05:57:07.221"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:09.483" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:07.221" endtime="20230530 05:57:09.484"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:09.880" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:09.881" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 05:57:09.484" endtime="20230530 05:57:09.881"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:10.280" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:10.281" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:09.882" endtime="20230530 05:57:10.429"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:10.533" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:10.430" endtime="20230530 05:57:10.533"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:10.534" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:10.533" endtime="20230530 05:57:10.803"/>
</kw>
<status status="PASS" starttime="20230530 05:57:07.218" endtime="20230530 05:57:10.804"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:10.805" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230530 05:57:10.805" endtime="20230530 05:57:10.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:10.806" level="INFO">${img} = reporter_macos_tab_preview.png</msg>
<status status="PASS" starttime="20230530 05:57:10.806" endtime="20230530 05:57:10.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:10.806" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:10.806" endtime="20230530 05:57:10.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:10.807" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:10.806" endtime="20230530 05:57:10.807"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:11.195" level="INFO">Image "reporter_macos_tab_preview.png" found at (482, 103)</msg>
<status status="PASS" starttime="20230530 05:57:10.807" endtime="20230530 05:57:11.196"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:11.587" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230530 05:57:11.588" level="INFO">@{coordinates} = [ 482 | 103 ]</msg>
<status status="PASS" starttime="20230530 05:57:11.196" endtime="20230530 05:57:11.588"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:11.984" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_tab_preview.png" found at Box(left=443, top=89, width=78, height=29)</msg>
<msg timestamp="20230530 05:57:11.984" level="INFO">Clicking image "reporter_macos_tab_preview.png" in position (482, 103)</msg>
<status status="PASS" starttime="20230530 05:57:11.589" endtime="20230530 05:57:12.114"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:12.224" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:12.114" endtime="20230530 05:57:12.224"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:12.225" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:12.224" endtime="20230530 05:57:12.483"/>
</kw>
<status status="PASS" starttime="20230530 05:57:10.804" endtime="20230530 05:57:12.484"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:12.486" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:12.485" endtime="20230530 05:57:12.486"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:12.486" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 05:57:12.486" endtime="20230530 05:57:12.486"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:12.878" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 05:57:12.879" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 05:57:12.493" endtime="20230530 05:57:12.999"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:13.000" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:12.999" endtime="20230530 05:57:13.276"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:13.790" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:13.277" endtime="20230530 05:57:13.791"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 05:57:13.792" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 05:57:13.792" level="INFO">Process completed.</msg>
<msg timestamp="20230530 05:57:13.793" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 05:57:13.792" endtime="20230530 05:57:13.793"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:13.793" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 05:57:13.793" endtime="20230530 05:57:13.793"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:13.795" level="INFO"/>
<status status="PASS" starttime="20230530 05:57:13.794" endtime="20230530 05:57:13.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:57:13.795" endtime="20230530 05:57:13.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 05:57:13.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 05:57:13.796" endtime="20230530 05:57:13.797"/>
</kw>
<status status="PASS" starttime="20230530 05:57:13.794" endtime="20230530 05:57:13.797"/>
</kw>
<status status="PASS" starttime="20230530 05:57:13.793" endtime="20230530 05:57:13.797"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 05:57:13.797" endtime="20230530 05:57:13.797"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 05:57:13.797" endtime="20230530 05:57:13.797"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:13.798" endtime="20230530 05:57:13.798"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 05:57:13.798" endtime="20230530 05:57:13.798"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:13.797" endtime="20230530 05:57:13.798"/>
</branch>
<status status="PASS" starttime="20230530 05:57:13.793" endtime="20230530 05:57:13.798"/>
</if>
<status status="PASS" starttime="20230530 05:57:13.791" endtime="20230530 05:57:13.798"/>
</kw>
<status status="PASS" starttime="20230530 05:57:12.493" endtime="20230530 05:57:13.798"/>
</kw>
<status status="PASS" starttime="20230530 05:57:12.487" endtime="20230530 05:57:13.798"/>
</kw>
<status status="PASS" starttime="20230530 05:57:12.487" endtime="20230530 05:57:13.798"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 05:57:13.798" endtime="20230530 05:57:13.799"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:13.799" endtime="20230530 05:57:13.799"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:13.798" endtime="20230530 05:57:13.799"/>
</branch>
<status status="PASS" starttime="20230530 05:57:12.486" endtime="20230530 05:57:13.799"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:14.334" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:13.799" endtime="20230530 05:57:14.334"/>
</kw>
<status status="PASS" starttime="20230530 05:57:12.485" endtime="20230530 05:57:14.334"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:57:06.920" endtime="20230530 05:57:14.334"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.336" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230530 05:57:14.335" endtime="20230530 05:57:14.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.336" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:57:14.336" endtime="20230530 05:57:14.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.337" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230530 05:57:14.336" endtime="20230530 05:57:14.337"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:57:14.337" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:57:14.337" endtime="20230530 05:57:14.337"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230530 05:57:14.337" endtime="20230530 05:57:14.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.338" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:57:14.338" endtime="20230530 05:57:14.338"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230530 05:57:14.339" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230530 05:57:14.338" endtime="20230530 05:57:14.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:14.339" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:57:14.339" endtime="20230530 05:57:14.339"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230530 05:57:14.340" level="INFO">${epoch} = 1685426234</msg>
<status status="PASS" starttime="20230530 05:57:14.339" endtime="20230530 05:57:14.340"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 05:57:14.341" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 05:57:14.340" endtime="20230530 05:57:14.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:14.342" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103d4b970&gt;, '@{appargs}': ['-i', 'blank_1685426234.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 05:57:14.341" endtime="20230530 05:57:14.342"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 05:57:14.343" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 05:57:14.342" endtime="20230530 05:57:14.343"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 05:57:14.343" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 05:57:14.343" endtime="20230530 05:57:14.343"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:14.344" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:14.343" endtime="20230530 05:57:14.344"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.342" endtime="20230530 05:57:14.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.344" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:14.344" endtime="20230530 05:57:14.344"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:14.351" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:14.350" endtime="20230530 05:57:14.351"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 05:57:14.351" endtime="20230530 05:57:14.351"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 05:57:14.353" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1685426234.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230530 05:57:14.351" endtime="20230530 05:57:14.359"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 05:57:14.360" endtime="20230530 05:57:14.361"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:14.361" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:14.361" endtime="20230530 05:57:14.641"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.350" endtime="20230530 05:57:14.642"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.345" endtime="20230530 05:57:14.642"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.340" endtime="20230530 05:57:14.642"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:14.644" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 05:57:14.644" endtime="20230530 05:57:14.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:14.645" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 05:57:14.644" endtime="20230530 05:57:14.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:14.645" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:14.645" endtime="20230530 05:57:14.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:14.646" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:14.645" endtime="20230530 05:57:14.646"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:17.220" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:14.646" endtime="20230530 05:57:17.221"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:17.631" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:17.632" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 05:57:17.222" endtime="20230530 05:57:17.632"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:18.033" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:18.033" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:17.633" endtime="20230530 05:57:18.149"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:18.272" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:18.149" endtime="20230530 05:57:18.272"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:18.273" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:18.273" endtime="20230530 05:57:18.541"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.643" endtime="20230530 05:57:18.542"/>
</kw>
<status status="PASS" starttime="20230530 05:57:14.643" endtime="20230530 05:57:18.542"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:18.543" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:18.543" endtime="20230530 05:57:18.543"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:18.544" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230530 05:57:18.543" endtime="20230530 05:57:18.544"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:18.928" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg timestamp="20230530 05:57:18.929" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<status status="PASS" starttime="20230530 05:57:18.550" endtime="20230530 05:57:19.049"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:19.058" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:19.049" endtime="20230530 05:57:19.542"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:20.064" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:19.545" endtime="20230530 05:57:20.064"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230530 05:57:20.065" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230530 05:57:20.065" level="INFO">Process completed.</msg>
<msg timestamp="20230530 05:57:20.065" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230530 05:57:20.065" endtime="20230530 05:57:20.065"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230530 05:57:20.066" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230530 05:57:20.066" endtime="20230530 05:57:20.066"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:20.068" level="INFO"/>
<status status="PASS" starttime="20230530 05:57:20.067" endtime="20230530 05:57:20.068"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230530 05:57:20.069" endtime="20230530 05:57:20.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230530 05:57:20.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 05:57:20.069" endtime="20230530 05:57:20.070"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.067" endtime="20230530 05:57:20.070"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.066" endtime="20230530 05:57:20.070"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 05:57:20.071" endtime="20230530 05:57:20.071"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230530 05:57:20.071" endtime="20230530 05:57:20.071"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:20.071" endtime="20230530 05:57:20.071"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230530 05:57:20.071" endtime="20230530 05:57:20.071"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:20.070" endtime="20230530 05:57:20.071"/>
</branch>
<status status="PASS" starttime="20230530 05:57:20.066" endtime="20230530 05:57:20.071"/>
</if>
<status status="PASS" starttime="20230530 05:57:20.064" endtime="20230530 05:57:20.071"/>
</kw>
<status status="PASS" starttime="20230530 05:57:18.550" endtime="20230530 05:57:20.072"/>
</kw>
<status status="PASS" starttime="20230530 05:57:18.544" endtime="20230530 05:57:20.072"/>
</kw>
<status status="PASS" starttime="20230530 05:57:18.544" endtime="20230530 05:57:20.072"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230530 05:57:20.072" endtime="20230530 05:57:20.072"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230530 05:57:20.072" endtime="20230530 05:57:20.072"/>
</kw>
<status status="NOT RUN" starttime="20230530 05:57:20.072" endtime="20230530 05:57:20.072"/>
</branch>
<status status="PASS" starttime="20230530 05:57:18.544" endtime="20230530 05:57:20.072"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:20.579" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:20.072" endtime="20230530 05:57:20.579"/>
</kw>
<status status="PASS" starttime="20230530 05:57:18.542" endtime="20230530 05:57:20.579"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230530 05:57:14.335" endtime="20230530 05:57:20.579"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230530 05:57:20.582" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230530 05:57:20.581" endtime="20230530 05:57:20.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:20.582" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x103d4b970&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230530 05:57:20.582" endtime="20230530 05:57:20.583"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 05:57:20.584" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230530 05:57:20.583" endtime="20230530 05:57:20.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230530 05:57:20.584" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230530 05:57:20.584" endtime="20230530 05:57:20.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:20.585" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:20.584" endtime="20230530 05:57:20.585"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.583" endtime="20230530 05:57:20.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:20.585" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230530 05:57:20.585" endtime="20230530 05:57:20.585"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 05:57:20.591" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230530 05:57:20.591" endtime="20230530 05:57:20.591"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230530 05:57:20.591" endtime="20230530 05:57:20.592"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230530 05:57:20.593" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<status status="PASS" starttime="20230530 05:57:20.592" endtime="20230530 05:57:20.599"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230530 05:57:20.600" endtime="20230530 05:57:20.601"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:20.601" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:20.601" endtime="20230530 05:57:20.876"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.590" endtime="20230530 05:57:20.876"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.585" endtime="20230530 05:57:20.876"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.581" endtime="20230530 05:57:20.877"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:20.878" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230530 05:57:20.878" endtime="20230530 05:57:20.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:20.879" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230530 05:57:20.878" endtime="20230530 05:57:20.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:20.879" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:20.879" endtime="20230530 05:57:20.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:20.880" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:20.879" endtime="20230530 05:57:20.880"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:23.116" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:20.880" endtime="20230530 05:57:23.116"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:23.533" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:23.533" level="INFO">@{coordinates} = [ 55 | 440 ]</msg>
<status status="PASS" starttime="20230530 05:57:23.117" endtime="20230530 05:57:23.534"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:23.922" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" found at Box(left=4, top=431, width=103, height=18)</msg>
<msg timestamp="20230530 05:57:23.923" level="INFO">Clicking image "reporter_macos_status_previewloaded.png" in position (55, 440)</msg>
<status status="PASS" starttime="20230530 05:57:23.534" endtime="20230530 05:57:24.042"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:24.159" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:24.042" endtime="20230530 05:57:24.159"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:24.159" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:24.159" endtime="20230530 05:57:24.425"/>
</kw>
<status status="PASS" starttime="20230530 05:57:20.877" endtime="20230530 05:57:24.425"/>
</kw>
<kw name="Click Section">
<arg>toc</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:24.427" level="INFO">${sectnamel} = toc</msg>
<status status="PASS" starttime="20230530 05:57:24.427" endtime="20230530 05:57:24.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:24.427" level="INFO">${img} = reporter_macos_section_toc.png</msg>
<status status="PASS" starttime="20230530 05:57:24.427" endtime="20230530 05:57:24.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:24.428" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:24.428" endtime="20230530 05:57:24.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:24.428" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:24.428" endtime="20230530 05:57:24.428"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:24.813" level="INFO">Image "reporter_macos_section_toc.png" found at (52, 161)</msg>
<status status="PASS" starttime="20230530 05:57:24.428" endtime="20230530 05:57:24.814"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:25.197" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_toc.png" found at Box(left=39, top=154, width=26, height=14)</msg>
<msg timestamp="20230530 05:57:25.198" level="INFO">@{coordinates} = [ 52 | 161 ]</msg>
<status status="PASS" starttime="20230530 05:57:24.814" endtime="20230530 05:57:25.198"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:25.580" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_toc.png" found at Box(left=39, top=154, width=26, height=14)</msg>
<msg timestamp="20230530 05:57:25.580" level="INFO">Clicking image "reporter_macos_section_toc.png" in position (52, 161)</msg>
<status status="PASS" starttime="20230530 05:57:25.199" endtime="20230530 05:57:25.766"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:25.869" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:25.767" endtime="20230530 05:57:25.869"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:25.870" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:25.870" endtime="20230530 05:57:26.135"/>
</kw>
<status status="PASS" starttime="20230530 05:57:24.426" endtime="20230530 05:57:26.135"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:26.137" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230530 05:57:26.137" endtime="20230530 05:57:26.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:26.137" level="INFO">${img} = reporter_macos_section_report.png</msg>
<status status="PASS" starttime="20230530 05:57:26.137" endtime="20230530 05:57:26.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:26.138" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:26.138" endtime="20230530 05:57:26.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:26.138" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:26.138" endtime="20230530 05:57:26.138"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:26.533" level="INFO">Image "reporter_macos_section_report.png" found at (42, 142)</msg>
<status status="PASS" starttime="20230530 05:57:26.138" endtime="20230530 05:57:26.534"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:26.939" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230530 05:57:26.940" level="INFO">@{coordinates} = [ 42 | 142 ]</msg>
<status status="PASS" starttime="20230530 05:57:26.534" endtime="20230530 05:57:26.940"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:27.341" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_report.png" found at Box(left=19, top=116, width=46, height=52)</msg>
<msg timestamp="20230530 05:57:27.342" level="INFO">Clicking image "reporter_macos_section_report.png" in position (42, 142)</msg>
<status status="PASS" starttime="20230530 05:57:26.940" endtime="20230530 05:57:27.490"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:27.599" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:27.490" endtime="20230530 05:57:27.599"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:27.600" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:27.599" endtime="20230530 05:57:27.874"/>
</kw>
<status status="PASS" starttime="20230530 05:57:26.136" endtime="20230530 05:57:27.874"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:27.876" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:27.875" endtime="20230530 05:57:28.174"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:28.176" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230530 05:57:28.176" endtime="20230530 05:57:28.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:28.177" level="INFO">${img} = reporter_macos_button_addsection.png</msg>
<status status="PASS" starttime="20230530 05:57:28.176" endtime="20230530 05:57:28.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:28.177" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:28.177" endtime="20230530 05:57:28.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:28.178" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:28.177" endtime="20230530 05:57:28.178"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:28.579" level="INFO">Image "reporter_macos_button_addsection.png" found at (36, 109)</msg>
<status status="PASS" starttime="20230530 05:57:28.178" endtime="20230530 05:57:28.580"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:28.981" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230530 05:57:28.982" level="INFO">@{coordinates} = [ 36 | 109 ]</msg>
<status status="PASS" starttime="20230530 05:57:28.580" endtime="20230530 05:57:28.982"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:29.371" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_addsection.png" found at Box(left=11, top=95, width=50, height=29)</msg>
<msg timestamp="20230530 05:57:29.372" level="INFO">Clicking image "reporter_macos_button_addsection.png" in position (36, 109)</msg>
<status status="PASS" starttime="20230530 05:57:28.983" endtime="20230530 05:57:29.489"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:29.590" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:29.489" endtime="20230530 05:57:29.590"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:29.591" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:29.591" endtime="20230530 05:57:29.870"/>
</kw>
<status status="PASS" starttime="20230530 05:57:28.175" endtime="20230530 05:57:29.870"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230530 05:57:30.267" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_label_sectionname.png" found at Box(left=76, top=96, width=92, height=23)</msg>
<msg timestamp="20230530 05:57:30.268" level="INFO">Clicking 1 time(s) at (122, 127) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230530 05:57:29.871" endtime="20230530 05:57:30.395"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230530 05:57:30.396" endtime="20230530 05:57:31.041"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:31.043" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230530 05:57:31.042" endtime="20230530 05:57:31.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:31.043" level="INFO">${img} = reporter_macos_button_ok.png</msg>
<status status="PASS" starttime="20230530 05:57:31.043" endtime="20230530 05:57:31.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:31.044" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:31.043" endtime="20230530 05:57:31.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:31.044" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:31.044" endtime="20230530 05:57:31.044"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230530 05:57:31.426" level="INFO">Image "reporter_macos_button_ok.png" found at (102, 168)</msg>
<status status="PASS" starttime="20230530 05:57:31.044" endtime="20230530 05:57:31.426"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230530 05:57:31.846" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=88, top=157, width=28, height=22)</msg>
<msg timestamp="20230530 05:57:31.847" level="INFO">@{coordinates} = [ 102 | 168 ]</msg>
<status status="PASS" starttime="20230530 05:57:31.427" endtime="20230530 05:57:31.847"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230530 05:57:32.238" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_ok.png" found at Box(left=88, top=157, width=28, height=22)</msg>
<msg timestamp="20230530 05:57:32.238" level="INFO">Clicking image "reporter_macos_button_ok.png" in position (102, 168)</msg>
<status status="PASS" starttime="20230530 05:57:31.848" endtime="20230530 05:57:32.384"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230530 05:57:32.488" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230530 05:57:32.385" endtime="20230530 05:57:32.488"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:32.489" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:32.488" endtime="20230530 05:57:32.744"/>
</kw>
<status status="PASS" starttime="20230530 05:57:31.042" endtime="20230530 05:57:32.744"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 05:57:32.746" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 05:57:32.745" endtime="20230530 05:57:33.018"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230530 05:57:33.019" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230530 05:57:33.019" endtime="20230530 05:57:33.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 05:57:33.020" level="INFO">${img} = reporter_macos_section_issue#149.png</msg>
<status status="PASS" starttime="20230530 05:57:33.020" endtime="20230530 05:57:33.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:33.020" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230530 05:57:33.020" endtime="20230530 05:57:33.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230530 05:57:33.021" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230530 05:57:33.021" endtime="20230530 05:57:33.021"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230530 06:02:33.204" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.9/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230530 06:02:33.203" endtime="20230530 06:02:33.469"/>
</kw>
<msg timestamp="20230530 06:02:33.470" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" was not found on screen</msg>
<status status="FAIL" starttime="20230530 05:57:33.021" endtime="20230530 06:02:33.470"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230530 06:02:33.471" endtime="20230530 06:02:33.471"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230530 06:02:33.471" endtime="20230530 06:02:33.471"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230530 06:02:33.471" endtime="20230530 06:02:33.471"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 06:02:33.472" endtime="20230530 06:02:33.472"/>
</kw>
<status status="FAIL" starttime="20230530 05:57:33.018" endtime="20230530 06:02:33.472"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<status status="NOT RUN" starttime="20230530 06:02:33.472" endtime="20230530 06:02:33.472"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230530 06:02:33.472" endtime="20230530 06:02:33.473"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230530 06:02:33.473" endtime="20230530 06:02:33.473"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230530 05:57:20.580" endtime="20230530 06:02:33.473">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_section_issue#149.png" was not found on screen</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="72">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230530 06:02:33.475" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230530 06:02:33.474" endtime="20230530 06:02:33.475"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230530 06:02:33.474" endtime="20230530 06:02:33.475">AssertionError</status>
</test>
<status status="FAIL" starttime="20230530 05:56:50.997" endtime="20230530 06:02:33.476"/>
</suite>
<status status="FAIL" starttime="20230530 05:56:17.338" endtime="20230530 06:02:33.478"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
