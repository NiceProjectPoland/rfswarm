<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.2 on darwin)" generated="2024-03-14T01:48:35.492384" rpa="false" schemaversion="5">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:35.523487" elapsed="0.000254"/>
</kw>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-03-14T01:48:35.524378" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/stdout.txt&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.524470" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/stderr.txt&lt;/a&gt;'.</msg>
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-03-14T01:48:35.523866" elapsed="0.000663"/>
</kw>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-03-14T01:48:35.525148" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.525320" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.525514" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.525678" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.525842" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-21.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526004" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-20.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526164" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-22.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526324" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-23.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526496" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526668" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.526821" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527007" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527160" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527322" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527496" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527672" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527842" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.527997" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.528147" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.528331" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.528497" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.528655" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T01:48:35.528819" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-03-14T01:48:35.524628" elapsed="0.004240"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:35.522943" elapsed="0.005987"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="17">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T01:48:35.531389" level="INFO">Running command 'rfswarm-reporter -v 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T01:48:37.728198" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version v1.3.0.dev20240314014631 </msg>
<var>${result}</var>
<arg>${cmd_reporter} -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T01:48:35.529323" elapsed="2.198922"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:37.728535" elapsed="0.000329"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:37.729014" elapsed="0.000132"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:37.729240" elapsed="0.000148"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:35.529002" elapsed="2.200557"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="25">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T01:48:37.732387" level="INFO">Running command 'rfswarm-reporter -h 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T01:48:38.483536" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version v1.3.0.dev20240314014631 
usage: rfswarm-reporter [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                        [-t TEMPLATE] [--html] [--docx] [--xlsx]...</msg>
<var>${result}</var>
<arg>${cmd_reporter} -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T01:48:37.730358" elapsed="0.753236"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:38.483885" elapsed="0.000326"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:38.484360" elapsed="0.000134"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:37.729947" elapsed="0.754686"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="32">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:38.485388" elapsed="0.000190"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.485829" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:38.485686" elapsed="0.000165"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.486050" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:38.485945" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.486342" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:38.486170" elapsed="0.000193"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:38.486629" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:38.486456" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.487001" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:38.486779" elapsed="0.000289"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.487348" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:38.487168" elapsed="0.000202"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:38.487591" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:38.487465" elapsed="0.000171"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.487885" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:38.487731" elapsed="0.000308"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.488309" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:38.488143" elapsed="0.000188"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:38.488545" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:38.488419" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:38.488807" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:38.488681" elapsed="0.000191"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T01:48:38.490939" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T01:48:43.565994" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T01:48:38.488976" elapsed="5.077062"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.566679" level="INFO">result: 
</msg>
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:43.566336" elapsed="0.000431"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:43.566933" elapsed="0.000136"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:43.567404" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:43.567188" elapsed="0.000265"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:38.484945" elapsed="5.082629"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="52">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:43.568346" elapsed="0.000194"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.568838" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:43.568710" elapsed="0.000163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.569058" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:43.568962" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.569335" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:43.569170" elapsed="0.000186"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:43.569561" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:43.569440" elapsed="0.000162"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:43.569687" elapsed="0.000174"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.570198" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:43.569981" elapsed="0.000237"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:43.570602" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:43.570301" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.570868" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:43.570739" elapsed="0.000194"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.571231" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:43.571059" elapsed="0.000193"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:43.571456" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:43.571338" elapsed="0.000223"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:43.571780" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:43.571652" elapsed="0.000192"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T01:48:43.574243" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T01:48:49.668393" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T01:48:43.571997" elapsed="6.096442"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.669148" level="INFO">
</msg>
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:49.668771" elapsed="0.000478"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:49.669371" elapsed="0.000129"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:49.669842" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:49.669610" elapsed="0.000288"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:43.567849" elapsed="6.102185"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="72">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T01:48:49.670758" elapsed="0.000199"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.671185" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:49.671062" elapsed="0.000144"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.671417" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:49.671310" elapsed="0.000128"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.671718" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:49.671531" elapsed="0.000208"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:49.671966" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:49.671826" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.672256" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:49.672109" elapsed="0.000214"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.672669" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:49.672470" elapsed="0.000223"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:49.672911" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:49.672785" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.673180" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:49.673047" elapsed="0.000201"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.673502" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:49.673348" elapsed="0.000176"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:49.673735" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:49.673609" elapsed="0.000171"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:49.674004" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:49.673870" elapsed="0.000203"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T01:48:49.676192" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T01:48:54.571912" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T01:48:49.674179" elapsed="4.897779"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:54.572568" level="INFO">
</msg>
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:54.572248" elapsed="0.000412"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:48:54.572785" elapsed="0.000135"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T01:48:54.573252" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T01:48:54.573013" elapsed="0.000290"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" start="2024-03-14T01:48:49.670312" elapsed="4.903114"/>
</test>
<status status="PASS" start="2024-03-14T01:48:35.512946" elapsed="19.061024"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="20">
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.105471" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T01:48:55.104503" elapsed="0.001008"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.105874" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:48:55.105642" elapsed="0.000296"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.106536" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T01:48:55.106298" elapsed="0.000263"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.106879" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T01:48:55.106677" elapsed="0.000224"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.107959" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:48:55.107029" elapsed="0.000970"/>
</kw>
<status status="PASS" start="2024-03-14T01:48:55.106065" elapsed="0.002000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.108307" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:48:55.108167" elapsed="0.000162"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.109208" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:48:55.109043" elapsed="0.000201"/>
</kw>
<kw name="Set Confidence" owner="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" start="2024-03-14T01:48:55.109340" elapsed="0.000098"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2024-03-14T01:48:55.110175" level="INFO">Starting process:
rfswarm-reporter -g 6</msg>
<msg time="2024-03-14T01:48:55.115014" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-03-14T01:48:55.109541" elapsed="0.005546"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:48:55.115768" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:48:55.115454" elapsed="0.000355"/>
</kw>
<kw name="Set Screenshot Folder" owner="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" start="2024-03-14T01:48:55.115984" elapsed="0.000143"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:48:55.116408" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T01:48:55.116234" elapsed="172.770659"/>
</kw>
<arg>@{appargs}</arg>
<status status="PASS" start="2024-03-14T01:48:55.108780" elapsed="172.778324"/>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T01:48:55.108436" elapsed="172.778754"/>
</kw>
<status status="PASS" start="2024-03-14T01:48:55.103850" elapsed="172.783432"/>
</kw>
<kw name="Wait For Status">
<kw name="Convert To Lower Case" owner="String">
<msg time="2024-03-14T01:51:47.888319" level="INFO">${statusl} = previewloaded</msg>
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<status status="PASS" start="2024-03-14T01:51:47.888130" elapsed="0.000216"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:47.888631" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:51:47.888464" elapsed="0.000188"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:47.888867" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:47.888765" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:47.889105" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:47.889003" elapsed="0.000155"/>
</kw>
<kw name="Wait For" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:51:48.716327" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<status status="PASS" start="2024-03-14T01:51:47.889265" elapsed="0.827360"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T01:51:49.249841" level="INFO">Slept 500 milliseconds.</msg>
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T01:51:48.716979" elapsed="0.532951"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:51:49.250331" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T01:51:49.250103" elapsed="0.388508"/>
</kw>
<arg>PreviewLoaded</arg>
<status status="PASS" start="2024-03-14T01:51:47.887653" elapsed="1.751336"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:49.640446" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:51:49.640220" elapsed="0.000277"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T01:51:49.641275" level="INFO">${running} = True</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T01:51:49.640835" elapsed="0.000464"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Close GUI macos">
<kw name="Click Image" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:51:50.307896" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg time="2024-03-14T01:51:50.308068" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="PASS" start="2024-03-14T01:51:49.642308" elapsed="0.915617"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:51:50.558715" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T01:51:50.558315" elapsed="0.339178"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.420214" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T01:51:50.897880" elapsed="0.522431"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" owner="Process">
<msg time="2024-03-14T01:51:51.421376" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-03-14T01:51:51.421599" level="INFO">Process completed.</msg>
<msg time="2024-03-14T01:51:51.421697" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-03-14T01:51:51.421131" elapsed="0.000595"/>
</kw>
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T01:51:51.422011" level="INFO">${running} = False</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T01:51:51.421844" elapsed="0.000188"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.423295" level="INFO"/>
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:51.422652" elapsed="0.000682"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T01:51:51.423453" elapsed="0.000465"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.424941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-14T01:51:51.424034" elapsed="0.000972"/>
</kw>
<arg>${result}</arg>
<status status="PASS" start="2024-03-14T01:51:51.422369" elapsed="0.002782"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:51.422129" elapsed="0.003057"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T01:51:51.425369" elapsed="0.000022"/>
</kw>
<kw name="Terminate Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" start="2024-03-14T01:51:51.425492" elapsed="0.000017"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T01:51:51.425738" elapsed="0.000020"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-03-14T01:51:51.425857" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2024-03-14T01:51:51.425234" elapsed="0.000671"/>
</branch>
<status status="PASS" start="2024-03-14T01:51:51.422098" elapsed="0.003886"/>
</if>
<status status="PASS" start="2024-03-14T01:51:51.420692" elapsed="0.005348"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:49.642028" elapsed="1.784055"/>
</kw>
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T01:51:49.641607" elapsed="1.784521"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:49.641402" elapsed="1.784760"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T01:51:51.426396" elapsed="0.000019"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T01:51:51.426572" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2024-03-14T01:51:51.426190" elapsed="0.000470"/>
</branch>
<status status="PASS" start="2024-03-14T01:51:49.641382" elapsed="1.785311"/>
</if>
<status status="PASS" start="2024-03-14T01:51:49.640672" elapsed="1.786059"/>
</branch>
<status status="PASS" start="2024-03-14T01:51:49.640612" elapsed="1.786153"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.427115" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:51:51.426888" elapsed="0.000266"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.943428" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T01:51:51.427253" elapsed="0.516274"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:49.639716" elapsed="2.303908"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T01:48:55.103135" elapsed="176.840566"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="26">
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.945158" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T01:51:51.944699" elapsed="0.000486"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.945492" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:51.945291" elapsed="0.000264"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.946132" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T01:51:51.945898" elapsed="0.000258"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.946485" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T01:51:51.946277" elapsed="0.000229"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.946841" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:51:51.946625" elapsed="0.000250"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:51.945678" elapsed="0.001336"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.947280" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:51:51.947121" elapsed="0.000180"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.948138" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:51:51.947969" elapsed="0.000204"/>
</kw>
<kw name="Set Confidence" owner="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" start="2024-03-14T01:51:51.948274" elapsed="0.000094"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2024-03-14T01:51:51.949101" level="INFO">Starting process:
rfswarm-reporter -g 6</msg>
<msg time="2024-03-14T01:51:51.957434" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-03-14T01:51:51.948472" elapsed="0.009050"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:51.958408" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T01:51:51.958062" elapsed="0.000627"/>
</kw>
<kw name="Set Screenshot Folder" owner="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" start="2024-03-14T01:51:51.958866" elapsed="0.000164"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T01:51:51.959310" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T01:51:51.959140" elapsed="0.372529"/>
</kw>
<arg>@{appargs}</arg>
<status status="PASS" start="2024-03-14T01:51:51.947701" elapsed="0.384224"/>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T01:51:51.947406" elapsed="0.384599"/>
</kw>
<status status="PASS" start="2024-03-14T01:51:51.944446" elapsed="0.387661"/>
</kw>
<kw name="Wait For Status">
<kw name="Convert To Lower Case" owner="String">
<msg time="2024-03-14T01:51:52.333628" level="INFO">${statusl} = previewloaded</msg>
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<status status="PASS" start="2024-03-14T01:51:52.333385" elapsed="0.000291"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T01:51:52.334154" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T01:51:52.333911" elapsed="0.000300"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:52.334475" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:52.334345" elapsed="0.000175"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T01:51:52.334739" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T01:51:52.334628" elapsed="0.000150"/>
</kw>
<kw name="Wait For" owner="ImageHorizonLibrary">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:02:29.203282" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:02:29.202827" elapsed="0.332297"/>
</kw>
<msg time="2024-03-14T02:02:29.535645" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<status status="FAIL" start="2024-03-14T01:51:52.334885" elapsed="637.201433">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:29.536609" elapsed="0.000034"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:29.536748" elapsed="0.000018"/>
</kw>
<arg>PreviewLoaded</arg>
<status status="FAIL" start="2024-03-14T01:51:52.332520" elapsed="637.204404">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<status status="NOT RUN" start="2024-03-14T02:02:29.537221" elapsed="0.000026"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:29.538217" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:29.538040" elapsed="0.000200"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T02:02:29.538693" level="INFO">${running} = True</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T02:02:29.538474" elapsed="0.000241"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Close GUI macos">
<kw name="Click Image" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:02:30.189529" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg time="2024-03-14T02:02:30.189705" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="PASS" start="2024-03-14T02:02:29.539428" elapsed="0.823104"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:02:30.363350" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:02:30.362928" elapsed="0.423431"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.297236" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T02:02:30.786747" elapsed="0.510639"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" owner="Process">
<msg time="2024-03-14T02:02:31.298973" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-03-14T02:02:31.299177" level="INFO">Process completed.</msg>
<msg time="2024-03-14T02:02:31.299322" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-03-14T02:02:31.298636" elapsed="0.000718"/>
</kw>
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T02:02:31.299775" level="INFO">${running} = False</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T02:02:31.299528" elapsed="0.000271"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.304165" level="INFO"/>
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:02:31.300729" elapsed="0.003806"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T02:02:31.304768" elapsed="0.000837"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.306591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-14T02:02:31.305830" elapsed="0.000833"/>
</kw>
<arg>${result}</arg>
<status status="PASS" start="2024-03-14T02:02:31.300261" elapsed="0.006567"/>
</kw>
<status status="PASS" start="2024-03-14T02:02:31.299904" elapsed="0.006959"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:31.307098" elapsed="0.000026"/>
</kw>
<kw name="Terminate Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:31.307239" elapsed="0.000018"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T02:02:31.308006" elapsed="0.000197"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:31.308747" elapsed="0.000204"/>
</kw>
<status status="NOT RUN" start="2024-03-14T02:02:31.306908" elapsed="0.002211"/>
</branch>
<status status="PASS" start="2024-03-14T02:02:31.299874" elapsed="0.009280"/>
</if>
<status status="PASS" start="2024-03-14T02:02:31.297969" elapsed="0.011299"/>
</kw>
<status status="PASS" start="2024-03-14T02:02:29.539202" elapsed="1.770121"/>
</kw>
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T02:02:29.538915" elapsed="1.770461"/>
</kw>
<status status="PASS" start="2024-03-14T02:02:29.538777" elapsed="1.770710"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T02:02:31.309647" elapsed="0.000017"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T02:02:31.309797" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2024-03-14T02:02:31.309526" elapsed="0.000316"/>
</branch>
<status status="PASS" start="2024-03-14T02:02:29.538762" elapsed="1.771102"/>
</if>
<status status="PASS" start="2024-03-14T02:02:29.538332" elapsed="1.771564"/>
</branch>
<status status="PASS" start="2024-03-14T02:02:29.538305" elapsed="1.771616"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.310258" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:02:31.310043" elapsed="0.000254"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.840494" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T02:02:31.310500" elapsed="0.530144"/>
</kw>
<status status="PASS" start="2024-03-14T02:02:29.537703" elapsed="2.303110"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T01:51:51.944034" elapsed="639.896925">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</test>
<test id="s1-s2-t3" name="First Run" line="33">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T02:02:31.842369" elapsed="0.000324"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.843003" level="INFO">${testdata} = Issue-#147</msg>
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:31.842853" elapsed="0.000185"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.843320" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:31.843180" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.843742" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:31.843499" elapsed="0.000273"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T02:02:31.844163" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T02:02:31.843919" elapsed="0.000307"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T02:02:31.844393" elapsed="0.000188"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.844911" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:31.844688" elapsed="0.000246"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T02:02:31.845396" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T02:02:31.845032" elapsed="0.000416"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.845768" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:02:31.845611" elapsed="0.000225"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.846179" level="INFO">${epoch} = 1710381751</msg>
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2024-03-14T02:02:31.846009" elapsed="0.000191"/>
</kw>
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.847228" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T02:02:31.846721" elapsed="0.000535"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.847547" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': 'ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': ['-i', 'blank_1710381751.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:02:31.847360" elapsed="0.000254"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.848174" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T02:02:31.847953" elapsed="0.000245"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.848558" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T02:02:31.848339" elapsed="0.000241"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.848903" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:02:31.848693" elapsed="0.000244"/>
</kw>
<status status="PASS" start="2024-03-14T02:02:31.847735" elapsed="0.001256"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.849211" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:02:31.849081" elapsed="0.000151"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.850018" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:02:31.849859" elapsed="0.000194"/>
</kw>
<kw name="Set Confidence" owner="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" start="2024-03-14T02:02:31.850155" elapsed="0.000142"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2024-03-14T02:02:31.850975" level="INFO">Starting process:
rfswarm-reporter -g 6 -i blank_1710381751.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg time="2024-03-14T02:02:31.855786" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6', '-i', 'blank_...&gt;</msg>
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-03-14T02:02:31.850410" elapsed="0.005449"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:02:31.856685" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6', '-i', 'blank_...&gt;</msg>
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:02:31.856370" elapsed="0.000358"/>
</kw>
<kw name="Set Screenshot Folder" owner="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" start="2024-03-14T02:02:31.856924" elapsed="0.000149"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:02:31.857382" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:02:31.857182" elapsed="1197.861499"/>
</kw>
<arg>@{appargs}</arg>
<status status="PASS" start="2024-03-14T02:02:31.849610" elapsed="1197.869410"/>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T02:02:31.849331" elapsed="1197.869768"/>
</kw>
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<status status="PASS" start="2024-03-14T02:02:31.846426" elapsed="1197.872751"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Wait For Status">
<kw name="Convert To Lower Case" owner="String">
<msg time="2024-03-14T02:22:29.720426" level="INFO">${statusl} = previewloaded</msg>
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<status status="PASS" start="2024-03-14T02:22:29.720266" elapsed="0.000184"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:22:29.720719" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:22:29.720563" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:22:29.720956" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:22:29.720854" elapsed="0.000247"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:22:29.721313" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:22:29.721207" elapsed="0.000143"/>
</kw>
<kw name="Wait For" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:22:30.302541" level="INFO">Image "reporter_macos_status_previewloaded.png" found at (55, 440)</msg>
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<status status="PASS" start="2024-03-14T02:22:29.721451" elapsed="0.581370"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T02:22:30.808432" level="INFO">Slept 500 milliseconds.</msg>
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T02:22:30.303228" elapsed="0.505294"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:22:30.808930" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:22:30.808711" elapsed="0.370794"/>
</kw>
<arg>PreviewLoaded</arg>
<status status="PASS" start="2024-03-14T02:22:29.719849" elapsed="1.459944"/>
</kw>
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-03-14T02:22:29.719478" elapsed="1.460443"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:22:31.181129" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:22:31.180944" elapsed="0.000209"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T02:22:31.181622" level="INFO">${running} = True</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T02:22:31.181395" elapsed="0.000249"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Close GUI macos">
<kw name="Click Image" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:22:31.833267" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg time="2024-03-14T02:22:31.833479" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="PASS" start="2024-03-14T02:22:31.182420" elapsed="0.836984"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:22:32.020107" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:22:32.019775" elapsed="1198.282535"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T02:42:30.858642" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T02:42:30.302820" elapsed="0.555920"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" owner="Process">
<msg time="2024-03-14T02:42:30.859840" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-03-14T02:42:30.859958" level="INFO">Process completed.</msg>
<msg time="2024-03-14T02:42:30.860045" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-03-14T02:42:30.859605" elapsed="0.000461"/>
</kw>
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T02:42:30.860341" level="INFO">${running} = False</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T02:42:30.860180" elapsed="0.000185"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:42:30.861752" level="INFO"/>
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:42:30.861114" elapsed="0.000677"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T02:42:30.861908" elapsed="0.000468"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-14T02:42:30.863012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-14T02:42:30.862493" elapsed="0.000581"/>
</kw>
<arg>${result}</arg>
<status status="PASS" start="2024-03-14T02:42:30.860778" elapsed="0.002359"/>
</kw>
<status status="PASS" start="2024-03-14T02:42:30.860465" elapsed="0.002701"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T02:42:30.863301" elapsed="0.000019"/>
</kw>
<kw name="Terminate Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" start="2024-03-14T02:42:30.863415" elapsed="0.000016"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T02:42:30.863541" elapsed="0.000017"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-03-14T02:42:30.863651" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-03-14T02:42:30.863199" elapsed="0.000497"/>
</branch>
<status status="PASS" start="2024-03-14T02:42:30.860434" elapsed="0.003285"/>
</if>
<status status="PASS" start="2024-03-14T02:42:30.859161" elapsed="0.004604"/>
</kw>
<status status="PASS" start="2024-03-14T02:22:31.182188" elapsed="1199.681620"/>
</kw>
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T02:22:31.181883" elapsed="1199.681967"/>
</kw>
<status status="PASS" start="2024-03-14T02:22:31.181705" elapsed="1199.682178"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T02:42:30.864075" elapsed="0.000017"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T02:42:30.864298" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2024-03-14T02:42:30.863908" elapsed="0.000437"/>
</branch>
<status status="PASS" start="2024-03-14T02:22:31.181690" elapsed="1199.682677"/>
</if>
<status status="PASS" start="2024-03-14T02:22:31.181251" elapsed="1199.683146"/>
</branch>
<status status="PASS" start="2024-03-14T02:22:31.181223" elapsed="1199.683198"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:30.864699" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:42:30.864533" elapsed="0.000201"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.365300" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T02:42:30.864831" elapsed="0.500558"/>
</kw>
<status status="PASS" start="2024-03-14T02:22:31.180527" elapsed="1200.184990"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T02:02:31.841628" elapsed="2399.523955"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="50">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T02:42:31.366303" elapsed="0.000198"/>
</kw>
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.367340" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T02:42:31.366887" elapsed="0.000480"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.367798" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'Issue #150', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:42:31.367469" elapsed="0.000411"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.368557" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T02:42:31.368303" elapsed="0.000279"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.368958" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T02:42:31.368718" elapsed="0.000261"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.369308" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:42:31.369095" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2024-03-14T02:42:31.368032" elapsed="0.001364"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.369628" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:42:31.369496" elapsed="0.000152"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.370481" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:42:31.370304" elapsed="0.000213"/>
</kw>
<kw name="Set Confidence" owner="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" start="2024-03-14T02:42:31.370623" elapsed="0.000094"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2024-03-14T02:42:31.371434" level="INFO">Starting process:
rfswarm-reporter -g 6</msg>
<msg time="2024-03-14T02:42:31.378084" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-03-14T02:42:31.370827" elapsed="0.007357"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.379021" level="INFO">${process} = &lt;Popen: returncode: None args: ['rfswarm-reporter', '-g', '6']&gt;</msg>
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T02:42:31.378685" elapsed="0.000382"/>
</kw>
<kw name="Set Screenshot Folder" owner="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" start="2024-03-14T02:42:31.379193" elapsed="0.000152"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T02:42:31.379629" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T02:42:31.379454" elapsed="0.535939"/>
</kw>
<arg>@{appargs}</arg>
<status status="PASS" start="2024-03-14T02:42:31.370035" elapsed="0.545719"/>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T02:42:31.369750" elapsed="0.546184"/>
</kw>
<status status="PASS" start="2024-03-14T02:42:31.366660" elapsed="0.549345"/>
</kw>
<kw name="Wait For Status">
<kw name="Convert To Lower Case" owner="String">
<msg time="2024-03-14T02:42:31.917070" level="INFO">${statusl} = previewloaded</msg>
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<status status="PASS" start="2024-03-14T02:42:31.916894" elapsed="0.000200"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.917379" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T02:42:31.917216" elapsed="0.000186"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.917623" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:42:31.917518" elapsed="0.000143"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T02:42:31.917863" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T02:42:31.917761" elapsed="0.000145"/>
</kw>
<kw name="Wait For" owner="ImageHorizonLibrary">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T03:02:30.568530" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T03:02:30.568016" elapsed="0.306117"/>
</kw>
<msg time="2024-03-14T03:02:30.874631" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<status status="FAIL" start="2024-03-14T02:42:31.918010" elapsed="1198.957073">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.875389" elapsed="0.000035"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.875530" elapsed="0.000018"/>
</kw>
<arg>PreviewLoaded</arg>
<status status="FAIL" start="2024-03-14T02:42:31.916350" elapsed="1198.959339">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.876475" elapsed="0.000029"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.876606" elapsed="0.000017"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.876769" elapsed="0.000018"/>
</kw>
<kw name="Click To The Below Of Image" owner="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.876906" elapsed="0.000020"/>
</kw>
<kw name="Type" owner="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.877022" elapsed="0.000016"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.877176" elapsed="0.000017"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.877281" elapsed="0.000019"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.877437" elapsed="0.000017"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.877633" elapsed="0.000018"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.877778" elapsed="0.000017"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.877910" elapsed="0.000018"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.878105" elapsed="0.000017"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.878288" elapsed="0.000016"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.878434" elapsed="0.000016"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.878621" elapsed="0.000017"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.878764" elapsed="0.000016"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:30.878878" elapsed="0.000016"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.879038" elapsed="0.000018"/>
</kw>
<kw name="Wait For Status">
<arg>SavedXHTMLReport</arg>
<status status="NOT RUN" start="2024-03-14T03:02:30.879178" elapsed="0.000017"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:02:30.880065" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:02:30.879890" elapsed="0.000199"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T03:02:30.880537" level="INFO">${running} = True</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T03:02:30.880319" elapsed="0.000240"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Close GUI macos">
<kw name="Click Image" owner="ImageHorizonLibrary">
<msg time="2024-03-14T03:02:31.344150" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" found at Box(left=9, top=31, width=19, height=25)</msg>
<msg time="2024-03-14T03:02:31.345430" level="INFO">Clicking image "reporter_macos_button_closewindow.png" in position (18, 43)</msg>
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="PASS" start="2024-03-14T03:02:30.881280" elapsed="0.660622"/>
</kw>
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<msg time="2024-03-14T03:02:31.542993" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.12/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<doc>Takes a screenshot of the screen.</doc>
<status status="PASS" start="2024-03-14T03:02:31.542647" elapsed="0.471375"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:02:32.530800" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:02:32.014477" elapsed="0.516420"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" owner="Process">
<msg time="2024-03-14T03:02:32.532007" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-03-14T03:02:32.532133" level="INFO">Process completed.</msg>
<msg time="2024-03-14T03:02:32.532218" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-03-14T03:02:32.531770" elapsed="0.000470"/>
</kw>
<kw name="Is Process Running" owner="Process">
<msg time="2024-03-14T03:02:32.532535" level="INFO">${running} = False</msg>
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="PASS" start="2024-03-14T03:02:32.532362" elapsed="0.000194"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:02:32.534087" level="INFO"/>
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:02:32.533465" elapsed="0.000660"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:02:32.534344" elapsed="0.000590"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-03-14T03:02:32.535659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-03-14T03:02:32.535058" elapsed="0.000679"/>
</kw>
<arg>${result}</arg>
<status status="PASS" start="2024-03-14T03:02:32.533171" elapsed="0.002694"/>
</kw>
<status status="PASS" start="2024-03-14T03:02:32.532652" elapsed="0.003256"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" owner="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:32.536050" elapsed="0.000017"/>
</kw>
<kw name="Terminate Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:32.536165" elapsed="0.000016"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:02:32.536296" elapsed="0.000022"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:32.536411" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:02:32.535944" elapsed="0.000512"/>
</branch>
<status status="PASS" start="2024-03-14T03:02:32.532623" elapsed="0.003857"/>
</if>
<status status="PASS" start="2024-03-14T03:02:32.531338" elapsed="0.005190"/>
</kw>
<status status="PASS" start="2024-03-14T03:02:30.881031" elapsed="1.655538"/>
</kw>
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="PASS" start="2024-03-14T03:02:30.880750" elapsed="1.655862"/>
</kw>
<status status="PASS" start="2024-03-14T03:02:30.880621" elapsed="1.656025"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T03:02:32.536770" elapsed="0.000017"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:02:32.536949" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:02:32.536671" elapsed="0.000324"/>
</branch>
<status status="PASS" start="2024-03-14T03:02:30.880607" elapsed="1.656410"/>
</if>
<status status="PASS" start="2024-03-14T03:02:30.880180" elapsed="1.656867"/>
</branch>
<status status="PASS" start="2024-03-14T03:02:30.880155" elapsed="1.656918"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:02:32.537552" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:02:32.537269" elapsed="0.000323"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:02:33.042752" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:02:32.537768" elapsed="0.505083"/>
</kw>
<status status="PASS" start="2024-03-14T03:02:30.879584" elapsed="2.163354"/>
</kw>
<tag>Issue #149</tag>
<tag>Issue #150</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T02:42:31.365920" elapsed="1201.677089">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</status>
</test>
<status status="FAIL" start="2024-03-14T01:48:54.574607" elapsed="4418.468895"/>
</suite>
<status status="FAIL" start="2024-03-14T01:48:35.494602" elapsed="4437.549467"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="0" fail="1" skip="0">Issue #150</stat>
<stat pass="7" fail="2" skip="0">macos-latest</stat>
<stat pass="7" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="7" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="7" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="2" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
