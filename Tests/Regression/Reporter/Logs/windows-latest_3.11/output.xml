<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230513 04:14:24.873" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230513 04:14:24.920" endtime="20230513 04:14:24.920"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230513 04:14:24.920" endtime="20230513 04:14:24.920"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230513 04:14:24.920" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230513 04:14:24.920" endtime="20230513 04:14:24.920"/>
</kw>
<status status="PASS" starttime="20230513 04:14:24.904" endtime="20230513 04:14:24.920"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230513 04:14:24.920" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230513 04:14:32.616" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Reporter 
	Version 1.1.2 </msg>
<status status="PASS" starttime="20230513 04:14:24.920" endtime="20230513 04:14:32.616"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230513 04:14:32.616" endtime="20230513 04:14:32.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:32.616" endtime="20230513 04:14:32.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:32.616" endtime="20230513 04:14:32.616"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:14:24.920" endtime="20230513 04:14:32.616"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230513 04:14:32.616" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230513 04:14:33.664" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.2 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230513 04:14:32.616" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:14:32.616" endtime="20230513 04:14:33.664"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:33.664"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230513 04:14:33.664" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230513 04:14:37.326" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:14:33.664" endtime="20230513 04:14:37.326"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:37.326"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230513 04:14:37.326" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230513 04:14:41.812" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">
</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:14:37.326" endtime="20230513 04:14:41.812"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:41.812"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230513 04:14:41.812" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230513 04:14:45.391" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:45.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:45.391" level="INFO">
</msg>
<status status="PASS" starttime="20230513 04:14:45.391" endtime="20230513 04:14:45.391"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:14:45.391" endtime="20230513 04:14:45.391"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230513 04:14:45.391" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230513 04:14:45.391" endtime="20230513 04:14:45.406"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230513 04:14:41.812" endtime="20230513 04:14:45.406"/>
</test>
<status status="PASS" starttime="20230513 04:14:24.904" endtime="20230513 04:14:45.406"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="14">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230513 04:14:46.537" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:46.537" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000023345C3DB50&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.537"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 04:14:46.537" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.537"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:14:46.537" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.537"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.553"/>
</kw>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py</msg>
<msg timestamp="20230513 04:14:46.553" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.553"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:14:46.553" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.631"/>
</kw>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.631"/>
</kw>
<status status="PASS" starttime="20230513 04:14:46.553" endtime="20230513 04:14:46.631"/>
</kw>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:14:46.631"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230513 04:14:46.631" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230513 04:14:46.631" endtime="20230513 04:14:46.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:14:46.631" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230513 04:14:46.631" endtime="20230513 04:14:46.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:46.646" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230513 04:14:46.646" endtime="20230513 04:14:46.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:14:46.646" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230513 04:14:46.646" endtime="20230513 04:14:46.646"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230513 04:14:59.943" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (187, 561)</msg>
<status status="PASS" starttime="20230513 04:14:46.646" endtime="20230513 04:14:59.943"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230513 04:15:00.053" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=139, top=552, width=96, height=18)</msg>
<msg timestamp="20230513 04:15:00.053" level="INFO">@{coordinates} = [ 187 | 561 ]</msg>
<status status="PASS" starttime="20230513 04:14:59.943" endtime="20230513 04:15:00.053"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:15:00.179" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=139, top=552, width=96, height=18)</msg>
<msg timestamp="20230513 04:15:00.179" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (187, 561)</msg>
<status status="PASS" starttime="20230513 04:15:00.053" endtime="20230513 04:15:00.288"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230513 04:15:00.388" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230513 04:15:00.288" endtime="20230513 04:15:00.388"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:00.388" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.388" endtime="20230513 04:15:00.461"/>
</kw>
<status status="PASS" starttime="20230513 04:14:46.631" endtime="20230513 04:15:00.461"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:00.461" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.461"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:15:00.461" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.461"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:15:00.556" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=893, top=130, width=45, height=30)</msg>
<msg timestamp="20230513 04:15:00.556" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (915, 145)</msg>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.665"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:00.665" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.665" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230513 04:15:00.759" level="INFO">Process completed.</msg>
<msg timestamp="20230513 04:15:00.759" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO"/>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</branch>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</if>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.759"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</branch>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.759"/>
</if>
<status status="PASS" starttime="20230513 04:15:00.461" endtime="20230513 04:15:00.759"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:14:46.537" endtime="20230513 04:15:00.759"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="20">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': &lt;Popen: returncode: 0 args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_rep...&gt;, '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000023345C3DB50&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:00.759" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.759"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:15:00.775" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.775"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.775"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230513 04:15:00.775" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py</msg>
<msg timestamp="20230513 04:15:00.775" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:15:00.775" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.775"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.775"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:00.775" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.853"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.775" endtime="20230513 04:15:00.853"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.853"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:00.853"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230513 04:15:00.853" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:00.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:00.853" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:00.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:00.853" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:00.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:00.853" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:00.853"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230513 04:15:11.913" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (83, 457)</msg>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:11.913"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230513 04:15:12.023" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=35, top=448, width=96, height=18)</msg>
<msg timestamp="20230513 04:15:12.023" level="INFO">@{coordinates} = [ 83 | 457 ]</msg>
<status status="PASS" starttime="20230513 04:15:11.913" endtime="20230513 04:15:12.023"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:15:12.148" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=35, top=448, width=96, height=18)</msg>
<msg timestamp="20230513 04:15:12.148" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (83, 457)</msg>
<status status="PASS" starttime="20230513 04:15:12.023" endtime="20230513 04:15:12.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230513 04:15:12.366" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230513 04:15:12.265" endtime="20230513 04:15:12.366"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:12.366" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:12.366" endtime="20230513 04:15:12.432"/>
</kw>
<status status="PASS" starttime="20230513 04:15:00.853" endtime="20230513 04:15:12.432"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230513 04:15:12.432" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:12.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:12.432" level="INFO">${img} = reporter_windows_tab_preview.png</msg>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:12.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:12.432" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:12.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:12.432" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:12.432"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230513 04:15:12.525" level="INFO">Image "reporter_windows_tab_preview.png" found at (293, 116)</msg>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:12.525"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230513 04:15:12.635" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230513 04:15:12.635" level="INFO">@{coordinates} = [ 293 | 116 ]</msg>
<status status="PASS" starttime="20230513 04:15:12.525" endtime="20230513 04:15:12.635"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:15:12.730" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230513 04:15:12.730" level="INFO">Clicking image "reporter_windows_tab_preview.png" in position (293, 116)</msg>
<status status="PASS" starttime="20230513 04:15:12.635" endtime="20230513 04:15:12.846"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230513 04:15:12.947" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230513 04:15:12.846" endtime="20230513 04:15:12.947"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:12.947" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:12.947" endtime="20230513 04:15:13.013"/>
</kw>
<status status="PASS" starttime="20230513 04:15:12.432" endtime="20230513 04:15:13.013"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:13.013" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.013"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:15:13.013" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.013"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:15:13.107" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=789, top=26, width=45, height=30)</msg>
<msg timestamp="20230513 04:15:13.107" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (811, 41)</msg>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.239"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:13.239" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.239" endtime="20230513 04:15:13.311"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230513 04:15:13.311" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230513 04:15:13.422" level="INFO">Process completed.</msg>
<msg timestamp="20230513 04:15:13.422" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.311" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO"/>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</branch>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</if>
<status status="PASS" starttime="20230513 04:15:13.311" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.422"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</branch>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.422"/>
</if>
<status status="PASS" starttime="20230513 04:15:13.013" endtime="20230513 04:15:13.422"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230513 04:15:00.759" endtime="20230513 04:15:13.422"/>
</test>
<test id="s1-s2-t3" name="First Run" line="27">
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${epoch} = 1683951313</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': &lt;Popen: returncode: 0 args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_rep...&gt;, '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000023345C3DB50&gt;, '@{appargs}': ['-i', 'blank_1683951313.ini'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">${args} = -i 	blank_1683951313.ini</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.422"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230513 04:15:13.422" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -i blank_1683951313.ini</msg>
<msg timestamp="20230513 04:15:13.437" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 04:15:13.437" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.437" endtime="20230513 04:15:13.437"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230513 04:15:13.437" endtime="20230513 04:15:13.437"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:15:13.437" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:15:13.437" endtime="20230513 04:15:13.515"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.515"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.515"/>
</kw>
<status status="PASS" starttime="20230513 04:15:13.422" endtime="20230513 04:15:13.515"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<arg>60</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<arg>60</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230513 04:15:13.515" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230513 04:15:13.515" endtime="20230513 04:15:13.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:15:13.515" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230513 04:15:13.515" endtime="20230513 04:15:13.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:13.515" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230513 04:15:13.515" endtime="20230513 04:15:13.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:15:13.515" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230513 04:15:13.515" endtime="20230513 04:15:13.515"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:16:13.520" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:16:13.520" endtime="20230513 04:16:13.599"/>
</kw>
<msg timestamp="20230513 04:16:13.599" level="FAIL">ImageNotFoundException: Reference image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230513 04:15:13.515" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<status status="FAIL" starttime="20230513 04:15:13.515" endtime="20230513 04:16:13.599"/>
</kw>
<status status="FAIL" starttime="20230513 04:15:13.515" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 04:16:13.599" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:16:13.599" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.599"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230513 04:16:13.693" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=815, top=52, width=45, height=30)</msg>
<msg timestamp="20230513 04:16:13.693" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (837, 67)</msg>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.819"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230513 04:16:13.819" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230513 04:16:13.819" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230513 04:16:13.897" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230513 04:16:13.897" level="INFO">Process completed.</msg>
<msg timestamp="20230513 04:16:13.897" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230513 04:16:13.897" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230513 04:16:13.897" level="INFO"/>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230513 04:16:13.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</branch>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</if>
<status status="PASS" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.897"/>
</kw>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.897"/>
</kw>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.897"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</kw>
<status status="NOT RUN" starttime="20230513 04:16:13.897" endtime="20230513 04:16:13.897"/>
</branch>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.897"/>
</if>
<status status="PASS" starttime="20230513 04:16:13.599" endtime="20230513 04:16:13.897"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230513 04:15:13.422" endtime="20230513 04:16:13.897">ImageNotFoundException: Reference image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" was not found on screen</status>
</test>
<status status="FAIL" starttime="20230513 04:14:45.406" endtime="20230513 04:16:13.897"/>
</suite>
<status status="FAIL" starttime="20230513 04:14:24.873" endtime="20230513 04:16:13.897"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="0" fail="1" skip="0">Issue #147</stat>
<stat pass="7" fail="1" skip="0">macos-latest</stat>
<stat pass="7" fail="1" skip="0">ubuntu-latest</stat>
<stat pass="7" fail="1" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="2" fail="1" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
