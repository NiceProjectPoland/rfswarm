<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230604 03:11:26.801" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:26.833"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:26.833"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-11.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-12.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-13.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-14.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-15.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-16.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-17.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-18.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-19.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-20.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-21.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-22.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-23.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-24.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-25.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-25.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-26.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-26.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-27.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-27.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-28.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-28.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-29.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-29.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230604 03:11:26.833" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:26.833"/>
</kw>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:26.833"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:11:26.833" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:11:42.913" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:42.913"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:11:42.913" endtime="20230604 03:11:42.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:42.913" endtime="20230604 03:11:42.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:42.913" endtime="20230604 03:11:42.913"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:11:26.833" endtime="20230604 03:11:42.913"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:11:42.913" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:11:43.898" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230604 03:11:42.913" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:11:42.913" endtime="20230604 03:11:43.898"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:43.898"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:11:43.898" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:11:47.500" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:11:43.898" endtime="20230604 03:11:47.500"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:47.500"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:11:47.500" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:11:51.860" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:51.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:51.860" level="INFO">
</msg>
<status status="PASS" starttime="20230604 03:11:51.860" endtime="20230604 03:11:51.860"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:51.860" endtime="20230604 03:11:51.860"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:11:47.500" endtime="20230604 03:11:51.876"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:51.876"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230604 03:11:51.876" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230604 03:11:55.440" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:55.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:55.440" level="INFO">
</msg>
<status status="PASS" starttime="20230604 03:11:55.440" endtime="20230604 03:11:55.440"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:11:55.440" endtime="20230604 03:11:55.440"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:11:55.440" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:11:55.440" endtime="20230604 03:11:55.440"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230604 03:11:51.876" endtime="20230604 03:11:55.440"/>
</test>
<status status="PASS" starttime="20230604 03:11:26.817" endtime="20230604 03:11:55.440"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D6221D290&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:58.475" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.475"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:11:58.490" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.490"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.490"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:11:58.490" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:11:58.490" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.490"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:11:58.490" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.490"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.490"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:11:58.490" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.600"/>
</kw>
<status status="PASS" starttime="20230604 03:11:58.490" endtime="20230604 03:11:58.600"/>
</kw>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.600"/>
</kw>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:11:58.600"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:11:58.600" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:11:58.600"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:11:58.600" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:11:58.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:58.600" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:11:58.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:11:58.600" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:11:58.600"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:14.665" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (187, 561)</msg>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:12:14.665"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:15.165" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:14.665" endtime="20230604 03:12:15.165"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:15.165" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:15.165" endtime="20230604 03:12:15.249"/>
</kw>
<status status="PASS" starttime="20230604 03:11:58.600" endtime="20230604 03:12:15.249"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:15.249" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:15.249"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:15.249" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:15.249"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:15.374" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=893, top=130, width=45, height=30)</msg>
<msg timestamp="20230604 03:12:15.374" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (915, 145)</msg>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:15.491"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:15.491" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:15.491" endtime="20230604 03:12:15.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:15.579" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:12:16.079" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:12:16.079" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO"/>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</branch>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</if>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</kw>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</kw>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</branch>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</if>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</branch>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.079"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:16.079" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.079"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:16.079" endtime="20230604 03:12:16.580"/>
</kw>
<status status="PASS" starttime="20230604 03:12:15.249" endtime="20230604 03:12:16.580"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:11:58.475" endtime="20230604 03:12:16.580"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D6221D290&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:16.580" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.580"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:16.587" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.587"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.587"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:12:16.587" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:12:16.587" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:16.587" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.587"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.587"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:16.587" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.680"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.587" endtime="20230604 03:12:16.680"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.680"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:16.680"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:16.680" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:16.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:16.680" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:16.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:16.680" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:16.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:16.680" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:16.680"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:28.386" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (83, 457)</msg>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:28.386"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:28.887" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:28.386" endtime="20230604 03:12:28.887"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:28.887" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:28.887" endtime="20230604 03:12:28.976"/>
</kw>
<status status="PASS" starttime="20230604 03:12:16.680" endtime="20230604 03:12:28.976"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:28.976" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:28.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:28.976" level="INFO">${img} = reporter_windows_tab_preview.png</msg>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:28.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:28.976" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:28.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:28.976" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:28.976"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:29.071" level="INFO">Image "reporter_windows_tab_preview.png" found at (293, 116)</msg>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:29.071"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:29.165" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230604 03:12:29.165" level="INFO">@{coordinates} = [ 293 | 116 ]</msg>
<status status="PASS" starttime="20230604 03:12:29.071" endtime="20230604 03:12:29.165"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:29.260" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=261, top=105, width=65, height=23)</msg>
<msg timestamp="20230604 03:12:29.260" level="INFO">Clicking image "reporter_windows_tab_preview.png" in position (293, 116)</msg>
<status status="PASS" starttime="20230604 03:12:29.165" endtime="20230604 03:12:29.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:29.876" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:29.375" endtime="20230604 03:12:29.876"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:29.876" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:29.876" endtime="20230604 03:12:29.963"/>
</kw>
<status status="PASS" starttime="20230604 03:12:28.976" endtime="20230604 03:12:29.963"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:29.963" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:29.963"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:29.963" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:29.963"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:30.055" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=789, top=26, width=45, height=30)</msg>
<msg timestamp="20230604 03:12:30.055" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (811, 41)</msg>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.172"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:30.172" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:30.172" endtime="20230604 03:12:30.244"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:30.244" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:12:30.744" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:12:30.744" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO"/>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</branch>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</if>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</kw>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</kw>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</branch>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</if>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</branch>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:30.744"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:30.744" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:30.744"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:30.744" endtime="20230604 03:12:31.245"/>
</kw>
<status status="PASS" starttime="20230604 03:12:29.963" endtime="20230604 03:12:31.245"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:12:16.580" endtime="20230604 03:12:31.245"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${epoch} = 1685848351</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D6221D290&gt;, '@{appargs}': ['-i', 'blank_1685848351.ini', '-d', 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\testdata\\Issue-#147\\20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:31.245" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.245"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO">${args} = -i 	blank_1685848351.ini 	-d 	D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6 -i blank_1685848351.ini -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#147\20230320_185055_demo</msg>
<msg timestamp="20230604 03:12:31.251" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.251"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:31.251" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.329"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.329"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.251" endtime="20230604 03:12:31.329"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:31.329"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:31.329" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:31.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:31.329" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:31.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:31.329" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:31.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:31.329" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:31.329"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:34.754" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (109, 483)</msg>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:34.754"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:35.255" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:34.754" endtime="20230604 03:12:35.255"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:35.255" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:35.255" endtime="20230604 03:12:35.335"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:35.335"/>
</kw>
<status status="PASS" starttime="20230604 03:12:31.329" endtime="20230604 03:12:35.335"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:35.335" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:35.335"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:35.335" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:35.335"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:35.430" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=815, top=52, width=45, height=30)</msg>
<msg timestamp="20230604 03:12:35.430" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (837, 67)</msg>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:35.562"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:35.562" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:35.562" endtime="20230604 03:12:35.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:35.650" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:12:36.150" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:12:36.150" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO"/>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</branch>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</if>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</kw>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</kw>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</branch>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</if>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</branch>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.150"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:36.150" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.150"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:36.150" endtime="20230604 03:12:36.650"/>
</kw>
<status status="PASS" starttime="20230604 03:12:35.335" endtime="20230604 03:12:36.650"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:12:31.245" endtime="20230604 03:12:36.650"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.11\\report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x0000017D6221D290&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:36.650" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.650"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230604 03:12:36.659" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230604 03:12:36.659" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.659"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:12:36.659" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230604 03:12:36.659" endtime="20230604 03:12:36.659"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230604 03:12:36.659" endtime="20230604 03:12:36.659"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:36.659" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:36.659" endtime="20230604 03:12:36.737"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.737"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.737"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:12:36.737"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:36.737" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:36.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:36.737" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:36.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:36.737" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:36.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:36.737" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:36.737"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:49.102" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:49.102"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:49.602" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:49.102" endtime="20230604 03:12:49.602"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:49.603" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:49.602" endtime="20230604 03:12:49.699"/>
</kw>
<status status="PASS" starttime="20230604 03:12:36.737" endtime="20230604 03:12:49.699"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:49.699" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:49.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:49.699" level="INFO">${img} = reporter_windows_section_report.png</msg>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:49.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:49.699" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:49.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:49.699" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:49.699"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:49.789" level="INFO">Image "reporter_windows_section_report.png" found at (154, 231)</msg>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:49.789"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:49.884" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=133, top=209, width=42, height=45)</msg>
<msg timestamp="20230604 03:12:49.884" level="INFO">@{coordinates} = [ 154 | 231 ]</msg>
<status status="PASS" starttime="20230604 03:12:49.789" endtime="20230604 03:12:49.884"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:49.999" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_report.png" found at Box(left=133, top=209, width=42, height=45)</msg>
<msg timestamp="20230604 03:12:49.999" level="INFO">Clicking image "reporter_windows_section_report.png" in position (154, 231)</msg>
<status status="PASS" starttime="20230604 03:12:49.884" endtime="20230604 03:12:50.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:50.611" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:50.110" endtime="20230604 03:12:50.611"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:50.611" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:50.611" endtime="20230604 03:12:50.703"/>
</kw>
<status status="PASS" starttime="20230604 03:12:49.699" endtime="20230604 03:12:50.703"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:50.703" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:50.703" endtime="20230604 03:12:50.790"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:50.790" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:50.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:50.790" level="INFO">${img} = reporter_windows_button_addsection.png</msg>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:50.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:50.790" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:50.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:50.790" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:50.790"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:50.884" level="INFO">Image "reporter_windows_button_addsection.png" found at (127, 200)</msg>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:50.884"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:50.978" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=114, top=186, width=26, height=28)</msg>
<msg timestamp="20230604 03:12:50.978" level="INFO">@{coordinates} = [ 127 | 200 ]</msg>
<status status="PASS" starttime="20230604 03:12:50.884" endtime="20230604 03:12:50.978"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:51.088" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_addsection.png" found at Box(left=114, top=186, width=26, height=28)</msg>
<msg timestamp="20230604 03:12:51.088" level="INFO">Clicking image "reporter_windows_button_addsection.png" in position (127, 200)</msg>
<status status="PASS" starttime="20230604 03:12:50.978" endtime="20230604 03:12:51.220"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:51.721" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:51.220" endtime="20230604 03:12:51.721"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:51.721" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:51.721" endtime="20230604 03:12:51.806"/>
</kw>
<status status="PASS" starttime="20230604 03:12:50.790" endtime="20230604 03:12:51.806"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230604 03:12:51.910" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_sectionname.png" found at Box(left=460, top=379, width=80, height=21)</msg>
<msg timestamp="20230604 03:12:51.910" level="INFO">Clicking 1 time(s) at (500, 409) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230604 03:12:51.806" endtime="20230604 03:12:52.027"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230604 03:12:52.027" endtime="20230604 03:12:52.138"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:52.138" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:52.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:52.138" level="INFO">${img} = reporter_windows_button_ok.png</msg>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:52.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:52.138" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:52.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:52.138" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:52.138"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:52.226" level="INFO">Image "reporter_windows_button_ok.png" found at (475, 440)</msg>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:52.226"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:52.335" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230604 03:12:52.335" level="INFO">@{coordinates} = [ 475 | 440 ]</msg>
<status status="PASS" starttime="20230604 03:12:52.226" endtime="20230604 03:12:52.335"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:52.445" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_ok.png" found at Box(left=463, top=425, width=25, height=30)</msg>
<msg timestamp="20230604 03:12:52.445" level="INFO">Clicking image "reporter_windows_button_ok.png" in position (475, 440)</msg>
<status status="PASS" starttime="20230604 03:12:52.335" endtime="20230604 03:12:52.554"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:53.055" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:52.554" endtime="20230604 03:12:53.055"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:53.055" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:53.055" endtime="20230604 03:12:53.133"/>
</kw>
<status status="PASS" starttime="20230604 03:12:52.138" endtime="20230604 03:12:53.133"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:53.133" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:53.133" endtime="20230604 03:12:53.228"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:53.228" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:53.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:53.228" level="INFO">${img} = reporter_windows_section_issue#149.png</msg>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:53.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:53.228" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:53.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:53.228" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:53.228"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:53.322" level="INFO">Image "reporter_windows_section_issue#149.png" found at (185, 389)</msg>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:53.322"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:53.416" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=155, top=381, width=60, height=16)</msg>
<msg timestamp="20230604 03:12:53.416" level="INFO">@{coordinates} = [ 185 | 389 ]</msg>
<status status="PASS" starttime="20230604 03:12:53.322" endtime="20230604 03:12:53.416"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:53.511" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_section_issue#149.png" found at Box(left=155, top=381, width=60, height=16)</msg>
<msg timestamp="20230604 03:12:53.511" level="INFO">Clicking image "reporter_windows_section_issue#149.png" in position (185, 389)</msg>
<status status="PASS" starttime="20230604 03:12:53.416" endtime="20230604 03:12:53.627"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:54.127" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:53.627" endtime="20230604 03:12:54.127"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:54.127" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:54.127" endtime="20230604 03:12:54.213"/>
</kw>
<status status="PASS" starttime="20230604 03:12:53.228" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">${img} = reporter_windows_label_type.png</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=53x17 at 0x17D66951890&gt;</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">${imgsize} = (53, 17)</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</return>
<msg timestamp="20230604 03:12:54.213" level="INFO">${imgsize} = (53, 17)</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">(53, 17)</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">${offsetx} = 31</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">31</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:54.213" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.213"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:54.317" level="INFO">Image "reporter_windows_label_type.png" found at (365, 242)</msg>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:54.317"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:54.413" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_type.png" found at Box(left=339, top=234, width=53, height=17)</msg>
<msg timestamp="20230604 03:12:54.413" level="INFO">@{coordinates} = [ 365 | 242 ]</msg>
<status status="PASS" starttime="20230604 03:12:54.317" endtime="20230604 03:12:54.413"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:54.413" level="INFO">${x} = 396</msg>
<status status="PASS" starttime="20230604 03:12:54.413" endtime="20230604 03:12:54.413"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:54.413" level="INFO">${y} = 242</msg>
<status status="PASS" starttime="20230604 03:12:54.413" endtime="20230604 03:12:54.413"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:12:54.413" level="INFO">@{coordinates} = [ 396 | 242 ]</msg>
<status status="PASS" starttime="20230604 03:12:54.413" endtime="20230604 03:12:54.413"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:12:54.413" endtime="20230604 03:12:54.519"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:12:54.519" endtime="20230604 03:12:54.637"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:55.138" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:54.637" endtime="20230604 03:12:55.138"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:55.138" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:55.138" endtime="20230604 03:12:55.223"/>
</kw>
<status status="PASS" starttime="20230604 03:12:54.213" endtime="20230604 03:12:55.223"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:55.223" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:55.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:55.223" level="INFO">${img} = reporter_windows_option_datatable.png</msg>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:55.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:55.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:55.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:55.223" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:55.223"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:55.317" level="INFO">Image "reporter_windows_option_datatable.png" found at (454, 341)</msg>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:55.317"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:55.417" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=413, top=335, width=83, height=13)</msg>
<msg timestamp="20230604 03:12:55.417" level="INFO">@{coordinates} = [ 454 | 341 ]</msg>
<status status="PASS" starttime="20230604 03:12:55.317" endtime="20230604 03:12:55.417"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:55.505" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_datatable.png" found at Box(left=413, top=335, width=83, height=13)</msg>
<msg timestamp="20230604 03:12:55.505" level="INFO">Clicking image "reporter_windows_option_datatable.png" in position (454, 341)</msg>
<status status="PASS" starttime="20230604 03:12:55.417" endtime="20230604 03:12:55.622"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:56.122" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:55.622" endtime="20230604 03:12:56.122"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:56.122" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:56.122" endtime="20230604 03:12:56.220"/>
</kw>
<status status="PASS" starttime="20230604 03:12:55.223" endtime="20230604 03:12:56.220"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:56.220" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:56.220" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.220" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.220" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.220"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:56.320" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.320"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:56.821" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:56.320" endtime="20230604 03:12:56.821"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:56.821" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:56.821" endtime="20230604 03:12:56.910"/>
</kw>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.910"/>
</kw>
<status status="PASS" starttime="20230604 03:12:56.220" endtime="20230604 03:12:56.910"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:56.910" level="INFO">${labell} = showgraphcolours</msg>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:56.910"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:56.910" level="INFO">${img} = reporter_windows_label_showgraphcolours.png</msg>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:56.910"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:56.910" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=112x17 at 0x17D66935CD0&gt;</msg>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:56.910"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">${imgsize} = (112, 17)</msg>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:56.923"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</return>
<msg timestamp="20230604 03:12:56.923" level="INFO">${imgsize} = (112, 17)</msg>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">(112, 17)</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">${offsetx} = 61</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">61</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:56.923" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:56.923"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:57.020" level="INFO">Image "reporter_windows_label_showgraphcolours.png" found at (394, 265)</msg>
<status status="PASS" starttime="20230604 03:12:56.923" endtime="20230604 03:12:57.020"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:57.130" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_showgraphcolours.png" found at Box(left=338, top=257, width=112, height=17)</msg>
<msg timestamp="20230604 03:12:57.130" level="INFO">@{coordinates} = [ 394 | 265 ]</msg>
<status status="PASS" starttime="20230604 03:12:57.023" endtime="20230604 03:12:57.130"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:57.130" level="INFO">${x} = 455</msg>
<status status="PASS" starttime="20230604 03:12:57.130" endtime="20230604 03:12:57.130"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:57.130" level="INFO">${y} = 265</msg>
<status status="PASS" starttime="20230604 03:12:57.130" endtime="20230604 03:12:57.130"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:12:57.130" level="INFO">@{coordinates} = [ 455 | 265 ]</msg>
<status status="PASS" starttime="20230604 03:12:57.130" endtime="20230604 03:12:57.130"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:12:57.130" endtime="20230604 03:12:57.234"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:12:57.234" endtime="20230604 03:12:57.341"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:57.842" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:57.341" endtime="20230604 03:12:57.842"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:57.843" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:57.843" endtime="20230604 03:12:57.936"/>
</kw>
<status status="PASS" starttime="20230604 03:12:56.910" endtime="20230604 03:12:57.936"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:57.936" level="INFO">${labell} = datatype</msg>
<status status="PASS" starttime="20230604 03:12:57.936" endtime="20230604 03:12:57.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:57.936" level="INFO">${img} = reporter_windows_label_datatype.png</msg>
<status status="PASS" starttime="20230604 03:12:57.936" endtime="20230604 03:12:57.936"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=114x16 at 0x17D66955E10&gt;</msg>
<status status="PASS" starttime="20230604 03:12:57.936" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">${imgsize} = (114, 16)</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</return>
<msg timestamp="20230604 03:12:57.952" level="INFO">${imgsize} = (114, 16)</msg>
<status status="PASS" starttime="20230604 03:12:57.936" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">(114, 16)</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">${offsetx} = 62</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">62</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:57.952" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:57.952"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:58.046" level="INFO">Image "reporter_windows_label_datatype.png" found at (396, 287)</msg>
<status status="PASS" starttime="20230604 03:12:57.952" endtime="20230604 03:12:58.046"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:58.156" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_datatype.png" found at Box(left=339, top=279, width=114, height=16)</msg>
<msg timestamp="20230604 03:12:58.156" level="INFO">@{coordinates} = [ 396 | 287 ]</msg>
<status status="PASS" starttime="20230604 03:12:58.046" endtime="20230604 03:12:58.156"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:58.156" level="INFO">${x} = 458</msg>
<status status="PASS" starttime="20230604 03:12:58.156" endtime="20230604 03:12:58.156"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:58.156" level="INFO">${y} = 287</msg>
<status status="PASS" starttime="20230604 03:12:58.156" endtime="20230604 03:12:58.156"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:12:58.156" level="INFO">@{coordinates} = [ 458 | 287 ]</msg>
<status status="PASS" starttime="20230604 03:12:58.156" endtime="20230604 03:12:58.156"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:12:58.156" endtime="20230604 03:12:58.268"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:12:58.268" endtime="20230604 03:12:58.398"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:58.899" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:58.398" endtime="20230604 03:12:58.899"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:58.899" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:58.899" endtime="20230604 03:12:58.978"/>
</kw>
<status status="PASS" starttime="20230604 03:12:57.936" endtime="20230604 03:12:58.978"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:58.978" level="INFO">${optnamel} = result</msg>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:58.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:58.978" level="INFO">${img} = reporter_windows_option_result.png</msg>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:58.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:58.978" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:58.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:58.978" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:58.978"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:12:59.072" level="INFO">Image "reporter_windows_option_result.png" found at (478, 328)</msg>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:59.072"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:12:59.166" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_result.png" found at Box(left=450, top=322, width=57, height=12)</msg>
<msg timestamp="20230604 03:12:59.166" level="INFO">@{coordinates} = [ 478 | 328 ]</msg>
<status status="PASS" starttime="20230604 03:12:59.072" endtime="20230604 03:12:59.166"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:12:59.276" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_result.png" found at Box(left=450, top=322, width=57, height=12)</msg>
<msg timestamp="20230604 03:12:59.276" level="INFO">Clicking image "reporter_windows_option_result.png" in position (478, 328)</msg>
<status status="PASS" starttime="20230604 03:12:59.166" endtime="20230604 03:12:59.409"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:12:59.910" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:12:59.409" endtime="20230604 03:12:59.910"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:12:59.910" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-24.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-24.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:12:59.910" endtime="20230604 03:12:59.987"/>
</kw>
<status status="PASS" starttime="20230604 03:12:58.978" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">${labell} = resulttype</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">${img} = reporter_windows_label_resulttype.png</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=76x16 at 0x17D66957290&gt;</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">${imgsize} = (76, 16)</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</return>
<msg timestamp="20230604 03:12:59.987" level="INFO">${imgsize} = (76, 16)</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">(76, 16)</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:12:59.987" level="INFO">${offsetx} = 43</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:12:59.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:00.003" level="INFO">43</msg>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:13:00.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:00.003" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:13:00.003" endtime="20230604 03:13:00.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:00.003" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:13:00.003" endtime="20230604 03:13:00.003"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:13:00.097" level="INFO">Image "reporter_windows_label_resulttype.png" found at (374, 329)</msg>
<status status="PASS" starttime="20230604 03:13:00.003" endtime="20230604 03:13:00.097"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:13:00.191" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_label_resulttype.png" found at Box(left=336, top=321, width=76, height=16)</msg>
<msg timestamp="20230604 03:13:00.191" level="INFO">@{coordinates} = [ 374 | 329 ]</msg>
<status status="PASS" starttime="20230604 03:13:00.097" endtime="20230604 03:13:00.191"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:13:00.191" level="INFO">${x} = 417</msg>
<status status="PASS" starttime="20230604 03:13:00.191" endtime="20230604 03:13:00.191"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230604 03:13:00.191" level="INFO">${y} = 329</msg>
<status status="PASS" starttime="20230604 03:13:00.191" endtime="20230604 03:13:00.191"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230604 03:13:00.191" level="INFO">@{coordinates} = [ 417 | 329 ]</msg>
<status status="PASS" starttime="20230604 03:13:00.191" endtime="20230604 03:13:00.191"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230604 03:13:00.191" endtime="20230604 03:13:00.300"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230604 03:13:00.300" endtime="20230604 03:13:00.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:00.903" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:00.402" endtime="20230604 03:13:00.903"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:00.903" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-25.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-25.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:00.903" endtime="20230604 03:13:00.983"/>
</kw>
<status status="PASS" starttime="20230604 03:12:59.987" endtime="20230604 03:13:00.983"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:13:00.983" level="INFO">${optnamel} = responsetime</msg>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:00.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:13:00.983" level="INFO">${img} = reporter_windows_option_responsetime.png</msg>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:00.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:00.983" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:00.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:00.983" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:00.983"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:13:01.077" level="INFO">Image "reporter_windows_option_responsetime.png" found at (468, 353)</msg>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:01.077"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:13:01.187" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_responsetime.png" found at Box(left=411, top=344, width=114, height=18)</msg>
<msg timestamp="20230604 03:13:01.187" level="INFO">@{coordinates} = [ 468 | 353 ]</msg>
<status status="PASS" starttime="20230604 03:13:01.077" endtime="20230604 03:13:01.187"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:13:01.281" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_option_responsetime.png" found at Box(left=411, top=344, width=114, height=18)</msg>
<msg timestamp="20230604 03:13:01.281" level="INFO">Clicking image "reporter_windows_option_responsetime.png" in position (468, 353)</msg>
<status status="PASS" starttime="20230604 03:13:01.187" endtime="20230604 03:13:01.413"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:01.914" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:01.413" endtime="20230604 03:13:01.914"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:01.914" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-26.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-26.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:01.914" endtime="20230604 03:13:02.006"/>
</kw>
<status status="PASS" starttime="20230604 03:13:00.983" endtime="20230604 03:13:02.006"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:13:02.006" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:13:02.006" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:02.006" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:02.006" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.006"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:13:02.116" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (161, 535)</msg>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.116"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:02.616" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:02.116" endtime="20230604 03:13:02.616"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:02.616" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-27.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-27.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:02.616" endtime="20230604 03:13:02.701"/>
</kw>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.701"/>
</kw>
<status status="PASS" starttime="20230604 03:13:02.006" endtime="20230604 03:13:02.701"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230604 03:13:02.701" level="INFO">${bttnnamel} = generatehtml</msg>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:02.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:13:02.701" level="INFO">${img} = reporter_windows_button_generatehtml.png</msg>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:02.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:02.701" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:02.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:02.701" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:02.701"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230604 03:13:02.796" level="INFO">Image "reporter_windows_button_generatehtml.png" found at (837, 170)</msg>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:02.796"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230604 03:13:02.890" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_generatehtml.png" found at Box(left=825, top=155, width=24, height=30)</msg>
<msg timestamp="20230604 03:13:02.890" level="INFO">@{coordinates} = [ 837 | 170 ]</msg>
<status status="PASS" starttime="20230604 03:13:02.796" endtime="20230604 03:13:02.890"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:13:02.984" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_generatehtml.png" found at Box(left=825, top=155, width=24, height=30)</msg>
<msg timestamp="20230604 03:13:02.984" level="INFO">Clicking image "reporter_windows_button_generatehtml.png" in position (837, 170)</msg>
<status status="PASS" starttime="20230604 03:13:02.890" endtime="20230604 03:13:03.101"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:03.601" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:03.101" endtime="20230604 03:13:03.601"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:03.601" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-28.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-28.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:03.601" endtime="20230604 03:13:03.680"/>
</kw>
<status status="PASS" starttime="20230604 03:13:02.701" endtime="20230604 03:13:03.680"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:03.781" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:03.680" endtime="20230604 03:13:03.781"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:03.781" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-29.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-29.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:03.781" endtime="20230604 03:13:03.870"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:13.870" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230604 03:13:03.870" endtime="20230604 03:13:13.870"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:13.870" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-30.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-30.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:13.870" endtime="20230604 03:13:13.954"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:13:13.954" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:13.954"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:13:13.954" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:13.954"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230604 03:13:14.064" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=867, top=104, width=45, height=30)</msg>
<msg timestamp="20230604 03:13:14.064" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (889, 119)</msg>
<status status="PASS" starttime="20230604 03:13:13.969" endtime="20230604 03:13:14.175"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230604 03:13:14.175" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-31.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.11\Reporter.GUIBasic-screenshot-31.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230604 03:13:14.175" endtime="20230604 03:13:14.268"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:14.268" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230604 03:13:14.768" level="INFO">Process completed.</msg>
<msg timestamp="20230604 03:13:14.768" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO"/>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</branch>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</if>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<status status="PASS" starttime="20230604 03:13:13.969" endtime="20230604 03:13:14.768"/>
</kw>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:14.768"/>
</kw>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:14.768"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</branch>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:14.768"/>
</if>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:14.768"/>
</branch>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:14.768"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:13:14.768" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:14.768"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:15.269" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:14.768" endtime="20230604 03:13:15.269"/>
</kw>
<status status="PASS" starttime="20230604 03:13:13.954" endtime="20230604 03:13:15.269"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230604 03:12:36.650" endtime="20230604 03:13:15.269"/>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="100">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230604 03:13:15.269" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230604 03:13:15.269" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</branch>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</if>
<status status="NOT RUN" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</branch>
<status status="PASS" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230604 03:13:15.269" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230604 03:13:15.769" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.769"/>
</kw>
<status status="PASS" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.769"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230604 03:13:15.269" endtime="20230604 03:13:15.769">AssertionError</status>
</test>
<status status="FAIL" starttime="20230604 03:11:55.440" endtime="20230604 03:13:15.769"/>
</suite>
<status status="FAIL" starttime="20230604 03:11:26.801" endtime="20230604 03:13:15.769"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="1" fail="0" skip="0">Issue #149</stat>
<stat pass="9" fail="1" skip="0">macos-latest</stat>
<stat pass="9" fail="1" skip="0">ubuntu-latest</stat>
<stat pass="9" fail="1" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="9" fail="1" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="4" fail="1" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
