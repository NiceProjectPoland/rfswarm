<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.2 on darwin)" generated="2024-03-14T03:35:37.359121" rpa="false" schemaversion="5">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:37.406556" elapsed="0.000522"/>
</kw>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-03-14T03:35:37.407845" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stdout.txt&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.407950" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stderr.txt&lt;/a&gt;'.</msg>
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-03-14T03:35:37.407226" elapsed="0.000786"/>
</kw>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-03-14T03:35:37.408610" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.408749" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.408886" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409017" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409166" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409347" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409483" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409619" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409751" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.409888" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.410026" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.410172" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.410307" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.410452" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.410887" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.411037" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.411186" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.411331" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg time="2024-03-14T03:35:37.411473" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2024-03-14T03:35:37.408116" elapsed="0.003460"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T03:35:37.405999" elapsed="0.005656"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="17">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T03:35:37.428754" level="INFO">Running command 'rfswarm-reporter -v 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T03:35:39.602581" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version v1.3.0 </msg>
<var>${result}</var>
<arg>${cmd_reporter} -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T03:35:37.412093" elapsed="2.190533"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:39.602908" elapsed="0.000321"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:39.603358" elapsed="0.000148"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:39.603607" elapsed="0.000124"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T03:35:37.411741" elapsed="2.192131"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="25">
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T03:35:39.606585" level="INFO">Running command 'rfswarm-reporter -h 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T03:35:40.441343" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version v1.3.0 
usage: rfswarm-reporter [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                        [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  -h, -...</msg>
<var>${result}</var>
<arg>${cmd_reporter} -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T03:35:39.604573" elapsed="0.836818"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:40.441693" elapsed="0.000342"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:40.442146" elapsed="0.000192"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T03:35:39.604157" elapsed="0.838337"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="32">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:40.443193" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.443607" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:40.443489" elapsed="0.000140"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.443821" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:40.443721" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.444105" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:40.443934" elapsed="0.000192"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:40.444397" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:40.444221" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.444759" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:40.444544" elapsed="0.000281"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.445108" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:40.444925" elapsed="0.000205"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:40.445344" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:40.445218" elapsed="0.000175"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.445636" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:40.445489" elapsed="0.000212"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.445954" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:40.445797" elapsed="0.000178"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:40.446194" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:40.446066" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:40.446461" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:40.446333" elapsed="0.000262"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T03:35:40.448779" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T03:35:45.404242" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T03:35:40.446702" elapsed="4.957584"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.404894" level="INFO">result: 
</msg>
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:45.404583" elapsed="0.000398"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:45.405174" elapsed="0.000132"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:45.405673" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:45.405463" elapsed="0.000274"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T03:35:40.442765" elapsed="4.963093"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="52">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:45.406672" elapsed="0.000183"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.407104" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:45.406996" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.407385" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:45.407254" elapsed="0.000150"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.407651" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:45.407491" elapsed="0.000180"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:45.407874" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:45.407757" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:45.408000" elapsed="0.000167"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.408530" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:45.408335" elapsed="0.000216"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:45.408956" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:45.408635" elapsed="0.000365"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.409215" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:45.409089" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.409623" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:45.409444" elapsed="0.000199"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:45.409876" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:45.409726" elapsed="0.000192"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:45.410123" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:45.410002" elapsed="0.000183"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T03:35:45.412547" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T03:35:51.469286" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T03:35:45.410355" elapsed="6.058980"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.469968" level="INFO">
</msg>
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:51.469641" elapsed="0.000421"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:51.470263" elapsed="0.000131"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:51.470715" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:51.470489" elapsed="0.000274"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" start="2024-03-14T03:35:45.406165" elapsed="6.064715"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="72">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:51.471565" elapsed="0.000193"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.471973" level="INFO">${testdata} = Issue-#144</msg>
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:51.471863" elapsed="0.000130"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.472192" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:51.472090" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.472479" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:51.472306" elapsed="0.000193"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:51.472709" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:51.472585" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.472973" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:51.472843" elapsed="0.000194"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.473305" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:51.473131" elapsed="0.000195"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:51.473560" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:51.473422" elapsed="0.000184"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.473869" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:51.473715" elapsed="0.000233"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.474232" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:51.474066" elapsed="0.000195"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:51.474473" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:51.474350" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:51.474735" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:51.474609" elapsed="0.000191"/>
</kw>
<kw name="Run" owner="OperatingSystem">
<msg time="2024-03-14T03:35:51.477175" level="INFO">Running command 'rfswarm-reporter -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg time="2024-03-14T03:35:56.508930" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>${cmd_reporter} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="PASS" start="2024-03-14T03:35:51.474907" elapsed="5.034067"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.509584" level="INFO">
</msg>
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:56.509265" elapsed="0.000408"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-03-14T03:35:56.509803" elapsed="0.000147"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:56.510261" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:56.510044" elapsed="0.000269"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" start="2024-03-14T03:35:51.471138" elapsed="5.039374"/>
</test>
<status status="PASS" start="2024-03-14T03:35:37.380260" elapsed="19.130875"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="20">
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.772817" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T03:35:56.771963" elapsed="0.000884"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.773160" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:56.772963" elapsed="0.000259"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.773803" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T03:35:56.773560" elapsed="0.000267"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.774193" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T03:35:56.773947" elapsed="0.000267"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.775255" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:56.774335" elapsed="0.000959"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:56.773347" elapsed="0.002014"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.775600" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:56.775460" elapsed="0.000160"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.776505" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:56.776337" elapsed="0.000203"/>
</kw>
<kw name="Set Confidence">
<msg time="2024-03-14T03:35:56.778918" level="FAIL">No keyword with name 'Set Confidence' found.</msg>
<arg>0.9</arg>
<status status="FAIL" start="2024-03-14T03:35:56.778886" elapsed="0.000078">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Start Process" owner="Process">
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:56.779090" elapsed="0.000018"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:56.779226" elapsed="0.000017"/>
</kw>
<kw name="Set Screenshot Folder">
<arg>${OUTPUT DIR}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:56.781533" elapsed="0.000020"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:56.783815" elapsed="0.000020"/>
</kw>
<arg>@{appargs}</arg>
<status status="FAIL" start="2024-03-14T03:35:56.776073" elapsed="0.007895">No keyword with name 'Set Confidence' found.</status>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="FAIL" start="2024-03-14T03:35:56.775723" elapsed="0.008291">No keyword with name 'Set Confidence' found.</status>
</kw>
<status status="FAIL" start="2024-03-14T03:35:56.771466" elapsed="0.012642">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<status status="NOT RUN" start="2024-03-14T03:35:56.784273" elapsed="0.000020"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.785028" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:56.784877" elapsed="0.000173"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:56.785321" elapsed="0.000017"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:56.785495" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:56.785400" elapsed="0.000141"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:56.785653" elapsed="0.000015"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:56.785778" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:56.785567" elapsed="0.000336"/>
</branch>
<status status="NOT RUN" start="2024-03-14T03:35:56.785385" elapsed="0.000545"/>
</if>
<status status="NOT RUN" start="2024-03-14T03:35:56.785147" elapsed="0.000812"/>
</branch>
<status status="PASS" start="2024-03-14T03:35:56.785119" elapsed="0.000862"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:56.786231" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:56.786081" elapsed="0.000184"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.339368" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:35:56.786363" elapsed="0.553149"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:56.784629" elapsed="0.555024"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T03:35:56.770772" elapsed="0.568960">No keyword with name 'Set Confidence' found.</status>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="26">
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.341930" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T03:35:57.341343" elapsed="0.000624"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.342378" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': "No keyword with name 'Set Confidence' found.", '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:57.342107" elapsed="0.000366"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.343221" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T03:35:57.342911" elapsed="0.000335"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.343560" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T03:35:57.343357" elapsed="0.000225"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.343910" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.343695" elapsed="0.000249"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:57.342634" elapsed="0.001364"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.344218" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.344087" elapsed="0.000151"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.345012" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.344851" elapsed="0.000195"/>
</kw>
<kw name="Set Confidence">
<msg time="2024-03-14T03:35:57.347437" level="FAIL">No keyword with name 'Set Confidence' found.</msg>
<arg>0.9</arg>
<status status="FAIL" start="2024-03-14T03:35:57.347409" elapsed="0.000062">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Start Process" owner="Process">
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.347580" elapsed="0.000018"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.347714" elapsed="0.000017"/>
</kw>
<kw name="Set Screenshot Folder">
<arg>${OUTPUT DIR}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.350024" elapsed="0.000019"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:57.352289" elapsed="0.000018"/>
</kw>
<arg>@{appargs}</arg>
<status status="FAIL" start="2024-03-14T03:35:57.344590" elapsed="0.007801">No keyword with name 'Set Confidence' found.</status>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="FAIL" start="2024-03-14T03:35:57.344337" elapsed="0.008096">No keyword with name 'Set Confidence' found.</status>
</kw>
<status status="FAIL" start="2024-03-14T03:35:57.340928" elapsed="0.011587">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.352648" elapsed="0.000019"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.352805" elapsed="0.000017"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.353456" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.353324" elapsed="0.000154"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.353773" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.353943" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:57.353855" elapsed="0.000134"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.354105" elapsed="0.000015"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.354231" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:57.354014" elapsed="0.000260"/>
</branch>
<status status="NOT RUN" start="2024-03-14T03:35:57.353842" elapsed="0.000453"/>
</if>
<status status="NOT RUN" start="2024-03-14T03:35:57.353618" elapsed="0.000701"/>
</branch>
<status status="PASS" start="2024-03-14T03:35:57.353600" elapsed="0.000742"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.354577" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.354436" elapsed="0.000175"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.864258" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:35:57.354704" elapsed="0.509697"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:57.353102" elapsed="0.511437"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T03:35:57.340247" elapsed="0.524365">No keyword with name 'Set Confidence' found.</status>
</test>
<test id="s1-s2-t3" name="First Run" line="33">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:57.865473" elapsed="0.000292"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.866058" level="INFO">${testdata} = Issue-#147</msg>
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.865915" elapsed="0.000172"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.866357" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.866221" elapsed="0.000164"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.866771" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.866523" elapsed="0.000300"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:57.867069" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:57.866921" elapsed="0.000192"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:57.867208" elapsed="0.000174"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.867659" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.867486" elapsed="0.000194"/>
</kw>
<kw name="Should Exist" owner="OperatingSystem">
<msg time="2024-03-14T03:35:57.867910" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<status status="PASS" start="2024-03-14T03:35:57.867784" elapsed="0.000171"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.868188" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:57.868054" elapsed="0.000205"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.868539" level="INFO">${epoch} = 1710387357</msg>
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2024-03-14T03:35:57.868377" elapsed="0.000182"/>
</kw>
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.869391" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T03:35:57.868979" elapsed="0.000437"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.869700" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': "No keyword with name 'Set Confidence' found.", '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': ['-i', 'blank_1710387357.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:57.869514" elapsed="0.000305"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.870361" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T03:35:57.870148" elapsed="0.000236"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.870676" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T03:35:57.870494" elapsed="0.000204"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.871019" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.870809" elapsed="0.000243"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:57.869942" elapsed="0.001164"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.871324" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.871195" elapsed="0.000151"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.873298" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.873135" elapsed="0.000198"/>
</kw>
<kw name="Set Confidence">
<msg time="2024-03-14T03:35:57.875568" level="FAIL">No keyword with name 'Set Confidence' found.</msg>
<arg>0.9</arg>
<status status="FAIL" start="2024-03-14T03:35:57.875544" elapsed="0.000058">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Start Process" owner="Process">
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.875709" elapsed="0.000017"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.875842" elapsed="0.000016"/>
</kw>
<kw name="Set Screenshot Folder">
<arg>${OUTPUT DIR}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.878133" elapsed="0.000017"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:57.880397" elapsed="0.000017"/>
</kw>
<arg>@{appargs}</arg>
<status status="FAIL" start="2024-03-14T03:35:57.872864" elapsed="0.007634">No keyword with name 'Set Confidence' found.</status>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="FAIL" start="2024-03-14T03:35:57.871445" elapsed="0.009094">No keyword with name 'Set Confidence' found.</status>
</kw>
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<status status="FAIL" start="2024-03-14T03:35:57.868698" elapsed="0.011925">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.880735" elapsed="0.000017"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.881388" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:57.881259" elapsed="0.000150"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.881617" elapsed="0.000017"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.881777" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:57.881691" elapsed="0.000129"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:57.881928" elapsed="0.000015"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:57.882049" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:57.881843" elapsed="0.000248"/>
</branch>
<status status="NOT RUN" start="2024-03-14T03:35:57.881679" elapsed="0.000432"/>
</if>
<status status="NOT RUN" start="2024-03-14T03:35:57.881475" elapsed="0.000660"/>
</branch>
<status status="PASS" start="2024-03-14T03:35:57.881459" elapsed="0.000698"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:57.882383" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:57.882248" elapsed="0.000168"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.407681" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:35:57.882570" elapsed="0.525235"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:57.881036" elapsed="0.526874"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T03:35:57.865042" elapsed="0.542923">No keyword with name 'Set Confidence' found.</status>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="50">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}TAGS: ${TEST TAGS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-03-14T03:35:58.408879" elapsed="0.000280"/>
</kw>
<kw name="Open GUI">
<kw name="Get Variables" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.410199" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/User...</msg>
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<status status="PASS" start="2024-03-14T03:35:58.409667" elapsed="0.000558"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.410513" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${cmd_reporter}': 'rfswarm-reporter', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': "No keyword with name 'Set Confidence' found.", '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/h1/8hndypj13nsbj5pn4xsnv1tm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'Issue #150', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-03-14T03:35:58.410324" elapsed="0.000252"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.411127" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-03-14T03:35:58.410890" elapsed="0.000261"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.411429" level="INFO">${os} = Darwin</msg>
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-03-14T03:35:58.411255" elapsed="0.000205"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.411771" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:58.411569" elapsed="0.000233"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:58.410691" elapsed="0.001163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.412064" level="INFO">${keyword} = Open GUI macos</msg>
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:58.411939" elapsed="0.000144"/>
</kw>
<kw name="Run Keyword" owner="BuiltIn">
<kw name="Open GUI macos">
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.412788" level="INFO">${platform} = macos</msg>
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:58.412637" elapsed="0.000184"/>
</kw>
<kw name="Set Confidence">
<msg time="2024-03-14T03:35:58.426269" level="FAIL">No keyword with name 'Set Confidence' found.</msg>
<arg>0.9</arg>
<status status="FAIL" start="2024-03-14T03:35:58.426233" elapsed="0.000074">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Start Process" owner="Process">
<var>${process}</var>
<arg>${cmd_reporter}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.426422" elapsed="0.000017"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.426553" elapsed="0.000017"/>
</kw>
<kw name="Set Screenshot Folder">
<arg>${OUTPUT DIR}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.428790" elapsed="0.000018"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:58.430961" elapsed="0.000017"/>
</kw>
<arg>@{appargs}</arg>
<status status="FAIL" start="2024-03-14T03:35:58.412406" elapsed="0.018656">No keyword with name 'Set Confidence' found.</status>
</kw>
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="FAIL" start="2024-03-14T03:35:58.412177" elapsed="0.018924">No keyword with name 'Set Confidence' found.</status>
</kw>
<status status="FAIL" start="2024-03-14T03:35:58.409357" elapsed="0.021824">No keyword with name 'Set Confidence' found.</status>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.431317" elapsed="0.000018"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.431461" elapsed="0.000016"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:58.433775" elapsed="0.000016"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.433922" elapsed="0.000017"/>
</kw>
<kw name="Click To The Below Of Image">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.436048" elapsed="0.000018"/>
</kw>
<kw name="Type">
<arg>Issue #149</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.437617" elapsed="0.000017"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.437769" elapsed="0.000016"/>
</kw>
<kw name="Take A Screenshot">
<status status="NOT RUN" start="2024-03-14T03:35:58.439931" elapsed="0.000017"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.440154" elapsed="0.000019"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.440340" elapsed="0.000017"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.440479" elapsed="0.000016"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.440587" elapsed="0.000016"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.440771" elapsed="0.000017"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.440948" elapsed="0.000015"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.441083" elapsed="0.000015"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.441255" elapsed="0.000015"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.441387" elapsed="0.000015"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.441490" elapsed="0.000015"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.441630" elapsed="0.000015"/>
</kw>
<kw name="Wait For Status">
<arg>SavedXHTMLReport</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.441754" elapsed="0.000015"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.442388" level="INFO">${keyword} = Close GUI macos</msg>
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-03-14T03:35:58.442255" elapsed="0.000154"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" owner="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.442614" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" owner="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.442833" elapsed="0.000034"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:58.442684" elapsed="0.000245"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" owner="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" start="2024-03-14T03:35:58.443089" elapsed="0.000015"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" start="2024-03-14T03:35:58.443205" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-03-14T03:35:58.442972" elapsed="0.000275"/>
</branch>
<status status="NOT RUN" start="2024-03-14T03:35:58.442672" elapsed="0.000595"/>
</if>
<status status="NOT RUN" start="2024-03-14T03:35:58.442472" elapsed="0.000818"/>
</branch>
<status status="PASS" start="2024-03-14T03:35:58.442456" elapsed="0.000854"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-03-14T03:35:58.443534" level="INFO">${process} = None</msg>
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-03-14T03:35:58.443397" elapsed="0.000170"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-14T03:35:59.017813" level="INFO">Slept 500 milliseconds.</msg>
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-14T03:35:58.443655" elapsed="0.574275"/>
</kw>
<status status="PASS" start="2024-03-14T03:35:58.442036" elapsed="0.575999"/>
</kw>
<tag>Issue #149</tag>
<tag>Issue #150</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" start="2024-03-14T03:35:58.408385" elapsed="0.609705">No keyword with name 'Set Confidence' found.</status>
</test>
<status status="FAIL" start="2024-03-14T03:35:56.511766" elapsed="2.506788"/>
</suite>
<status status="FAIL" start="2024-03-14T03:35:37.361160" elapsed="21.657986"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="0" fail="1" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="0" fail="1" skip="0">Issue #150</stat>
<stat pass="5" fail="4" skip="0">macos-latest</stat>
<stat pass="5" fail="4" skip="0">ubuntu-latest</stat>
<stat pass="5" fail="4" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="5" fail="4" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="0" fail="4" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
<msg time="2024-03-14T03:35:56.526403" level="ERROR">Error in file '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot' on line 7: Importing library 'ImageHorizonLibrary' failed: ImageHorizonLibraryError: There is something wrong pyautogui or it is not installed.
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/ImageHorizonLibrary/__init__.py", line 10, in &lt;module&gt;
    raise ImageHorizonLibraryError('There is something wrong pyautogui or '
PYTHONPATH:
  /Library/Frameworks/Python.framework/Versions/3.12/bin
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python312.zip
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/lib-dynload
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages</msg>
</errors>
</robot>
