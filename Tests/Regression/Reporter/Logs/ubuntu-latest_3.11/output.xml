<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on linux)" generated="20230602 12:57:57.157" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 12:57:57.187" endtime="20230602 12:57:57.188"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 12:57:57.188" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.188" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 12:57:57.188" endtime="20230602 12:57:57.188"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.189" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 12:57:57.190" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 12:57:57.188" endtime="20230602 12:57:57.190"/>
</kw>
<status status="PASS" starttime="20230602 12:57:57.187" endtime="20230602 12:57:57.191"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 12:57:57.192" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 12:57:59.042" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230602 12:57:57.191" endtime="20230602 12:57:59.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 12:57:59.042" endtime="20230602 12:57:59.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:57:59.043" endtime="20230602 12:57:59.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:57:59.043" endtime="20230602 12:57:59.043"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:57:57.191" endtime="20230602 12:57:59.043"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 12:57:59.044" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 12:57:59.818" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230602 12:57:59.044" endtime="20230602 12:57:59.818"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 12:57:59.818" endtime="20230602 12:57:59.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:57:59.819" endtime="20230602 12:57:59.819"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:57:59.043" endtime="20230602 12:57:59.819"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:57:59.819" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 12:57:59.819" endtime="20230602 12:57:59.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:57:59.820" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:57:59.820" endtime="20230602 12:57:59.820"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:57:59.820" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 12:57:59.820" endtime="20230602 12:57:59.820"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:57:59.820" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:57:59.820" endtime="20230602 12:57:59.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:57:59.821" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 12:57:59.821" endtime="20230602 12:57:59.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:57:59.821" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:57:59.821" endtime="20230602 12:57:59.821"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:57:59.821" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:57:59.821" endtime="20230602 12:57:59.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:57:59.822" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:57:59.821" endtime="20230602 12:57:59.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:57:59.822" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:57:59.822" endtime="20230602 12:57:59.822"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:57:59.822" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:57:59.822" endtime="20230602 12:57:59.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:57:59.822" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:57:59.822" endtime="20230602 12:57:59.822"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 12:57:59.823" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 12:58:03.257" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 12:57:59.823" endtime="20230602 12:58:03.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:03.257" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230602 12:58:03.257" endtime="20230602 12:58:03.257"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:03.258" endtime="20230602 12:58:03.258"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:03.258" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:03.258" endtime="20230602 12:58:03.258"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:57:59.819" endtime="20230602 12:58:03.258"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:03.259" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 12:58:03.259" endtime="20230602 12:58:03.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:03.259" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:03.259" endtime="20230602 12:58:03.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:03.259" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 12:58:03.259" endtime="20230602 12:58:03.259"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:03.259" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:03.259" endtime="20230602 12:58:03.259"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 12:58:03.259" endtime="20230602 12:58:03.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:03.260" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:03.260" endtime="20230602 12:58:03.260"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:03.260" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:03.260" endtime="20230602 12:58:03.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:03.260" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:03.260" endtime="20230602 12:58:03.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:03.261" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:58:03.261" endtime="20230602 12:58:03.261"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:03.261" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:03.261" endtime="20230602 12:58:03.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:03.261" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:58:03.261" endtime="20230602 12:58:03.261"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 12:58:03.262" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 12:58:07.246" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 12:58:03.261" endtime="20230602 12:58:07.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:07.247" level="INFO">
</msg>
<status status="PASS" starttime="20230602 12:58:07.246" endtime="20230602 12:58:07.247"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:07.247" endtime="20230602 12:58:07.247"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:07.247" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:07.247" endtime="20230602 12:58:07.247"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:58:03.258" endtime="20230602 12:58:07.247"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:07.248" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 12:58:07.248" endtime="20230602 12:58:07.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:07.248" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:07.248" endtime="20230602 12:58:07.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:07.248" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 12:58:07.248" endtime="20230602 12:58:07.248"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:07.248" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:07.248" endtime="20230602 12:58:07.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:07.249" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 12:58:07.249" endtime="20230602 12:58:07.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:07.249" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:07.249" endtime="20230602 12:58:07.249"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:07.249" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:07.249" endtime="20230602 12:58:07.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:07.249" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:07.249" endtime="20230602 12:58:07.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:07.250" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:58:07.250" endtime="20230602 12:58:07.250"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:07.250" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:07.250" endtime="20230602 12:58:07.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:07.250" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 12:58:07.250" endtime="20230602 12:58:07.250"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 12:58:07.251" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 12:58:10.448" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 12:58:07.250" endtime="20230602 12:58:10.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:10.448" level="INFO">
</msg>
<status status="PASS" starttime="20230602 12:58:10.448" endtime="20230602 12:58:10.448"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:10.449" endtime="20230602 12:58:10.449"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:10.449" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:10.449" endtime="20230602 12:58:10.449"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230602 12:58:07.247" endtime="20230602 12:58:10.449"/>
</test>
<status status="PASS" starttime="20230602 12:57:57.174" endtime="20230602 12:58:10.450"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 12:58:10.741" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 12:58:10.740" endtime="20230602 12:58:10.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:10.741" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f7022792d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 12:58:10.741" endtime="20230602 12:58:10.741"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 12:58:10.742" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 12:58:10.741" endtime="20230602 12:58:10.742"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:58:10.742" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 12:58:10.742" endtime="20230602 12:58:10.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:10.743" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:10.742" endtime="20230602 12:58:10.743"/>
</kw>
<status status="PASS" starttime="20230602 12:58:10.741" endtime="20230602 12:58:10.743"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:10.743" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:10.743" endtime="20230602 12:58:10.743"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:10.747" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:10.746" endtime="20230602 12:58:10.747"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 12:58:10.747" endtime="20230602 12:58:10.747"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 12:58:10.747" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 12:58:10.752" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:10.747" endtime="20230602 12:58:10.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:10.753" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:10.753" endtime="20230602 12:58:10.753"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 12:58:10.753" endtime="20230602 12:58:10.753"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:10.754" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:10.753" endtime="20230602 12:58:10.883"/>
</kw>
<status status="PASS" starttime="20230602 12:58:10.746" endtime="20230602 12:58:10.883"/>
</kw>
<status status="PASS" starttime="20230602 12:58:10.743" endtime="20230602 12:58:10.883"/>
</kw>
<status status="PASS" starttime="20230602 12:58:10.740" endtime="20230602 12:58:10.883"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:10.884" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 12:58:10.883" endtime="20230602 12:58:10.884"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:10.884" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 12:58:10.884" endtime="20230602 12:58:10.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:10.884" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:10.884" endtime="20230602 12:58:10.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:10.884" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:10.884" endtime="20230602 12:58:10.884"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:22.707" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:10.884" endtime="20230602 12:58:22.708"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:22.996" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:22.996" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 12:58:22.708" endtime="20230602 12:58:22.996"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:23.283" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:23.283" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:22.997" endtime="20230602 12:58:23.387"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:23.888" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:23.387" endtime="20230602 12:58:23.888"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:23.888" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:23.888" endtime="20230602 12:58:24.013"/>
</kw>
<status status="PASS" starttime="20230602 12:58:10.883" endtime="20230602 12:58:24.014"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:24.014" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:24.014" endtime="20230602 12:58:24.014"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:24.015" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 12:58:24.015" endtime="20230602 12:58:24.015"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:24.300" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 12:58:24.300" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 12:58:24.018" endtime="20230602 12:58:24.402"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:24.402" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:24.402" endtime="20230602 12:58:24.525"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:25.026" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:24.526" endtime="20230602 12:58:25.026"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 12:58:25.027" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 12:58:25.027" level="INFO">Process completed.</msg>
<msg timestamp="20230602 12:58:25.027" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 12:58:25.027" endtime="20230602 12:58:25.027"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:25.027" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 12:58:25.027" endtime="20230602 12:58:25.027"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:25.029" level="INFO"/>
<status status="PASS" starttime="20230602 12:58:25.028" endtime="20230602 12:58:25.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:25.029" endtime="20230602 12:58:25.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 12:58:25.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 12:58:25.029" endtime="20230602 12:58:25.030"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.028" endtime="20230602 12:58:25.030"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.027" endtime="20230602 12:58:25.030"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 12:58:25.030" endtime="20230602 12:58:25.030"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:25.030" endtime="20230602 12:58:25.031"/>
</branch>
<status status="PASS" starttime="20230602 12:58:25.027" endtime="20230602 12:58:25.031"/>
</if>
<status status="PASS" starttime="20230602 12:58:25.026" endtime="20230602 12:58:25.031"/>
</kw>
<status status="PASS" starttime="20230602 12:58:24.018" endtime="20230602 12:58:25.031"/>
</kw>
<status status="PASS" starttime="20230602 12:58:24.015" endtime="20230602 12:58:25.031"/>
</kw>
<status status="PASS" starttime="20230602 12:58:24.015" endtime="20230602 12:58:25.031"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.031"/>
</branch>
<status status="PASS" starttime="20230602 12:58:24.015" endtime="20230602 12:58:25.031"/>
</if>
<status status="PASS" starttime="20230602 12:58:24.014" endtime="20230602 12:58:25.031"/>
</branch>
<status status="PASS" starttime="20230602 12:58:24.014" endtime="20230602 12:58:25.031"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:25.032" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 12:58:25.031" endtime="20230602 12:58:25.032"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:25.532" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:25.032" endtime="20230602 12:58:25.532"/>
</kw>
<status status="PASS" starttime="20230602 12:58:24.014" endtime="20230602 12:58:25.534"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:58:10.739" endtime="20230602 12:58:25.534"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 12:58:25.536" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 12:58:25.536" endtime="20230602 12:58:25.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:25.537" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f7022792d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 12:58:25.536" endtime="20230602 12:58:25.537"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 12:58:25.537" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 12:58:25.537" endtime="20230602 12:58:25.537"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:58:25.538" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 12:58:25.537" endtime="20230602 12:58:25.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:25.538" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:25.538" endtime="20230602 12:58:25.538"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.537" endtime="20230602 12:58:25.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:25.538" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:25.538" endtime="20230602 12:58:25.538"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:25.542" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:25.542" endtime="20230602 12:58:25.542"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 12:58:25.542" endtime="20230602 12:58:25.543"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 12:58:25.543" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 12:58:25.548" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:25.543" endtime="20230602 12:58:25.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:25.549" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:25.549" endtime="20230602 12:58:25.549"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 12:58:25.549" endtime="20230602 12:58:25.549"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:25.550" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:25.549" endtime="20230602 12:58:25.681"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.542" endtime="20230602 12:58:25.681"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.539" endtime="20230602 12:58:25.681"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.535" endtime="20230602 12:58:25.681"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:25.682" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 12:58:25.681" endtime="20230602 12:58:25.682"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:25.682" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 12:58:25.682" endtime="20230602 12:58:25.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:25.682" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:25.682" endtime="20230602 12:58:25.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:25.682" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:25.682" endtime="20230602 12:58:25.682"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:36.744" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:25.682" endtime="20230602 12:58:36.744"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:37.037" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:37.037" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 12:58:36.744" endtime="20230602 12:58:37.037"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:37.332" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:37.332" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:37.037" endtime="20230602 12:58:37.434"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:37.935" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:37.434" endtime="20230602 12:58:37.935"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:37.935" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:37.935" endtime="20230602 12:58:38.062"/>
</kw>
<status status="PASS" starttime="20230602 12:58:25.681" endtime="20230602 12:58:38.062"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:38.063" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230602 12:58:38.062" endtime="20230602 12:58:38.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:38.063" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230602 12:58:38.063" endtime="20230602 12:58:38.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:38.063" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:38.063" endtime="20230602 12:58:38.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:38.063" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:38.063" endtime="20230602 12:58:38.063"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:38.350" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230602 12:58:38.063" endtime="20230602 12:58:38.350"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:38.643" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230602 12:58:38.643" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230602 12:58:38.350" endtime="20230602 12:58:38.643"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:38.940" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230602 12:58:38.940" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230602 12:58:38.643" endtime="20230602 12:58:39.043"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:39.543" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:39.043" endtime="20230602 12:58:39.543"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:39.544" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:39.543" endtime="20230602 12:58:39.670"/>
</kw>
<status status="PASS" starttime="20230602 12:58:38.062" endtime="20230602 12:58:39.671"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:39.671" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:39.671" endtime="20230602 12:58:39.671"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:39.672" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 12:58:39.671" endtime="20230602 12:58:39.672"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:39.963" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 12:58:39.963" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 12:58:39.675" endtime="20230602 12:58:40.066"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:40.066" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:40.066" endtime="20230602 12:58:40.190"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:40.691" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:40.190" endtime="20230602 12:58:40.691"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 12:58:40.692" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 12:58:40.692" level="INFO">Process completed.</msg>
<msg timestamp="20230602 12:58:40.692" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 12:58:40.691" endtime="20230602 12:58:40.692"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:40.692" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 12:58:40.692" endtime="20230602 12:58:40.692"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:40.693" level="INFO"/>
<status status="PASS" starttime="20230602 12:58:40.693" endtime="20230602 12:58:40.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:40.694" endtime="20230602 12:58:40.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 12:58:40.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 12:58:40.694" endtime="20230602 12:58:40.695"/>
</kw>
<status status="PASS" starttime="20230602 12:58:40.693" endtime="20230602 12:58:40.695"/>
</kw>
<status status="PASS" starttime="20230602 12:58:40.692" endtime="20230602 12:58:40.695"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 12:58:40.695" endtime="20230602 12:58:40.695"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 12:58:40.695" endtime="20230602 12:58:40.695"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:40.695" endtime="20230602 12:58:40.695"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 12:58:40.695" endtime="20230602 12:58:40.696"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:40.695" endtime="20230602 12:58:40.696"/>
</branch>
<status status="PASS" starttime="20230602 12:58:40.692" endtime="20230602 12:58:40.696"/>
</if>
<status status="PASS" starttime="20230602 12:58:40.691" endtime="20230602 12:58:40.696"/>
</kw>
<status status="PASS" starttime="20230602 12:58:39.675" endtime="20230602 12:58:40.696"/>
</kw>
<status status="PASS" starttime="20230602 12:58:39.672" endtime="20230602 12:58:40.696"/>
</kw>
<status status="PASS" starttime="20230602 12:58:39.672" endtime="20230602 12:58:40.696"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 12:58:40.696" endtime="20230602 12:58:40.696"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:40.696" endtime="20230602 12:58:40.696"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:40.696" endtime="20230602 12:58:40.696"/>
</branch>
<status status="PASS" starttime="20230602 12:58:39.672" endtime="20230602 12:58:40.696"/>
</if>
<status status="PASS" starttime="20230602 12:58:39.671" endtime="20230602 12:58:40.696"/>
</branch>
<status status="PASS" starttime="20230602 12:58:39.671" endtime="20230602 12:58:40.696"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:40.696" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 12:58:40.696" endtime="20230602 12:58:40.696"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:41.197" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:40.696" endtime="20230602 12:58:41.197"/>
</kw>
<status status="PASS" starttime="20230602 12:58:39.671" endtime="20230602 12:58:41.197"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:58:25.534" endtime="20230602 12:58:41.197"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.198" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230602 12:58:41.198" endtime="20230602 12:58:41.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.198" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:41.198" endtime="20230602 12:58:41.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.199" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230602 12:58:41.199" endtime="20230602 12:58:41.199"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:41.199" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:41.199" endtime="20230602 12:58:41.199"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 12:58:41.199" endtime="20230602 12:58:41.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.200" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:41.199" endtime="20230602 12:58:41.200"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 12:58:41.200" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 12:58:41.200" endtime="20230602 12:58:41.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:41.200" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 12:58:41.200" endtime="20230602 12:58:41.200"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230602 12:58:41.200" level="INFO">${epoch} = 1685710721</msg>
<status status="PASS" starttime="20230602 12:58:41.200" endtime="20230602 12:58:41.201"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 12:58:41.201" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 12:58:41.201" endtime="20230602 12:58:41.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:41.202" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f7022792d90&gt;, '@{appargs}': ['-i', 'blank_1685710721.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 12:58:41.202" endtime="20230602 12:58:41.202"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 12:58:41.202" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 12:58:41.202" endtime="20230602 12:58:41.202"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:58:41.203" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 12:58:41.202" endtime="20230602 12:58:41.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:41.203" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:41.203" endtime="20230602 12:58:41.203"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.202" endtime="20230602 12:58:41.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.203" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:41.203" endtime="20230602 12:58:41.203"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:41.207" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:41.207" endtime="20230602 12:58:41.207"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 12:58:41.207" endtime="20230602 12:58:41.207"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 12:58:41.208" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685710721.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg timestamp="20230602 12:58:41.212" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:41.207" endtime="20230602 12:58:41.212"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:41.213" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:41.213" endtime="20230602 12:58:41.213"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 12:58:41.213" endtime="20230602 12:58:41.213"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:41.214" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:41.213" endtime="20230602 12:58:41.336"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.206" endtime="20230602 12:58:41.336"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.203" endtime="20230602 12:58:41.336"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.201" endtime="20230602 12:58:41.336"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:41.337" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 12:58:41.337" endtime="20230602 12:58:41.337"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:41.337" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 12:58:41.337" endtime="20230602 12:58:41.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:41.337" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:41.337" endtime="20230602 12:58:41.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:41.338" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:41.338" endtime="20230602 12:58:41.338"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:44.000" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:41.338" endtime="20230602 12:58:44.000"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:44.284" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:44.285" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 12:58:44.000" endtime="20230602 12:58:44.285"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:44.572" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:44.572" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:44.285" endtime="20230602 12:58:44.675"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:45.175" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:44.675" endtime="20230602 12:58:45.176"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:45.176" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:45.176" endtime="20230602 12:58:45.301"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.337" endtime="20230602 12:58:45.301"/>
</kw>
<status status="PASS" starttime="20230602 12:58:41.336" endtime="20230602 12:58:45.301"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:45.302" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:45.301" endtime="20230602 12:58:45.302"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:45.302" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:45.302"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:45.602" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 12:58:45.602" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 12:58:45.306" endtime="20230602 12:58:45.707"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:45.708" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:45.708" endtime="20230602 12:58:45.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:46.330" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:45.830" endtime="20230602 12:58:46.330"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 12:58:46.331" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 12:58:46.331" level="INFO">Process completed.</msg>
<msg timestamp="20230602 12:58:46.331" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 12:58:46.331" endtime="20230602 12:58:46.331"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:58:46.331" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 12:58:46.331" endtime="20230602 12:58:46.331"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:46.333" level="INFO"/>
<status status="PASS" starttime="20230602 12:58:46.332" endtime="20230602 12:58:46.333"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 12:58:46.333" endtime="20230602 12:58:46.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 12:58:46.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 12:58:46.333" endtime="20230602 12:58:46.334"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.332" endtime="20230602 12:58:46.334"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.332" endtime="20230602 12:58:46.334"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 12:58:46.334" endtime="20230602 12:58:46.334"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 12:58:46.334" endtime="20230602 12:58:46.334"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:46.334" endtime="20230602 12:58:46.334"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 12:58:46.334" endtime="20230602 12:58:46.334"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:46.334" endtime="20230602 12:58:46.334"/>
</branch>
<status status="PASS" starttime="20230602 12:58:46.332" endtime="20230602 12:58:46.335"/>
</if>
<status status="PASS" starttime="20230602 12:58:46.330" endtime="20230602 12:58:46.335"/>
</kw>
<status status="PASS" starttime="20230602 12:58:45.305" endtime="20230602 12:58:46.335"/>
</kw>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:46.335"/>
</kw>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:46.335"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 12:58:46.335" endtime="20230602 12:58:46.335"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 12:58:46.335" endtime="20230602 12:58:46.335"/>
</kw>
<status status="NOT RUN" starttime="20230602 12:58:46.335" endtime="20230602 12:58:46.335"/>
</branch>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:46.335"/>
</if>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:46.335"/>
</branch>
<status status="PASS" starttime="20230602 12:58:45.302" endtime="20230602 12:58:46.335"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:46.335" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 12:58:46.335" endtime="20230602 12:58:46.335"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:46.836" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:46.336" endtime="20230602 12:58:46.836"/>
</kw>
<status status="PASS" starttime="20230602 12:58:45.301" endtime="20230602 12:58:46.836"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 12:58:41.198" endtime="20230602 12:58:46.836"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 12:58:46.838" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 12:58:46.837" endtime="20230602 12:58:46.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:46.838" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f7022792d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 12:58:46.838" endtime="20230602 12:58:46.838"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 12:58:46.839" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 12:58:46.838" endtime="20230602 12:58:46.839"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:58:46.839" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 12:58:46.839" endtime="20230602 12:58:46.839"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:46.839" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:46.839" endtime="20230602 12:58:46.840"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.838" endtime="20230602 12:58:46.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:46.840" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:46.840" endtime="20230602 12:58:46.840"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:46.844" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 12:58:46.843" endtime="20230602 12:58:46.844"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 12:58:46.844" endtime="20230602 12:58:46.844"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 12:58:46.844" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 12:58:46.849" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:46.844" endtime="20230602 12:58:46.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 12:58:46.850" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 12:58:46.849" endtime="20230602 12:58:46.850"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 12:58:46.850" endtime="20230602 12:58:46.850"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:46.850" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:46.850" endtime="20230602 12:58:46.974"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.843" endtime="20230602 12:58:46.974"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.840" endtime="20230602 12:58:46.974"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.837" endtime="20230602 12:58:46.974"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:46.975" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 12:58:46.974" endtime="20230602 12:58:46.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:46.975" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 12:58:46.975" endtime="20230602 12:58:46.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:46.975" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:46.975" endtime="20230602 12:58:46.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:46.975" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:46.975" endtime="20230602 12:58:46.975"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:58.055" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:46.975" endtime="20230602 12:58:58.055"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:58.388" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:58.388" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 12:58:58.055" endtime="20230602 12:58:58.388"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:58:58.676" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:58:58.676" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 12:58:58.388" endtime="20230602 12:58:58.778"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:58:59.279" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:58:58.779" endtime="20230602 12:58:59.279"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:58:59.280" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:58:59.279" endtime="20230602 12:58:59.406"/>
</kw>
<status status="PASS" starttime="20230602 12:58:46.974" endtime="20230602 12:58:59.406"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:58:59.407" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230602 12:58:59.406" endtime="20230602 12:58:59.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:58:59.407" level="INFO">${img} = reporter_ubuntu_section_report.png</msg>
<status status="PASS" starttime="20230602 12:58:59.407" endtime="20230602 12:58:59.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:59.407" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:58:59.407" endtime="20230602 12:58:59.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:58:59.407" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:58:59.407" endtime="20230602 12:58:59.407"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:58:59.707" level="INFO">Image "reporter_ubuntu_section_report.png" found at (49, 126)</msg>
<status status="PASS" starttime="20230602 12:58:59.407" endtime="20230602 12:58:59.707"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:58:59.999" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_report.png" found at Box(left=21, top=102, width=56, height=48)</msg>
<msg timestamp="20230602 12:58:59.999" level="INFO">@{coordinates} = [ 49 | 126 ]</msg>
<status status="PASS" starttime="20230602 12:58:59.707" endtime="20230602 12:58:59.999"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:00.300" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_report.png" found at Box(left=21, top=102, width=56, height=48)</msg>
<msg timestamp="20230602 12:59:00.300" level="INFO">Clicking image "reporter_ubuntu_section_report.png" in position (49, 126)</msg>
<status status="PASS" starttime="20230602 12:58:59.999" endtime="20230602 12:59:00.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:00.903" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:00.402" endtime="20230602 12:59:00.903"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:00.904" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:00.903" endtime="20230602 12:59:01.030"/>
</kw>
<status status="PASS" starttime="20230602 12:58:59.406" endtime="20230602 12:59:01.030"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:01.030" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:01.030" endtime="20230602 12:59:01.156"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:01.157" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230602 12:59:01.157" endtime="20230602 12:59:01.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:01.157" level="INFO">${img} = reporter_ubuntu_button_addsection.png</msg>
<status status="PASS" starttime="20230602 12:59:01.157" endtime="20230602 12:59:01.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:01.157" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:01.157" endtime="20230602 12:59:01.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:01.157" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:01.157" endtime="20230602 12:59:01.157"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:01.440" level="INFO">Image "reporter_ubuntu_button_addsection.png" found at (14, 96)</msg>
<status status="PASS" starttime="20230602 12:59:01.157" endtime="20230602 12:59:01.440"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:01.724" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230602 12:59:01.724" level="INFO">@{coordinates} = [ 14 | 96 ]</msg>
<status status="PASS" starttime="20230602 12:59:01.440" endtime="20230602 12:59:01.724"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:02.005" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230602 12:59:02.005" level="INFO">Clicking image "reporter_ubuntu_button_addsection.png" in position (14, 96)</msg>
<status status="PASS" starttime="20230602 12:59:01.724" endtime="20230602 12:59:02.108"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:02.608" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:02.108" endtime="20230602 12:59:02.609"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:02.609" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:02.609" endtime="20230602 12:59:02.736"/>
</kw>
<status status="PASS" starttime="20230602 12:59:01.156" endtime="20230602 12:59:02.736"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230602 12:59:03.033" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_sectionname.png" found at Box(left=864, top=518, width=112, height=21)</msg>
<msg timestamp="20230602 12:59:03.034" level="INFO">Clicking 1 time(s) at (920, 548) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230602 12:59:02.736" endtime="20230602 12:59:03.136"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230602 12:59:03.136" endtime="20230602 12:59:03.246"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:03.247" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230602 12:59:03.247" endtime="20230602 12:59:03.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:03.247" level="INFO">${img} = reporter_ubuntu_button_ok.png</msg>
<status status="PASS" starttime="20230602 12:59:03.247" endtime="20230602 12:59:03.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:03.247" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:03.247" endtime="20230602 12:59:03.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:03.248" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:03.248" endtime="20230602 12:59:03.248"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:03.531" level="INFO">Image "reporter_ubuntu_button_ok.png" found at (896, 589)</msg>
<status status="PASS" starttime="20230602 12:59:03.248" endtime="20230602 12:59:03.531"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:03.816" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230602 12:59:03.816" level="INFO">@{coordinates} = [ 896 | 589 ]</msg>
<status status="PASS" starttime="20230602 12:59:03.532" endtime="20230602 12:59:03.816"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:04.102" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230602 12:59:04.102" level="INFO">Clicking image "reporter_ubuntu_button_ok.png" in position (896, 589)</msg>
<status status="PASS" starttime="20230602 12:59:03.816" endtime="20230602 12:59:04.205"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:04.706" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:04.205" endtime="20230602 12:59:04.706"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:04.706" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:04.706" endtime="20230602 12:59:04.832"/>
</kw>
<status status="PASS" starttime="20230602 12:59:03.246" endtime="20230602 12:59:04.832"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:04.833" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:04.833" endtime="20230602 12:59:04.957"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:04.958" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230602 12:59:04.958" endtime="20230602 12:59:04.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:04.958" level="INFO">${img} = reporter_ubuntu_section_issue#149.png</msg>
<status status="PASS" starttime="20230602 12:59:04.958" endtime="20230602 12:59:04.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:04.958" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:04.958" endtime="20230602 12:59:04.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:04.959" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:04.958" endtime="20230602 12:59:04.959"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:05.244" level="INFO">Image "reporter_ubuntu_section_issue#149.png" found at (82, 281)</msg>
<status status="PASS" starttime="20230602 12:59:04.959" endtime="20230602 12:59:05.244"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:05.530" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_issue#149.png" found at Box(left=38, top=271, width=89, height=20)</msg>
<msg timestamp="20230602 12:59:05.531" level="INFO">@{coordinates} = [ 82 | 281 ]</msg>
<status status="PASS" starttime="20230602 12:59:05.244" endtime="20230602 12:59:05.531"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:05.816" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_issue#149.png" found at Box(left=38, top=271, width=89, height=20)</msg>
<msg timestamp="20230602 12:59:05.816" level="INFO">Clicking image "reporter_ubuntu_section_issue#149.png" in position (82, 281)</msg>
<status status="PASS" starttime="20230602 12:59:05.531" endtime="20230602 12:59:05.920"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:06.421" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:05.920" endtime="20230602 12:59:06.421"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:06.421" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:06.421" endtime="20230602 12:59:06.551"/>
</kw>
<status status="PASS" starttime="20230602 12:59:04.957" endtime="20230602 12:59:06.551"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:06.552" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230602 12:59:06.552" endtime="20230602 12:59:06.552"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:06.552" level="INFO">${img} = reporter_ubuntu_label_type.png</msg>
<status status="PASS" starttime="20230602 12:59:06.552" endtime="20230602 12:59:06.552"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:06.553" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=69x24 at 0x7F7010EFAE50&gt;</msg>
<status status="PASS" starttime="20230602 12:59:06.553" endtime="20230602 12:59:06.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:06.554" level="INFO">${imgsize} = (69, 24)</msg>
<status status="PASS" starttime="20230602 12:59:06.553" endtime="20230602 12:59:06.554"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 12:59:06.554" endtime="20230602 12:59:06.554"/>
</return>
<msg timestamp="20230602 12:59:06.554" level="INFO">${imgsize} = (69, 24)</msg>
<status status="PASS" starttime="20230602 12:59:06.552" endtime="20230602 12:59:06.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:06.554" level="INFO">(69, 24)</msg>
<status status="PASS" starttime="20230602 12:59:06.554" endtime="20230602 12:59:06.554"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:06.555" level="INFO">${offsetx} = 39</msg>
<status status="PASS" starttime="20230602 12:59:06.554" endtime="20230602 12:59:06.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:06.555" level="INFO">39</msg>
<status status="PASS" starttime="20230602 12:59:06.555" endtime="20230602 12:59:06.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:06.555" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:06.555" endtime="20230602 12:59:06.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:06.555" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:06.555" endtime="20230602 12:59:06.555"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:06.834" level="INFO">Image "reporter_ubuntu_label_type.png" found at (258, 142)</msg>
<status status="PASS" starttime="20230602 12:59:06.555" endtime="20230602 12:59:06.835"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:07.114" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_type.png" found at Box(left=224, top=130, width=69, height=24)</msg>
<msg timestamp="20230602 12:59:07.114" level="INFO">@{coordinates} = [ 258 | 142 ]</msg>
<status status="PASS" starttime="20230602 12:59:06.835" endtime="20230602 12:59:07.114"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:07.114" level="INFO">${x} = 297</msg>
<status status="PASS" starttime="20230602 12:59:07.114" endtime="20230602 12:59:07.114"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:07.115" level="INFO">${y} = 142</msg>
<status status="PASS" starttime="20230602 12:59:07.114" endtime="20230602 12:59:07.115"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 12:59:07.115" level="INFO">@{coordinates} = [ 297 | 142 ]</msg>
<status status="PASS" starttime="20230602 12:59:07.115" endtime="20230602 12:59:07.115"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 12:59:07.115" endtime="20230602 12:59:07.216"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 12:59:07.216" endtime="20230602 12:59:07.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:07.819" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:07.319" endtime="20230602 12:59:07.819"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:07.820" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:07.820" endtime="20230602 12:59:07.945"/>
</kw>
<status status="PASS" starttime="20230602 12:59:06.551" endtime="20230602 12:59:07.945"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:07.946" level="INFO">${optnamel} = datatable</msg>
<status status="PASS" starttime="20230602 12:59:07.946" endtime="20230602 12:59:07.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:07.946" level="INFO">${img} = reporter_ubuntu_option_datatable.png</msg>
<status status="PASS" starttime="20230602 12:59:07.946" endtime="20230602 12:59:07.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:07.946" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:07.946" endtime="20230602 12:59:07.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:07.947" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:07.947" endtime="20230602 12:59:07.947"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:08.248" level="INFO">Image "reporter_ubuntu_option_datatable.png" found at (344, 253)</msg>
<status status="PASS" starttime="20230602 12:59:07.947" endtime="20230602 12:59:08.248"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:08.544" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_datatable.png" found at Box(left=288, top=243, width=112, height=21)</msg>
<msg timestamp="20230602 12:59:08.544" level="INFO">@{coordinates} = [ 344 | 253 ]</msg>
<status status="PASS" starttime="20230602 12:59:08.248" endtime="20230602 12:59:08.544"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:08.840" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_datatable.png" found at Box(left=288, top=243, width=112, height=21)</msg>
<msg timestamp="20230602 12:59:08.840" level="INFO">Clicking image "reporter_ubuntu_option_datatable.png" in position (344, 253)</msg>
<status status="PASS" starttime="20230602 12:59:08.544" endtime="20230602 12:59:08.943"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:09.444" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:08.943" endtime="20230602 12:59:09.444"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:09.444" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:09.444" endtime="20230602 12:59:09.569"/>
</kw>
<status status="PASS" starttime="20230602 12:59:07.946" endtime="20230602 12:59:09.570"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:09.570" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 12:59:09.570" endtime="20230602 12:59:09.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:09.570" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 12:59:09.570" endtime="20230602 12:59:09.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:09.571" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:09.571" endtime="20230602 12:59:09.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:09.571" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:09.571" endtime="20230602 12:59:09.571"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:09.857" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 12:59:09.571" endtime="20230602 12:59:09.857"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:10.145" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:59:10.145" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 12:59:09.858" endtime="20230602 12:59:10.146"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:10.429" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 12:59:10.429" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 12:59:10.146" endtime="20230602 12:59:10.532"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:11.032" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:10.532" endtime="20230602 12:59:11.032"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:11.033" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:11.033" endtime="20230602 12:59:11.157"/>
</kw>
<status status="PASS" starttime="20230602 12:59:09.570" endtime="20230602 12:59:11.157"/>
</kw>
<status status="PASS" starttime="20230602 12:59:09.570" endtime="20230602 12:59:11.157"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:11.158" level="INFO">${labell} = showgraphcolours</msg>
<status status="PASS" starttime="20230602 12:59:11.158" endtime="20230602 12:59:11.158"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:11.158" level="INFO">${img} = reporter_ubuntu_label_showgraphcolours.png</msg>
<status status="PASS" starttime="20230602 12:59:11.158" endtime="20230602 12:59:11.158"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:11.159" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=147x19 at 0x7F7010ED6DD0&gt;</msg>
<status status="PASS" starttime="20230602 12:59:11.158" endtime="20230602 12:59:11.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:11.159" level="INFO">${imgsize} = (147, 19)</msg>
<status status="PASS" starttime="20230602 12:59:11.159" endtime="20230602 12:59:11.159"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 12:59:11.159" endtime="20230602 12:59:11.159"/>
</return>
<msg timestamp="20230602 12:59:11.160" level="INFO">${imgsize} = (147, 19)</msg>
<status status="PASS" starttime="20230602 12:59:11.158" endtime="20230602 12:59:11.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:11.160" level="INFO">(147, 19)</msg>
<status status="PASS" starttime="20230602 12:59:11.160" endtime="20230602 12:59:11.160"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:11.160" level="INFO">${offsetx} = 78</msg>
<status status="PASS" starttime="20230602 12:59:11.160" endtime="20230602 12:59:11.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:11.160" level="INFO">78</msg>
<status status="PASS" starttime="20230602 12:59:11.160" endtime="20230602 12:59:11.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:11.161" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:11.160" endtime="20230602 12:59:11.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:11.161" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:11.161" endtime="20230602 12:59:11.161"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:11.443" level="INFO">Image "reporter_ubuntu_label_showgraphcolours.png" found at (298, 166)</msg>
<status status="PASS" starttime="20230602 12:59:11.161" endtime="20230602 12:59:11.443"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:11.722" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_showgraphcolours.png" found at Box(left=225, top=157, width=147, height=19)</msg>
<msg timestamp="20230602 12:59:11.722" level="INFO">@{coordinates} = [ 298 | 166 ]</msg>
<status status="PASS" starttime="20230602 12:59:11.443" endtime="20230602 12:59:11.722"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:11.723" level="INFO">${x} = 376</msg>
<status status="PASS" starttime="20230602 12:59:11.722" endtime="20230602 12:59:11.723"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:11.723" level="INFO">${y} = 166</msg>
<status status="PASS" starttime="20230602 12:59:11.723" endtime="20230602 12:59:11.723"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 12:59:11.723" level="INFO">@{coordinates} = [ 376 | 166 ]</msg>
<status status="PASS" starttime="20230602 12:59:11.723" endtime="20230602 12:59:11.723"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 12:59:11.723" endtime="20230602 12:59:11.825"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 12:59:11.825" endtime="20230602 12:59:11.928"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:12.429" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:11.928" endtime="20230602 12:59:12.429"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:12.429" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:12.429" endtime="20230602 12:59:12.554"/>
</kw>
<status status="PASS" starttime="20230602 12:59:11.157" endtime="20230602 12:59:12.554"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:12.555" level="INFO">${labell} = datatype</msg>
<status status="PASS" starttime="20230602 12:59:12.554" endtime="20230602 12:59:12.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:12.555" level="INFO">${img} = reporter_ubuntu_label_datatype.png</msg>
<status status="PASS" starttime="20230602 12:59:12.555" endtime="20230602 12:59:12.555"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:12.556" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=150x20 at 0x7F7010EFE490&gt;</msg>
<status status="PASS" starttime="20230602 12:59:12.555" endtime="20230602 12:59:12.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:12.556" level="INFO">${imgsize} = (150, 20)</msg>
<status status="PASS" starttime="20230602 12:59:12.556" endtime="20230602 12:59:12.556"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 12:59:12.556" endtime="20230602 12:59:12.556"/>
</return>
<msg timestamp="20230602 12:59:12.557" level="INFO">${imgsize} = (150, 20)</msg>
<status status="PASS" starttime="20230602 12:59:12.555" endtime="20230602 12:59:12.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:12.557" level="INFO">(150, 20)</msg>
<status status="PASS" starttime="20230602 12:59:12.557" endtime="20230602 12:59:12.557"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:12.557" level="INFO">${offsetx} = 80</msg>
<status status="PASS" starttime="20230602 12:59:12.557" endtime="20230602 12:59:12.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:12.557" level="INFO">80</msg>
<status status="PASS" starttime="20230602 12:59:12.557" endtime="20230602 12:59:12.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:12.557" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:12.557" endtime="20230602 12:59:12.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:12.558" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:12.558" endtime="20230602 12:59:12.558"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:12.839" level="INFO">Image "reporter_ubuntu_label_datatype.png" found at (300, 190)</msg>
<status status="PASS" starttime="20230602 12:59:12.558" endtime="20230602 12:59:12.839"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:13.122" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_datatype.png" found at Box(left=225, top=180, width=150, height=20)</msg>
<msg timestamp="20230602 12:59:13.122" level="INFO">@{coordinates} = [ 300 | 190 ]</msg>
<status status="PASS" starttime="20230602 12:59:12.839" endtime="20230602 12:59:13.122"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:13.122" level="INFO">${x} = 380</msg>
<status status="PASS" starttime="20230602 12:59:13.122" endtime="20230602 12:59:13.122"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:13.123" level="INFO">${y} = 190</msg>
<status status="PASS" starttime="20230602 12:59:13.123" endtime="20230602 12:59:13.123"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 12:59:13.123" level="INFO">@{coordinates} = [ 380 | 190 ]</msg>
<status status="PASS" starttime="20230602 12:59:13.123" endtime="20230602 12:59:13.123"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 12:59:13.123" endtime="20230602 12:59:13.225"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 12:59:13.226" endtime="20230602 12:59:13.329"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:13.829" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:13.329" endtime="20230602 12:59:13.829"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:13.830" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:13.830" endtime="20230602 12:59:13.955"/>
</kw>
<status status="PASS" starttime="20230602 12:59:12.554" endtime="20230602 12:59:13.956"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:13.956" level="INFO">${optnamel} = result</msg>
<status status="PASS" starttime="20230602 12:59:13.956" endtime="20230602 12:59:13.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:13.957" level="INFO">${img} = reporter_ubuntu_option_result.png</msg>
<status status="PASS" starttime="20230602 12:59:13.956" endtime="20230602 12:59:13.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:13.957" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:13.957" endtime="20230602 12:59:13.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:13.957" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:13.957" endtime="20230602 12:59:13.957"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:14.237" level="INFO">Image "reporter_ubuntu_option_result.png" found at (406, 234)</msg>
<status status="PASS" starttime="20230602 12:59:13.957" endtime="20230602 12:59:14.237"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:14.517" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_result.png" found at Box(left=372, top=225, width=69, height=19)</msg>
<msg timestamp="20230602 12:59:14.517" level="INFO">@{coordinates} = [ 406 | 234 ]</msg>
<status status="PASS" starttime="20230602 12:59:14.237" endtime="20230602 12:59:14.517"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:14.795" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_result.png" found at Box(left=372, top=225, width=69, height=19)</msg>
<msg timestamp="20230602 12:59:14.795" level="INFO">Clicking image "reporter_ubuntu_option_result.png" in position (406, 234)</msg>
<status status="PASS" starttime="20230602 12:59:14.517" endtime="20230602 12:59:14.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:15.398" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:14.897" endtime="20230602 12:59:15.398"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:15.398" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:15.398" endtime="20230602 12:59:15.525"/>
</kw>
<status status="PASS" starttime="20230602 12:59:13.956" endtime="20230602 12:59:15.525"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:15.526" level="INFO">${labell} = resulttype</msg>
<status status="PASS" starttime="20230602 12:59:15.526" endtime="20230602 12:59:15.526"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:15.526" level="INFO">${img} = reporter_ubuntu_label_resulttype.png</msg>
<status status="PASS" starttime="20230602 12:59:15.526" endtime="20230602 12:59:15.526"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open(r'${imgfile}')</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:15.527" level="INFO">${img} = &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=102x19 at 0x7F7010EFB650&gt;</msg>
<status status="PASS" starttime="20230602 12:59:15.527" endtime="20230602 12:59:15.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:15.528" level="INFO">${imgsize} = (102, 19)</msg>
<status status="PASS" starttime="20230602 12:59:15.527" endtime="20230602 12:59:15.528"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="PASS" starttime="20230602 12:59:15.528" endtime="20230602 12:59:15.528"/>
</return>
<msg timestamp="20230602 12:59:15.528" level="INFO">${imgsize} = (102, 19)</msg>
<status status="PASS" starttime="20230602 12:59:15.526" endtime="20230602 12:59:15.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:15.528" level="INFO">(102, 19)</msg>
<status status="PASS" starttime="20230602 12:59:15.528" endtime="20230602 12:59:15.528"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:15.528" level="INFO">${offsetx} = 56</msg>
<status status="PASS" starttime="20230602 12:59:15.528" endtime="20230602 12:59:15.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:15.529" level="INFO">56</msg>
<status status="PASS" starttime="20230602 12:59:15.528" endtime="20230602 12:59:15.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:15.529" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:15.529" endtime="20230602 12:59:15.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:15.529" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:15.529" endtime="20230602 12:59:15.529"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:15.808" level="INFO">Image "reporter_ubuntu_label_resulttype.png" found at (275, 236)</msg>
<status status="PASS" starttime="20230602 12:59:15.529" endtime="20230602 12:59:15.808"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 12:59:16.089" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_resulttype.png" found at Box(left=224, top=227, width=102, height=19)</msg>
<msg timestamp="20230602 12:59:16.089" level="INFO">@{coordinates} = [ 275 | 236 ]</msg>
<status status="PASS" starttime="20230602 12:59:15.808" endtime="20230602 12:59:16.089"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:16.090" level="INFO">${x} = 331</msg>
<status status="PASS" starttime="20230602 12:59:16.089" endtime="20230602 12:59:16.090"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 12:59:16.090" level="INFO">${y} = 236</msg>
<status status="PASS" starttime="20230602 12:59:16.090" endtime="20230602 12:59:16.090"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230602 12:59:16.090" level="INFO">@{coordinates} = [ 331 | 236 ]</msg>
<status status="PASS" starttime="20230602 12:59:16.090" endtime="20230602 12:59:16.090"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230602 12:59:16.090" endtime="20230602 12:59:16.191"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230602 12:59:16.192" endtime="20230602 12:59:16.295"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:16.795" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:16.295" endtime="20230602 12:59:16.795"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:16.796" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:16.795" endtime="20230602 12:59:16.923"/>
</kw>
<status status="PASS" starttime="20230602 12:59:15.526" endtime="20230602 12:59:16.924"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<kw name="Convert To Lower Case" library="String">
<var>${optnamel}</var>
<arg>${optname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 12:59:16.924" level="INFO">${optnamel} = responsetime</msg>
<status status="PASS" starttime="20230602 12:59:16.924" endtime="20230602 12:59:16.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_option_${optnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:16.924" level="INFO">${img} = reporter_ubuntu_option_responsetime.png</msg>
<status status="PASS" starttime="20230602 12:59:16.924" endtime="20230602 12:59:16.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:16.925" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 12:59:16.925" endtime="20230602 12:59:16.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 12:59:16.925" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 12:59:16.925" endtime="20230602 12:59:16.925"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 12:59:16.926" level="FAIL">InvalidImageException: Image path not found: "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_responsetime.png".</msg>
<status status="FAIL" starttime="20230602 12:59:16.925" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<status status="FAIL" starttime="20230602 12:59:16.924" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Find Text">
<arg>Filter Type:</arg>
<status status="NOT RUN" starttime="20230602 12:59:16.927" endtime="20230602 12:59:16.927"/>
</kw>
<kw name="Find Text">
<arg>Result Name</arg>
<status status="NOT RUN" starttime="20230602 12:59:16.928" endtime="20230602 12:59:16.928"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.928" endtime="20230602 12:59:16.928"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 12:59:16.928" endtime="20230602 12:59:16.928"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 12:59:16.928" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 12:59:16.928" endtime="20230602 12:59:16.928"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 12:59:16.929" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 12:59:16.928" endtime="20230602 12:59:16.929"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 12:59:17.219" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 12:59:17.219" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 12:59:16.932" endtime="20230602 12:59:17.321"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 12:59:17.322" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 12:59:17.321" endtime="20230602 12:59:17.448"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 12:59:17.949" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 12:59:17.448" endtime="20230602 12:59:17.949"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 12:59:17.950" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 13:00:17.969" level="INFO">Process did not complete in 1 minute.</msg>
<msg timestamp="20230602 13:00:17.970" level="INFO">Leaving process intact.</msg>
<msg timestamp="20230602 13:00:17.970" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20230602 12:59:17.949" endtime="20230602 13:00:17.970"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 13:00:17.970" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 13:00:17.970" endtime="20230602 13:00:17.970"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:00:17.970" endtime="20230602 13:00:17.970"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:00:17.970" endtime="20230602 13:00:17.970"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 13:00:17.971" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 13:00:17.971" endtime="20230602 13:00:18.098"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20230602 13:00:18.098" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20230602 13:00:18.199" level="INFO">Process completed.</msg>
<msg timestamp="20230602 13:00:18.199" level="INFO">${result} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20230602 13:00:18.098" endtime="20230602 13:00:18.199"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 13:00:18.200" level="INFO"/>
<status status="PASS" starttime="20230602 13:00:18.199" endtime="20230602 13:00:18.200"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 13:00:18.200" endtime="20230602 13:00:18.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 13:00:18.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230602 13:00:18.201" level="FAIL">-15 != 0</msg>
<status status="FAIL" starttime="20230602 13:00:18.201" endtime="20230602 13:00:18.201"/>
</kw>
<status status="FAIL" starttime="20230602 13:00:18.199" endtime="20230602 13:00:18.202"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 13:00:18.202" level="FAIL">Had to Terminate Process</msg>
<status status="FAIL" starttime="20230602 13:00:18.202" endtime="20230602 13:00:18.202"/>
</kw>
<status status="FAIL" starttime="20230602 13:00:17.971" endtime="20230602 13:00:18.202"/>
</branch>
<status status="FAIL" starttime="20230602 13:00:17.970" endtime="20230602 13:00:18.202"/>
</if>
<status status="FAIL" starttime="20230602 12:59:17.949" endtime="20230602 13:00:18.202"/>
</kw>
<status status="FAIL" starttime="20230602 12:59:16.932" endtime="20230602 13:00:18.202"/>
</kw>
<status status="FAIL" starttime="20230602 12:59:16.929" endtime="20230602 13:00:18.202"/>
</kw>
<status status="FAIL" starttime="20230602 12:59:16.929" endtime="20230602 13:00:18.202"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:00:18.202" endtime="20230602 13:00:18.203"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:00:18.203" endtime="20230602 13:00:18.203"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:00:18.202" endtime="20230602 13:00:18.203"/>
</branch>
<status status="FAIL" starttime="20230602 12:59:16.929" endtime="20230602 13:00:18.203"/>
</if>
<status status="FAIL" starttime="20230602 12:59:16.928" endtime="20230602 13:00:18.203"/>
</branch>
<status status="FAIL" starttime="20230602 12:59:16.928" endtime="20230602 13:00:18.203"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:00:18.203" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:00:18.203" endtime="20230602 13:00:18.203"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:00:18.703" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:00:18.203" endtime="20230602 13:00:18.703"/>
</kw>
<status status="FAIL" starttime="20230602 12:59:16.928" endtime="20230602 13:00:18.704">Several failures occurred:

1) -15 != 0

2) Had to Terminate Process</status>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 12:58:46.837" endtime="20230602 13:00:18.704">InvalidImageException: Image path not found: "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_option_responsetime.png".

Also teardown failed:
Several failures occurred:

1) -15 != 0

2) Had to Terminate Process</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="101">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 13:00:18.706" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 13:00:18.705" endtime="20230602 13:00:18.706"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 13:00:18.706" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 13:00:18.706" endtime="20230602 13:00:18.706"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</kw>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</branch>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</if>
<status status="NOT RUN" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</branch>
<status status="PASS" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.707"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 13:00:18.707" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 13:00:18.707" endtime="20230602 13:00:18.708"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 13:00:19.208" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 13:00:18.708" endtime="20230602 13:00:19.208"/>
</kw>
<status status="PASS" starttime="20230602 13:00:18.706" endtime="20230602 13:00:19.208"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 13:00:18.704" endtime="20230602 13:00:19.208">AssertionError</status>
</test>
<status status="FAIL" starttime="20230602 12:58:10.450" endtime="20230602 13:00:19.209"/>
</suite>
<status status="FAIL" starttime="20230602 12:57:57.159" endtime="20230602 13:00:19.211"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
