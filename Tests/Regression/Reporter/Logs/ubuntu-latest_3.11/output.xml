<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on linux)" generated="20230529 11:16:38.262" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:16:38.294" endtime="20230529 11:16:38.294"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 11:16:38.295" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.295" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 11:16:38.294" endtime="20230529 11:16:38.295"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:16:38.296" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 11:16:38.295" endtime="20230529 11:16:38.297"/>
</kw>
<status status="PASS" starttime="20230529 11:16:38.294" endtime="20230529 11:16:38.297"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:16:38.299" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:16:43.509" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230529 11:16:38.297" endtime="20230529 11:16:43.509"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:16:43.510" endtime="20230529 11:16:43.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:43.510" endtime="20230529 11:16:43.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:43.511" endtime="20230529 11:16:43.511"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:16:38.297" endtime="20230529 11:16:43.511"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:16:43.512" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:16:44.383" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230529 11:16:43.512" endtime="20230529 11:16:44.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:16:44.383" endtime="20230529 11:16:44.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:44.383" endtime="20230529 11:16:44.383"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:16:43.511" endtime="20230529 11:16:44.384"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:44.384" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:44.384" endtime="20230529 11:16:44.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:44.384" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:44.384" endtime="20230529 11:16:44.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:44.385" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:44.385" endtime="20230529 11:16:44.385"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:44.385" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:44.385" endtime="20230529 11:16:44.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:44.385" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:44.385" endtime="20230529 11:16:44.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:44.386" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:44.386" endtime="20230529 11:16:44.386"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:44.386" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:44.386" endtime="20230529 11:16:44.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:44.387" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:44.386" endtime="20230529 11:16:44.387"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:44.387" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:44.387" endtime="20230529 11:16:44.387"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:44.387" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:44.387" endtime="20230529 11:16:44.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:44.388" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:44.387" endtime="20230529 11:16:44.388"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:16:44.390" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:16:47.901" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:16:44.388" endtime="20230529 11:16:47.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:47.902" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230529 11:16:47.902" endtime="20230529 11:16:47.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:47.902" endtime="20230529 11:16:47.902"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:47.903" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:47.902" endtime="20230529 11:16:47.903"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:16:44.384" endtime="20230529 11:16:47.903"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:47.903" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:47.903" endtime="20230529 11:16:47.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:47.904" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:47.904" endtime="20230529 11:16:47.904"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:47.904" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:47.904" endtime="20230529 11:16:47.904"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:47.904" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:47.904" endtime="20230529 11:16:47.904"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:16:47.904" endtime="20230529 11:16:47.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:47.905" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:47.905" endtime="20230529 11:16:47.905"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:47.905" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:47.905" endtime="20230529 11:16:47.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:47.905" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:47.905" endtime="20230529 11:16:47.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:47.906" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:47.906" endtime="20230529 11:16:47.906"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:47.906" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:47.906" endtime="20230529 11:16:47.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:47.906" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:47.906" endtime="20230529 11:16:47.906"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:16:47.907" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:16:52.421" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:16:47.906" endtime="20230529 11:16:52.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:52.421" level="INFO">
</msg>
<status status="PASS" starttime="20230529 11:16:52.421" endtime="20230529 11:16:52.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:52.422" endtime="20230529 11:16:52.422"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:52.422" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:52.422" endtime="20230529 11:16:52.422"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:16:47.903" endtime="20230529 11:16:52.422"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:52.423" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:52.423" endtime="20230529 11:16:52.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:52.423" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:52.423" endtime="20230529 11:16:52.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:52.424" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:52.423" endtime="20230529 11:16:52.424"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:52.424" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:52.424" endtime="20230529 11:16:52.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:52.424" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:16:52.424" endtime="20230529 11:16:52.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:52.425" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:52.424" endtime="20230529 11:16:52.425"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:52.425" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:52.425" endtime="20230529 11:16:52.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:52.425" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:16:52.425" endtime="20230529 11:16:52.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:52.425" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:52.425" endtime="20230529 11:16:52.426"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:52.426" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:52.426" endtime="20230529 11:16:52.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:52.426" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:16:52.426" endtime="20230529 11:16:52.426"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:16:52.427" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:16:55.924" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:16:52.426" endtime="20230529 11:16:55.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:55.925" level="INFO">
</msg>
<status status="PASS" starttime="20230529 11:16:55.924" endtime="20230529 11:16:55.925"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:16:55.925" endtime="20230529 11:16:55.925"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:16:55.925" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:16:55.925" endtime="20230529 11:16:55.925"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230529 11:16:52.422" endtime="20230529 11:16:55.926"/>
</test>
<status status="PASS" starttime="20230529 11:16:38.281" endtime="20230529 11:16:55.926"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:16:56.254" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:16:56.253" endtime="20230529 11:16:56.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:56.254" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f05f425af90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:16:56.254" endtime="20230529 11:16:56.254"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:16:56.255" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:16:56.255" endtime="20230529 11:16:56.255"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:16:56.255" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:16:56.255" endtime="20230529 11:16:56.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:16:56.256" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:16:56.255" endtime="20230529 11:16:56.256"/>
</kw>
<status status="PASS" starttime="20230529 11:16:56.254" endtime="20230529 11:16:56.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:56.257" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:16:56.257" endtime="20230529 11:16:56.257"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:16:56.261" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:16:56.261" endtime="20230529 11:16:56.261"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:16:56.261" endtime="20230529 11:16:56.261"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:16:56.262" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:16:56.261" endtime="20230529 11:16:56.268"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:16:56.269" endtime="20230529 11:16:56.269"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:16:56.269" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:16:56.269" endtime="20230529 11:16:56.437"/>
</kw>
<status status="PASS" starttime="20230529 11:16:56.261" endtime="20230529 11:16:56.437"/>
</kw>
<status status="PASS" starttime="20230529 11:16:56.257" endtime="20230529 11:16:56.437"/>
</kw>
<status status="PASS" starttime="20230529 11:16:56.253" endtime="20230529 11:16:56.437"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:16:56.438" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:16:56.438" endtime="20230529 11:16:56.438"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:16:56.438" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:16:56.438" endtime="20230529 11:16:56.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:56.439" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:16:56.438" endtime="20230529 11:16:56.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:16:56.439" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:16:56.439" endtime="20230529 11:16:56.439"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:17:08.906" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:16:56.439" endtime="20230529 11:17:08.906"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:17:09.249" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:09.249" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:17:08.906" endtime="20230529 11:17:09.250"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:09.581" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:09.581" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:09.250" endtime="20230529 11:17:09.685"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:09.786" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:09.685" endtime="20230529 11:17:09.786"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:09.786" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:09.786" endtime="20230529 11:17:09.938"/>
</kw>
<status status="PASS" starttime="20230529 11:16:56.437" endtime="20230529 11:17:09.938"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:09.939" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:09.939" endtime="20230529 11:17:09.939"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:09.939" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:17:09.939" endtime="20230529 11:17:09.939"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:10.275" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:17:10.275" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:17:09.943" endtime="20230529 11:17:10.380"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:10.380" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:10.380" endtime="20230529 11:17:10.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:11.032" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:10.531" endtime="20230529 11:17:11.032"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:17:11.033" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:17:11.033" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:17:11.034" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:17:11.033" endtime="20230529 11:17:11.034"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:11.034" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:17:11.034" endtime="20230529 11:17:11.034"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:11.036" level="INFO"/>
<status status="PASS" starttime="20230529 11:17:11.035" endtime="20230529 11:17:11.036"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:17:11.036" endtime="20230529 11:17:11.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:17:11.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:17:11.037" endtime="20230529 11:17:11.038"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.034" endtime="20230529 11:17:11.038"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.034" endtime="20230529 11:17:11.038"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:17:11.038" endtime="20230529 11:17:11.038"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:17:11.038" endtime="20230529 11:17:11.038"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:11.038" endtime="20230529 11:17:11.038"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:17:11.038" endtime="20230529 11:17:11.038"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:11.038" endtime="20230529 11:17:11.038"/>
</branch>
<status status="PASS" starttime="20230529 11:17:11.034" endtime="20230529 11:17:11.038"/>
</if>
<status status="PASS" starttime="20230529 11:17:11.032" endtime="20230529 11:17:11.038"/>
</kw>
<status status="PASS" starttime="20230529 11:17:09.943" endtime="20230529 11:17:11.038"/>
</kw>
<status status="PASS" starttime="20230529 11:17:09.939" endtime="20230529 11:17:11.039"/>
</kw>
<status status="PASS" starttime="20230529 11:17:09.939" endtime="20230529 11:17:11.039"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:17:11.039" endtime="20230529 11:17:11.039"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:11.039" endtime="20230529 11:17:11.039"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:11.039" endtime="20230529 11:17:11.039"/>
</branch>
<status status="PASS" starttime="20230529 11:17:09.939" endtime="20230529 11:17:11.039"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:11.540" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:11.039" endtime="20230529 11:17:11.540"/>
</kw>
<status status="PASS" starttime="20230529 11:17:09.938" endtime="20230529 11:17:11.540"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:16:56.252" endtime="20230529 11:17:11.540"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:17:11.543" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:17:11.542" endtime="20230529 11:17:11.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:11.543" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f05f425af90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:17:11.543" endtime="20230529 11:17:11.543"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:17:11.545" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:17:11.544" endtime="20230529 11:17:11.545"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:17:11.545" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:17:11.545" endtime="20230529 11:17:11.545"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:11.545" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:11.545" endtime="20230529 11:17:11.545"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.544" endtime="20230529 11:17:11.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:11.546" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:11.546" endtime="20230529 11:17:11.546"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:11.554" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:11.554" endtime="20230529 11:17:11.554"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:17:11.554" endtime="20230529 11:17:11.554"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:17:11.555" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:17:11.554" endtime="20230529 11:17:11.562"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:17:11.562" endtime="20230529 11:17:11.563"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:11.563" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:11.563" endtime="20230529 11:17:11.713"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.554" endtime="20230529 11:17:11.713"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.546" endtime="20230529 11:17:11.713"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.542" endtime="20230529 11:17:11.713"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:17:11.714" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:17:11.714" endtime="20230529 11:17:11.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:11.714" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:17:11.714" endtime="20230529 11:17:11.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:11.715" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:17:11.714" endtime="20230529 11:17:11.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:11.715" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:17:11.715" endtime="20230529 11:17:11.715"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:17:23.570" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:11.715" endtime="20230529 11:17:23.570"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:17:23.918" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:23.918" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:17:23.571" endtime="20230529 11:17:23.918"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:24.260" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:24.260" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:23.918" endtime="20230529 11:17:24.363"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:24.464" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:24.363" endtime="20230529 11:17:24.464"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:24.464" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:24.464" endtime="20230529 11:17:24.615"/>
</kw>
<status status="PASS" starttime="20230529 11:17:11.713" endtime="20230529 11:17:24.615"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:17:24.615" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230529 11:17:24.615" endtime="20230529 11:17:24.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:24.616" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230529 11:17:24.615" endtime="20230529 11:17:24.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:24.616" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:17:24.616" endtime="20230529 11:17:24.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:24.616" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:17:24.616" endtime="20230529 11:17:24.616"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:17:24.955" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230529 11:17:24.616" endtime="20230529 11:17:24.956"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:17:25.295" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 11:17:25.295" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230529 11:17:24.956" endtime="20230529 11:17:25.295"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:25.630" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 11:17:25.630" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230529 11:17:25.295" endtime="20230529 11:17:25.733"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:25.834" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:25.733" endtime="20230529 11:17:25.834"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:25.834" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:25.834" endtime="20230529 11:17:25.984"/>
</kw>
<status status="PASS" starttime="20230529 11:17:24.615" endtime="20230529 11:17:25.984"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:25.984" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:25.984" endtime="20230529 11:17:25.984"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:25.985" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:17:25.985" endtime="20230529 11:17:25.985"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:26.331" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:17:26.331" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:17:25.989" endtime="20230529 11:17:26.433"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:26.434" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:26.434" endtime="20230529 11:17:26.586"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:27.086" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:26.586" endtime="20230529 11:17:27.087"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:17:27.087" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:17:27.088" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:17:27.088" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:17:27.087" endtime="20230529 11:17:27.088"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:27.088" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:17:27.088" endtime="20230529 11:17:27.088"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:27.089" level="INFO"/>
<status status="PASS" starttime="20230529 11:17:27.089" endtime="20230529 11:17:27.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:17:27.090" endtime="20230529 11:17:27.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:17:27.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:17:27.090" endtime="20230529 11:17:27.091"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.088" endtime="20230529 11:17:27.091"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.088" endtime="20230529 11:17:27.091"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:17:27.091" endtime="20230529 11:17:27.091"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:17:27.091" endtime="20230529 11:17:27.091"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:27.091" endtime="20230529 11:17:27.091"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:17:27.092" endtime="20230529 11:17:27.092"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:27.091" endtime="20230529 11:17:27.092"/>
</branch>
<status status="PASS" starttime="20230529 11:17:27.088" endtime="20230529 11:17:27.092"/>
</if>
<status status="PASS" starttime="20230529 11:17:27.087" endtime="20230529 11:17:27.092"/>
</kw>
<status status="PASS" starttime="20230529 11:17:25.989" endtime="20230529 11:17:27.092"/>
</kw>
<status status="PASS" starttime="20230529 11:17:25.985" endtime="20230529 11:17:27.092"/>
</kw>
<status status="PASS" starttime="20230529 11:17:25.985" endtime="20230529 11:17:27.092"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:17:27.092" endtime="20230529 11:17:27.092"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:27.092" endtime="20230529 11:17:27.092"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:27.092" endtime="20230529 11:17:27.092"/>
</branch>
<status status="PASS" starttime="20230529 11:17:25.985" endtime="20230529 11:17:27.092"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:27.593" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:27.092" endtime="20230529 11:17:27.593"/>
</kw>
<status status="PASS" starttime="20230529 11:17:25.984" endtime="20230529 11:17:27.593"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:17:11.541" endtime="20230529 11:17:27.593"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.595" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230529 11:17:27.595" endtime="20230529 11:17:27.595"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.596" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:17:27.596" endtime="20230529 11:17:27.596"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.596" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230529 11:17:27.596" endtime="20230529 11:17:27.597"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:17:27.597" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:17:27.597" endtime="20230529 11:17:27.597"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:17:27.597" endtime="20230529 11:17:27.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.598" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:17:27.598" endtime="20230529 11:17:27.598"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:17:27.599" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:17:27.598" endtime="20230529 11:17:27.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:27.599" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:17:27.599" endtime="20230529 11:17:27.599"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230529 11:17:27.600" level="INFO">${epoch} = 1685359047</msg>
<status status="PASS" starttime="20230529 11:17:27.599" endtime="20230529 11:17:27.600"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:17:27.601" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:17:27.600" endtime="20230529 11:17:27.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:27.601" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f05f425af90&gt;, '@{appargs}': ['-i', 'blank_1685359047.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:17:27.601" endtime="20230529 11:17:27.601"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:17:27.601" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:17:27.601" endtime="20230529 11:17:27.601"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:17:27.602" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:17:27.602" endtime="20230529 11:17:27.602"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:27.602" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:27.602" endtime="20230529 11:17:27.602"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.601" endtime="20230529 11:17:27.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.603" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:27.602" endtime="20230529 11:17:27.603"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:27.607" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:27.607" endtime="20230529 11:17:27.607"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:17:27.607" endtime="20230529 11:17:27.607"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:17:27.608" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685359047.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:17:27.607" endtime="20230529 11:17:27.613"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:17:27.614" endtime="20230529 11:17:27.614"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:27.614" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:27.614" endtime="20230529 11:17:27.760"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.606" endtime="20230529 11:17:27.760"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.603" endtime="20230529 11:17:27.761"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.600" endtime="20230529 11:17:27.761"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:17:27.762" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:17:27.762" endtime="20230529 11:17:27.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:27.762" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:17:27.762" endtime="20230529 11:17:27.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:27.762" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:17:27.762" endtime="20230529 11:17:27.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:27.762" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:17:27.762" endtime="20230529 11:17:27.763"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:17:30.539" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:27.763" endtime="20230529 11:17:30.539"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:17:30.876" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:30.876" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:17:30.539" endtime="20230529 11:17:30.876"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:31.222" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:31.222" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:30.876" endtime="20230529 11:17:31.325"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:31.426" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:31.325" endtime="20230529 11:17:31.426"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:31.426" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:31.426" endtime="20230529 11:17:31.578"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.761" endtime="20230529 11:17:31.578"/>
</kw>
<status status="PASS" starttime="20230529 11:17:27.761" endtime="20230529 11:17:31.578"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:31.579" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:31.578" endtime="20230529 11:17:31.579"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:31.579" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:17:31.579" endtime="20230529 11:17:31.579"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:31.922" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:17:31.922" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:17:31.583" endtime="20230529 11:17:32.025"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:32.025" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:32.025" endtime="20230529 11:17:32.172"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:32.673" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:32.172" endtime="20230529 11:17:32.673"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:17:32.674" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:17:32.675" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:17:32.675" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:17:32.674" endtime="20230529 11:17:32.675"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:17:32.675" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:17:32.675" endtime="20230529 11:17:32.675"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:32.677" level="INFO"/>
<status status="PASS" starttime="20230529 11:17:32.676" endtime="20230529 11:17:32.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:17:32.677" endtime="20230529 11:17:32.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:17:32.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:17:32.678" endtime="20230529 11:17:32.680"/>
</kw>
<status status="PASS" starttime="20230529 11:17:32.676" endtime="20230529 11:17:32.680"/>
</kw>
<status status="PASS" starttime="20230529 11:17:32.675" endtime="20230529 11:17:32.680"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:17:32.680" endtime="20230529 11:17:32.680"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:17:32.680" endtime="20230529 11:17:32.680"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:32.680" endtime="20230529 11:17:32.680"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:17:32.680" endtime="20230529 11:17:32.680"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:32.680" endtime="20230529 11:17:32.680"/>
</branch>
<status status="PASS" starttime="20230529 11:17:32.675" endtime="20230529 11:17:32.680"/>
</if>
<status status="PASS" starttime="20230529 11:17:32.673" endtime="20230529 11:17:32.680"/>
</kw>
<status status="PASS" starttime="20230529 11:17:31.583" endtime="20230529 11:17:32.681"/>
</kw>
<status status="PASS" starttime="20230529 11:17:31.579" endtime="20230529 11:17:32.681"/>
</kw>
<status status="PASS" starttime="20230529 11:17:31.579" endtime="20230529 11:17:32.681"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:17:32.681" endtime="20230529 11:17:32.681"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:17:32.681" endtime="20230529 11:17:32.681"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:32.681" endtime="20230529 11:17:32.681"/>
</branch>
<status status="PASS" starttime="20230529 11:17:31.579" endtime="20230529 11:17:32.681"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:33.181" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:32.681" endtime="20230529 11:17:33.182"/>
</kw>
<status status="PASS" starttime="20230529 11:17:31.578" endtime="20230529 11:17:33.182"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:17:27.594" endtime="20230529 11:17:33.182"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:17:33.184" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:17:33.184" endtime="20230529 11:17:33.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:33.185" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f05f425af90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:17:33.185" endtime="20230529 11:17:33.185"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:17:33.186" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:17:33.186" endtime="20230529 11:17:33.186"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:17:33.187" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:17:33.186" endtime="20230529 11:17:33.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:33.187" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:33.187" endtime="20230529 11:17:33.187"/>
</kw>
<status status="PASS" starttime="20230529 11:17:33.185" endtime="20230529 11:17:33.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:33.188" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:33.188" endtime="20230529 11:17:33.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:17:33.193" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:17:33.193" endtime="20230529 11:17:33.193"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:17:33.193" endtime="20230529 11:17:33.193"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:17:33.194" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:17:33.193" endtime="20230529 11:17:33.199"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:17:33.199" endtime="20230529 11:17:33.200"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:33.200" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:33.200" endtime="20230529 11:17:33.347"/>
</kw>
<status status="PASS" starttime="20230529 11:17:33.192" endtime="20230529 11:17:33.347"/>
</kw>
<status status="PASS" starttime="20230529 11:17:33.188" endtime="20230529 11:17:33.347"/>
</kw>
<status status="PASS" starttime="20230529 11:17:33.183" endtime="20230529 11:17:33.347"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:17:33.348" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:17:33.348" endtime="20230529 11:17:33.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:17:33.349" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:17:33.348" endtime="20230529 11:17:33.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:33.349" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:17:33.349" endtime="20230529 11:17:33.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:33.349" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:17:33.349" endtime="20230529 11:17:33.349"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:17:44.997" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:33.349" endtime="20230529 11:17:44.998"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:17:45.347" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:45.347" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:17:44.998" endtime="20230529 11:17:45.347"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:17:45.688" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:17:45.688" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:17:45.347" endtime="20230529 11:17:45.791"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:17:45.892" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:17:45.791" endtime="20230529 11:17:45.892"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:45.892" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:45.892" endtime="20230529 11:17:46.048"/>
</kw>
<status status="PASS" starttime="20230529 11:17:33.348" endtime="20230529 11:17:46.048"/>
</kw>
<kw name="Click Section">
<arg>toc</arg>
<kw name="Click Text">
<arg>${sectname}</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:46.049" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:46.049" endtime="20230529 11:17:46.203"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:46.203" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml</msg>
<status status="PASS" starttime="20230529 11:17:46.203" endtime="20230529 11:17:46.203"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230529 11:17:46.204" level="INFO">${path} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11</msg>
<msg timestamp="20230529 11:17:46.204" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230529 11:17:46.203" endtime="20230529 11:17:46.204"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230529 11:17:46.204" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:17:46.204" level="INFO">13 files:
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230529 11:17:46.204" level="INFO">@{files} = [ /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png | /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-lates...</msg>
<status status="PASS" starttime="20230529 11:17:46.204" endtime="20230529 11:17:46.205"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230529 11:17:46.205" endtime="20230529 11:17:46.205"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.205" level="INFO">Length is 13</msg>
<msg timestamp="20230529 11:17:46.205" level="INFO">${fc} = 13</msg>
<status status="PASS" starttime="20230529 11:17:46.205" endtime="20230529 11:17:46.205"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.206" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.206" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.206"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.206" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.207" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.207"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.207"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.207"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.207"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.207"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.207"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.207"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.208" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.208" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.208"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.208"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.208"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.208"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.208"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.208"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.207" endtime="20230529 11:17:46.208"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.209" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.209" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.209"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.208" endtime="20230529 11:17:46.209"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.209" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.209" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.209"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.209" endtime="20230529 11:17:46.210"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.210" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.210" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.210"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.211"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.211"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.211"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.211"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.211"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.210" endtime="20230529 11:17:46.211"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.211" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.211" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.211"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.211"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.212"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.212"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.212"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.212"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.211" endtime="20230529 11:17:46.212"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.212" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.212" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.212"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.212"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.212"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.213"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.213"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.213"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.212" endtime="20230529 11:17:46.213"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.213" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:17:46.213" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.213"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.213"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.213"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.214"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.214"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.214"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.213" endtime="20230529 11:17:46.214"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:17:46.214" level="INFO">Length is 119</msg>
<msg timestamp="20230529 11:17:46.214" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</return>
<status status="PASS" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.214"/>
</if>
<status status="PASS" starttime="20230529 11:17:46.214" endtime="20230529 11:17:46.215"/>
</iter>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.215"/>
</while>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.215"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:17:46.215" endtime="20230529 11:17:46.215"/>
</return>
<status status="NOT RUN" starttime="20230529 11:17:46.215" endtime="20230529 11:17:46.215"/>
</branch>
<status status="PASS" starttime="20230529 11:17:46.206" endtime="20230529 11:17:46.215"/>
</if>
<msg timestamp="20230529 11:17:46.215" level="INFO">${img} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 11:17:46.203" endtime="20230529 11:17:46.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:46.215" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 11:17:46.215" endtime="20230529 11:17:46.215"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230529 11:17:46.237" level="INFO">${processed_img} = [[[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0   0]]

 [[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0...</msg>
<status status="PASS" starttime="20230529 11:17:46.215" endtime="20230529 11:17:46.237"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230529 11:17:48.929" level="INFO">${bounds} = (34, 122, 29, 29)</msg>
<status status="PASS" starttime="20230529 11:17:46.237" endtime="20230529 11:17:48.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:17:48.930" level="INFO">(34, 122, 29, 29)</msg>
<status status="PASS" starttime="20230529 11:17:48.929" endtime="20230529 11:17:48.930"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${bounds}[0]+int(${bounds}[2]/2)+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:17:48.930" level="INFO">${x} = 48</msg>
<status status="PASS" starttime="20230529 11:17:48.930" endtime="20230529 11:17:48.930"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${bounds}[1]+int(${bounds}[3]/2)+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:17:48.931" level="INFO">${y} = 136</msg>
<status status="PASS" starttime="20230529 11:17:48.930" endtime="20230529 11:17:48.931"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230529 11:17:48.931" level="INFO">@{coordinates} = [ 48 | 136 ]</msg>
<status status="PASS" starttime="20230529 11:17:48.931" endtime="20230529 11:17:48.931"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230529 11:17:48.931" endtime="20230529 11:17:49.033"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230529 11:17:49.034" endtime="20230529 11:17:49.137"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:17:49.137" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:17:49.137" endtime="20230529 11:17:49.292"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.049" endtime="20230529 11:17:49.292"/>
</kw>
<status status="PASS" starttime="20230529 11:17:46.049" endtime="20230529 11:17:49.292"/>
</kw>
<kw name="Click Section">
<arg>toc</arg>
<arg>0</arg>
<arg>-20</arg>
<msg timestamp="20230529 11:17:49.293" level="FAIL">Keyword 'Click Section' expected 1 argument, got 3.</msg>
<status status="FAIL" starttime="20230529 11:17:49.293" endtime="20230529 11:17:49.293"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:17:49.293" endtime="20230529 11:17:49.293"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<status status="NOT RUN" starttime="20230529 11:17:49.293" endtime="20230529 11:17:49.293"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230529 11:17:49.293" endtime="20230529 11:17:49.293"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 11:17:33.183" endtime="20230529 11:17:49.293">Keyword 'Click Section' expected 1 argument, got 3.</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="61">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230529 11:17:49.294" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230529 11:17:49.294" endtime="20230529 11:17:49.295"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 11:17:49.294" endtime="20230529 11:17:49.295">AssertionError</status>
</test>
<status status="FAIL" starttime="20230529 11:16:55.927" endtime="20230529 11:17:49.295"/>
</suite>
<status status="FAIL" starttime="20230529 11:16:38.263" endtime="20230529 11:17:49.296"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
