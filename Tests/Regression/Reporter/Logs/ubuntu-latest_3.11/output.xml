<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on linux)" generated="20230602 11:25:36.442" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 11:25:36.470" endtime="20230602 11:25:36.470"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 11:25:36.471" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.471" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 11:25:36.470" endtime="20230602 11:25:36.471"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230602 11:25:36.471" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.471" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-21.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-25.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-23.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-22.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-26.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.472" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-27.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230602 11:25:36.473" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-24.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230602 11:25:36.471" endtime="20230602 11:25:36.473"/>
</kw>
<status status="PASS" starttime="20230602 11:25:36.470" endtime="20230602 11:25:36.473"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 11:25:36.474" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 11:25:37.952" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230602 11:25:36.473" endtime="20230602 11:25:37.952"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 11:25:37.953" endtime="20230602 11:25:37.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:37.953" endtime="20230602 11:25:37.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:37.953" endtime="20230602 11:25:37.953"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:25:36.473" endtime="20230602 11:25:37.953"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 11:25:37.954" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 11:25:38.690" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230602 11:25:37.954" endtime="20230602 11:25:38.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 11:25:38.690" endtime="20230602 11:25:38.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:38.690" endtime="20230602 11:25:38.690"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:25:37.954" endtime="20230602 11:25:38.690"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:38.691" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:38.691" endtime="20230602 11:25:38.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:38.691" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:38.691" endtime="20230602 11:25:38.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:38.692" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:38.691" endtime="20230602 11:25:38.692"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:38.692" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:38.692" endtime="20230602 11:25:38.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:38.692" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:38.692" endtime="20230602 11:25:38.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:38.692" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:38.692" endtime="20230602 11:25:38.692"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:38.693" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:38.692" endtime="20230602 11:25:38.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:38.693" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:38.693" endtime="20230602 11:25:38.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:38.693" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:38.693" endtime="20230602 11:25:38.693"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:38.693" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:38.693" endtime="20230602 11:25:38.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:38.694" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:38.694" endtime="20230602 11:25:38.694"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 11:25:38.694" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 11:25:42.958" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 11:25:38.694" endtime="20230602 11:25:42.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:42.958" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230602 11:25:42.958" endtime="20230602 11:25:42.958"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:42.958" endtime="20230602 11:25:42.958"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:42.959" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:42.958" endtime="20230602 11:25:42.959"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:25:38.691" endtime="20230602 11:25:42.959"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:42.959" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:42.959" endtime="20230602 11:25:42.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:42.960" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:42.959" endtime="20230602 11:25:42.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:42.960" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:42.960" endtime="20230602 11:25:42.960"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:42.960" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:42.960" endtime="20230602 11:25:42.960"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 11:25:42.960" endtime="20230602 11:25:42.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:42.961" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:42.960" endtime="20230602 11:25:42.961"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:42.961" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:42.961" endtime="20230602 11:25:42.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:42.961" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:42.961" endtime="20230602 11:25:42.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:42.961" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:42.961" endtime="20230602 11:25:42.961"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:42.961" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:42.961" endtime="20230602 11:25:42.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:42.962" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:42.962" endtime="20230602 11:25:42.962"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 11:25:42.962" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 11:25:46.939" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 11:25:42.962" endtime="20230602 11:25:46.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:46.939" level="INFO">
</msg>
<status status="PASS" starttime="20230602 11:25:46.939" endtime="20230602 11:25:46.939"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:46.939" endtime="20230602 11:25:46.940"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:46.940" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:46.940" endtime="20230602 11:25:46.940"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:25:42.959" endtime="20230602 11:25:46.940"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:46.941" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:46.941" endtime="20230602 11:25:46.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:46.941" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:46.941" endtime="20230602 11:25:46.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:46.941" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:46.941" endtime="20230602 11:25:46.941"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:46.941" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:46.941" endtime="20230602 11:25:46.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:46.942" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230602 11:25:46.941" endtime="20230602 11:25:46.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:46.942" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:46.942" endtime="20230602 11:25:46.942"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:46.942" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:46.942" endtime="20230602 11:25:46.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:46.942" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:25:46.942" endtime="20230602 11:25:46.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:46.943" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:46.942" endtime="20230602 11:25:46.943"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:46.943" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:46.943" endtime="20230602 11:25:46.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:46.943" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230602 11:25:46.943" endtime="20230602 11:25:46.943"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230602 11:25:46.944" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230602 11:25:50.112" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230602 11:25:46.943" endtime="20230602 11:25:50.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:50.112" level="INFO">
</msg>
<status status="PASS" starttime="20230602 11:25:50.112" endtime="20230602 11:25:50.112"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:25:50.112" endtime="20230602 11:25:50.113"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:25:50.113" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:25:50.113" endtime="20230602 11:25:50.113"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230602 11:25:46.940" endtime="20230602 11:25:50.113"/>
</test>
<status status="PASS" starttime="20230602 11:25:36.459" endtime="20230602 11:25:50.113"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 11:25:50.372" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 11:25:50.371" endtime="20230602 11:25:50.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:50.373" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8e5e973d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 11:25:50.372" endtime="20230602 11:25:50.373"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 11:25:50.373" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 11:25:50.373" endtime="20230602 11:25:50.373"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 11:25:50.373" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 11:25:50.373" endtime="20230602 11:25:50.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:25:50.374" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:25:50.373" endtime="20230602 11:25:50.374"/>
</kw>
<status status="PASS" starttime="20230602 11:25:50.373" endtime="20230602 11:25:50.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:50.375" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:25:50.374" endtime="20230602 11:25:50.375"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:25:50.378" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:25:50.378" endtime="20230602 11:25:50.378"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 11:25:50.378" endtime="20230602 11:25:50.378"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 11:25:50.379" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 11:25:50.384" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:25:50.378" endtime="20230602 11:25:50.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:25:50.385" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:25:50.384" endtime="20230602 11:25:50.385"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 11:25:50.385" endtime="20230602 11:25:50.385"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:25:50.385" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:25:50.385" endtime="20230602 11:25:50.514"/>
</kw>
<status status="PASS" starttime="20230602 11:25:50.378" endtime="20230602 11:25:50.514"/>
</kw>
<status status="PASS" starttime="20230602 11:25:50.375" endtime="20230602 11:25:50.514"/>
</kw>
<status status="PASS" starttime="20230602 11:25:50.371" endtime="20230602 11:25:50.514"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:25:50.515" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 11:25:50.514" endtime="20230602 11:25:50.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:25:50.515" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 11:25:50.515" endtime="20230602 11:25:50.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:50.515" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:25:50.515" endtime="20230602 11:25:50.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:25:50.515" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:25:50.515" endtime="20230602 11:25:50.515"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:02.294" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 11:25:50.515" endtime="20230602 11:26:02.294"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:02.576" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:02.576" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 11:26:02.294" endtime="20230602 11:26:02.576"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:02.858" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:02.858" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:02.576" endtime="20230602 11:26:02.962"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:03.463" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:02.962" endtime="20230602 11:26:03.463"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:03.463" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:03.463" endtime="20230602 11:26:03.589"/>
</kw>
<status status="PASS" starttime="20230602 11:25:50.514" endtime="20230602 11:26:03.589"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:03.589" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:03.589" endtime="20230602 11:26:03.589"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:03.590" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:03.590"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:03.872" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 11:26:03.872" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 11:26:03.593" endtime="20230602 11:26:03.974"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:03.974" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:03.974" endtime="20230602 11:26:04.096"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:04.597" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:04.097" endtime="20230602 11:26:04.597"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 11:26:04.598" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 11:26:04.598" level="INFO">Process completed.</msg>
<msg timestamp="20230602 11:26:04.598" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 11:26:04.598" endtime="20230602 11:26:04.598"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:04.598" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 11:26:04.598" endtime="20230602 11:26:04.598"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:04.599" level="INFO"/>
<status status="PASS" starttime="20230602 11:26:04.599" endtime="20230602 11:26:04.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:26:04.600" endtime="20230602 11:26:04.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 11:26:04.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 11:26:04.600" endtime="20230602 11:26:04.601"/>
</kw>
<status status="PASS" starttime="20230602 11:26:04.599" endtime="20230602 11:26:04.601"/>
</kw>
<status status="PASS" starttime="20230602 11:26:04.598" endtime="20230602 11:26:04.601"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:04.601" endtime="20230602 11:26:04.601"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 11:26:04.601" endtime="20230602 11:26:04.601"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:04.601" endtime="20230602 11:26:04.601"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 11:26:04.601" endtime="20230602 11:26:04.601"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:04.601" endtime="20230602 11:26:04.601"/>
</branch>
<status status="PASS" starttime="20230602 11:26:04.598" endtime="20230602 11:26:04.601"/>
</if>
<status status="PASS" starttime="20230602 11:26:04.597" endtime="20230602 11:26:04.601"/>
</kw>
<status status="PASS" starttime="20230602 11:26:03.593" endtime="20230602 11:26:04.602"/>
</kw>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:04.602"/>
</kw>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:04.602"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 11:26:04.602" endtime="20230602 11:26:04.602"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:04.602" endtime="20230602 11:26:04.602"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:04.602" endtime="20230602 11:26:04.602"/>
</branch>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:04.602"/>
</if>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:04.602"/>
</branch>
<status status="PASS" starttime="20230602 11:26:03.590" endtime="20230602 11:26:04.602"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:04.602" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 11:26:04.602" endtime="20230602 11:26:04.602"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:05.103" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:04.602" endtime="20230602 11:26:05.103"/>
</kw>
<status status="PASS" starttime="20230602 11:26:03.589" endtime="20230602 11:26:05.103"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:25:50.371" endtime="20230602 11:26:05.103"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 11:26:05.105" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 11:26:05.104" endtime="20230602 11:26:05.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:05.105" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8e5e973d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 11:26:05.105" endtime="20230602 11:26:05.105"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 11:26:05.106" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 11:26:05.105" endtime="20230602 11:26:05.106"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 11:26:05.106" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 11:26:05.106" endtime="20230602 11:26:05.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:05.106" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:05.106" endtime="20230602 11:26:05.106"/>
</kw>
<status status="PASS" starttime="20230602 11:26:05.105" endtime="20230602 11:26:05.106"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:05.107" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:05.107" endtime="20230602 11:26:05.107"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:05.110" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:05.110" endtime="20230602 11:26:05.110"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 11:26:05.110" endtime="20230602 11:26:05.110"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 11:26:05.111" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 11:26:05.116" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:05.110" endtime="20230602 11:26:05.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:05.116" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:05.116" endtime="20230602 11:26:05.116"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 11:26:05.116" endtime="20230602 11:26:05.117"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:05.117" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:05.117" endtime="20230602 11:26:05.238"/>
</kw>
<status status="PASS" starttime="20230602 11:26:05.110" endtime="20230602 11:26:05.238"/>
</kw>
<status status="PASS" starttime="20230602 11:26:05.107" endtime="20230602 11:26:05.238"/>
</kw>
<status status="PASS" starttime="20230602 11:26:05.104" endtime="20230602 11:26:05.238"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:05.239" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 11:26:05.239" endtime="20230602 11:26:05.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:05.239" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 11:26:05.239" endtime="20230602 11:26:05.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:05.240" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:05.239" endtime="20230602 11:26:05.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:05.240" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:05.240" endtime="20230602 11:26:05.240"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:16.396" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:05.240" endtime="20230602 11:26:16.396"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:16.679" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:16.679" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 11:26:16.396" endtime="20230602 11:26:16.679"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:16.964" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:16.964" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:16.680" endtime="20230602 11:26:17.067"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:17.567" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:17.067" endtime="20230602 11:26:17.567"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:17.568" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:17.568" endtime="20230602 11:26:17.693"/>
</kw>
<status status="PASS" starttime="20230602 11:26:05.239" endtime="20230602 11:26:17.693"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:17.694" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230602 11:26:17.694" endtime="20230602 11:26:17.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:17.694" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230602 11:26:17.694" endtime="20230602 11:26:17.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:17.694" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:17.694" endtime="20230602 11:26:17.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:17.694" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:17.694" endtime="20230602 11:26:17.695"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:17.982" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230602 11:26:17.695" endtime="20230602 11:26:17.982"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:18.265" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230602 11:26:18.265" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230602 11:26:17.982" endtime="20230602 11:26:18.265"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:18.548" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230602 11:26:18.549" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230602 11:26:18.265" endtime="20230602 11:26:18.651"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:19.152" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:18.652" endtime="20230602 11:26:19.152"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:19.153" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:19.152" endtime="20230602 11:26:19.278"/>
</kw>
<status status="PASS" starttime="20230602 11:26:17.693" endtime="20230602 11:26:19.278"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:19.279" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:19.279" endtime="20230602 11:26:19.279"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:19.280" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 11:26:19.279" endtime="20230602 11:26:19.280"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:19.562" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 11:26:19.562" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 11:26:19.283" endtime="20230602 11:26:19.664"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:19.665" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:19.665" endtime="20230602 11:26:19.788"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:20.289" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:19.789" endtime="20230602 11:26:20.289"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 11:26:20.290" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 11:26:20.290" level="INFO">Process completed.</msg>
<msg timestamp="20230602 11:26:20.290" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 11:26:20.290" endtime="20230602 11:26:20.290"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:20.290" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 11:26:20.290" endtime="20230602 11:26:20.290"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:20.292" level="INFO"/>
<status status="PASS" starttime="20230602 11:26:20.291" endtime="20230602 11:26:20.292"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:26:20.292" endtime="20230602 11:26:20.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 11:26:20.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 11:26:20.292" endtime="20230602 11:26:20.293"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.291" endtime="20230602 11:26:20.293"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.291" endtime="20230602 11:26:20.293"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:20.293" endtime="20230602 11:26:20.293"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 11:26:20.293" endtime="20230602 11:26:20.293"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:20.293" endtime="20230602 11:26:20.293"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 11:26:20.293" endtime="20230602 11:26:20.293"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:20.293" endtime="20230602 11:26:20.293"/>
</branch>
<status status="PASS" starttime="20230602 11:26:20.291" endtime="20230602 11:26:20.293"/>
</if>
<status status="PASS" starttime="20230602 11:26:20.289" endtime="20230602 11:26:20.294"/>
</kw>
<status status="PASS" starttime="20230602 11:26:19.283" endtime="20230602 11:26:20.294"/>
</kw>
<status status="PASS" starttime="20230602 11:26:19.280" endtime="20230602 11:26:20.294"/>
</kw>
<status status="PASS" starttime="20230602 11:26:19.280" endtime="20230602 11:26:20.294"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 11:26:20.294" endtime="20230602 11:26:20.294"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:20.294" endtime="20230602 11:26:20.294"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:20.294" endtime="20230602 11:26:20.294"/>
</branch>
<status status="PASS" starttime="20230602 11:26:19.280" endtime="20230602 11:26:20.294"/>
</if>
<status status="PASS" starttime="20230602 11:26:19.279" endtime="20230602 11:26:20.294"/>
</branch>
<status status="PASS" starttime="20230602 11:26:19.279" endtime="20230602 11:26:20.294"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:20.294" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 11:26:20.294" endtime="20230602 11:26:20.294"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:20.795" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:20.294" endtime="20230602 11:26:20.795"/>
</kw>
<status status="PASS" starttime="20230602 11:26:19.279" endtime="20230602 11:26:20.795"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:26:05.103" endtime="20230602 11:26:20.795"/>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.796" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230602 11:26:20.796" endtime="20230602 11:26:20.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.796" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:26:20.796" endtime="20230602 11:26:20.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.797" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230602 11:26:20.796" endtime="20230602 11:26:20.797"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:26:20.797" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:26:20.797" endtime="20230602 11:26:20.797"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230602 11:26:20.797" endtime="20230602 11:26:20.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.798" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:26:20.797" endtime="20230602 11:26:20.798"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230602 11:26:20.798" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230602 11:26:20.798" endtime="20230602 11:26:20.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:20.798" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230602 11:26:20.798" endtime="20230602 11:26:20.798"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230602 11:26:20.798" level="INFO">${epoch} = 1685705180</msg>
<status status="PASS" starttime="20230602 11:26:20.798" endtime="20230602 11:26:20.798"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 11:26:20.799" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 11:26:20.799" endtime="20230602 11:26:20.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:20.799" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8e5e973d90&gt;, '@{appargs}': ['-i', 'blank_1685705180.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 11:26:20.799" endtime="20230602 11:26:20.799"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 11:26:20.800" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 11:26:20.800" endtime="20230602 11:26:20.800"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 11:26:20.800" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 11:26:20.800" endtime="20230602 11:26:20.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:20.800" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:20.800" endtime="20230602 11:26:20.800"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.799" endtime="20230602 11:26:20.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.801" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:20.801" endtime="20230602 11:26:20.801"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:20.804" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:20.804" endtime="20230602 11:26:20.804"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 11:26:20.804" endtime="20230602 11:26:20.804"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 11:26:20.805" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685705180.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg timestamp="20230602 11:26:20.809" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:20.804" endtime="20230602 11:26:20.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:20.810" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:20.810" endtime="20230602 11:26:20.810"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 11:26:20.810" endtime="20230602 11:26:20.810"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:20.811" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:20.811" endtime="20230602 11:26:20.932"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.804" endtime="20230602 11:26:20.932"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.801" endtime="20230602 11:26:20.932"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.798" endtime="20230602 11:26:20.932"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:20.933" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 11:26:20.933" endtime="20230602 11:26:20.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:20.934" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 11:26:20.933" endtime="20230602 11:26:20.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:20.934" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:20.934" endtime="20230602 11:26:20.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:20.934" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:20.934" endtime="20230602 11:26:20.934"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:23.525" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:20.934" endtime="20230602 11:26:23.525"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:23.808" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:23.808" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 11:26:23.526" endtime="20230602 11:26:23.808"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:24.091" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:24.091" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:23.808" endtime="20230602 11:26:24.193"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:24.694" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:24.194" endtime="20230602 11:26:24.695"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:24.695" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:24.695" endtime="20230602 11:26:24.820"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.933" endtime="20230602 11:26:24.820"/>
</kw>
<status status="PASS" starttime="20230602 11:26:20.933" endtime="20230602 11:26:24.820"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:24.821" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:24.821" endtime="20230602 11:26:24.821"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:24.821" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 11:26:24.821" endtime="20230602 11:26:24.821"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:25.104" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 11:26:25.104" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 11:26:24.825" endtime="20230602 11:26:25.206"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:25.207" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:25.206" endtime="20230602 11:26:25.331"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:25.831" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:25.331" endtime="20230602 11:26:25.831"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 11:26:25.832" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 11:26:25.832" level="INFO">Process completed.</msg>
<msg timestamp="20230602 11:26:25.833" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 11:26:25.832" endtime="20230602 11:26:25.833"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:25.833" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 11:26:25.833" endtime="20230602 11:26:25.833"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:25.834" level="INFO"/>
<status status="PASS" starttime="20230602 11:26:25.833" endtime="20230602 11:26:25.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:26:25.834" endtime="20230602 11:26:25.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 11:26:25.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 11:26:25.835" endtime="20230602 11:26:25.836"/>
</kw>
<status status="PASS" starttime="20230602 11:26:25.833" endtime="20230602 11:26:25.836"/>
</kw>
<status status="PASS" starttime="20230602 11:26:25.833" endtime="20230602 11:26:25.836"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.836"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.836"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.836"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.836"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.836"/>
</branch>
<status status="PASS" starttime="20230602 11:26:25.833" endtime="20230602 11:26:25.836"/>
</if>
<status status="PASS" starttime="20230602 11:26:25.832" endtime="20230602 11:26:25.836"/>
</kw>
<status status="PASS" starttime="20230602 11:26:24.825" endtime="20230602 11:26:25.836"/>
</kw>
<status status="PASS" starttime="20230602 11:26:24.822" endtime="20230602 11:26:25.836"/>
</kw>
<status status="PASS" starttime="20230602 11:26:24.822" endtime="20230602 11:26:25.836"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 11:26:25.837" endtime="20230602 11:26:25.837"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:25.837" endtime="20230602 11:26:25.837"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:25.836" endtime="20230602 11:26:25.837"/>
</branch>
<status status="PASS" starttime="20230602 11:26:24.822" endtime="20230602 11:26:25.837"/>
</if>
<status status="PASS" starttime="20230602 11:26:24.821" endtime="20230602 11:26:25.837"/>
</branch>
<status status="PASS" starttime="20230602 11:26:24.821" endtime="20230602 11:26:25.837"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:25.837" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 11:26:25.837" endtime="20230602 11:26:25.837"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:26.337" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:25.837" endtime="20230602 11:26:26.338"/>
</kw>
<status status="PASS" starttime="20230602 11:26:24.821" endtime="20230602 11:26:26.338"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230602 11:26:20.796" endtime="20230602 11:26:26.338"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230602 11:26:26.340" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230602 11:26:26.339" endtime="20230602 11:26:26.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:26.340" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8e5e973d90&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230602 11:26:26.340" endtime="20230602 11:26:26.340"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230602 11:26:26.340" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230602 11:26:26.340" endtime="20230602 11:26:26.341"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 11:26:26.341" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230602 11:26:26.341" endtime="20230602 11:26:26.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:26.341" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:26.341" endtime="20230602 11:26:26.341"/>
</kw>
<status status="PASS" starttime="20230602 11:26:26.340" endtime="20230602 11:26:26.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:26.342" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:26.341" endtime="20230602 11:26:26.342"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:26.345" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:26.345" endtime="20230602 11:26:26.345"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230602 11:26:26.346" endtime="20230602 11:26:26.346"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230602 11:26:26.346" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230602 11:26:26.351" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:26.346" endtime="20230602 11:26:26.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:26.352" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/home/runner/work/rfswarm/rfswar...&gt;</msg>
<status status="PASS" starttime="20230602 11:26:26.351" endtime="20230602 11:26:26.352"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230602 11:26:26.352" endtime="20230602 11:26:26.352"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:26.352" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:26.352" endtime="20230602 11:26:26.474"/>
</kw>
<status status="PASS" starttime="20230602 11:26:26.345" endtime="20230602 11:26:26.474"/>
</kw>
<status status="PASS" starttime="20230602 11:26:26.342" endtime="20230602 11:26:26.474"/>
</kw>
<status status="PASS" starttime="20230602 11:26:26.339" endtime="20230602 11:26:26.474"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:26.475" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230602 11:26:26.475" endtime="20230602 11:26:26.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:26.475" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230602 11:26:26.475" endtime="20230602 11:26:26.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:26.475" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:26.475" endtime="20230602 11:26:26.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:26.476" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:26.476" endtime="20230602 11:26:26.476"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:37.439" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:26.476" endtime="20230602 11:26:37.439"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:37.721" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:37.721" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230602 11:26:37.439" endtime="20230602 11:26:37.721"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:38.004" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230602 11:26:38.004" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230602 11:26:37.721" endtime="20230602 11:26:38.106"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:38.607" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:38.107" endtime="20230602 11:26:38.607"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:38.608" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:38.608" endtime="20230602 11:26:38.733"/>
</kw>
<status status="PASS" starttime="20230602 11:26:26.474" endtime="20230602 11:26:38.733"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:38.733" level="INFO">${sectnamel} = report</msg>
<status status="PASS" starttime="20230602 11:26:38.733" endtime="20230602 11:26:38.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:38.734" level="INFO">${img} = reporter_ubuntu_section_report.png</msg>
<status status="PASS" starttime="20230602 11:26:38.734" endtime="20230602 11:26:38.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:38.734" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:38.734" endtime="20230602 11:26:38.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:38.734" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:38.734" endtime="20230602 11:26:38.734"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:39.034" level="INFO">Image "reporter_ubuntu_section_report.png" found at (49, 126)</msg>
<status status="PASS" starttime="20230602 11:26:38.734" endtime="20230602 11:26:39.034"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:39.325" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_report.png" found at Box(left=21, top=102, width=56, height=48)</msg>
<msg timestamp="20230602 11:26:39.325" level="INFO">@{coordinates} = [ 49 | 126 ]</msg>
<status status="PASS" starttime="20230602 11:26:39.034" endtime="20230602 11:26:39.325"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:39.615" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_report.png" found at Box(left=21, top=102, width=56, height=48)</msg>
<msg timestamp="20230602 11:26:39.615" level="INFO">Clicking image "reporter_ubuntu_section_report.png" in position (49, 126)</msg>
<status status="PASS" starttime="20230602 11:26:39.325" endtime="20230602 11:26:39.717"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:40.217" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:39.717" endtime="20230602 11:26:40.218"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:40.218" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:40.218" endtime="20230602 11:26:40.369"/>
</kw>
<status status="PASS" starttime="20230602 11:26:38.733" endtime="20230602 11:26:40.369"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:40.369" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:40.369" endtime="20230602 11:26:40.497"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:40.498" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230602 11:26:40.497" endtime="20230602 11:26:40.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:40.498" level="INFO">${img} = reporter_ubuntu_button_addsection.png</msg>
<status status="PASS" starttime="20230602 11:26:40.498" endtime="20230602 11:26:40.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:40.498" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:40.498" endtime="20230602 11:26:40.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:40.498" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:40.498" endtime="20230602 11:26:40.498"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:40.777" level="INFO">Image "reporter_ubuntu_button_addsection.png" found at (14, 96)</msg>
<status status="PASS" starttime="20230602 11:26:40.498" endtime="20230602 11:26:40.777"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:41.060" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230602 11:26:41.060" level="INFO">@{coordinates} = [ 14 | 96 ]</msg>
<status status="PASS" starttime="20230602 11:26:40.777" endtime="20230602 11:26:41.060"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:41.341" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230602 11:26:41.341" level="INFO">Clicking image "reporter_ubuntu_button_addsection.png" in position (14, 96)</msg>
<status status="PASS" starttime="20230602 11:26:41.061" endtime="20230602 11:26:41.444"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:41.944" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:41.444" endtime="20230602 11:26:41.944"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:41.945" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:41.945" endtime="20230602 11:26:42.072"/>
</kw>
<status status="PASS" starttime="20230602 11:26:40.497" endtime="20230602 11:26:42.072"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230602 11:26:42.364" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_sectionname.png" found at Box(left=864, top=518, width=112, height=21)</msg>
<msg timestamp="20230602 11:26:42.365" level="INFO">Clicking 1 time(s) at (920, 548) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230602 11:26:42.072" endtime="20230602 11:26:42.467"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230602 11:26:42.467" endtime="20230602 11:26:42.577"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:42.578" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230602 11:26:42.578" endtime="20230602 11:26:42.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:42.578" level="INFO">${img} = reporter_ubuntu_button_ok.png</msg>
<status status="PASS" starttime="20230602 11:26:42.578" endtime="20230602 11:26:42.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:42.578" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:42.578" endtime="20230602 11:26:42.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:42.578" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:42.578" endtime="20230602 11:26:42.578"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:42.859" level="INFO">Image "reporter_ubuntu_button_ok.png" found at (896, 589)</msg>
<status status="PASS" starttime="20230602 11:26:42.579" endtime="20230602 11:26:42.859"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:43.141" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230602 11:26:43.141" level="INFO">@{coordinates} = [ 896 | 589 ]</msg>
<status status="PASS" starttime="20230602 11:26:42.860" endtime="20230602 11:26:43.141"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:43.420" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230602 11:26:43.420" level="INFO">Clicking image "reporter_ubuntu_button_ok.png" in position (896, 589)</msg>
<status status="PASS" starttime="20230602 11:26:43.141" endtime="20230602 11:26:43.523"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:44.024" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:43.523" endtime="20230602 11:26:44.024"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:44.024" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:44.024" endtime="20230602 11:26:44.150"/>
</kw>
<status status="PASS" starttime="20230602 11:26:42.577" endtime="20230602 11:26:44.150"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:44.150" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:44.150" endtime="20230602 11:26:44.275"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<kw name="Convert To Lower Case" library="String">
<var>${sectnamel}</var>
<arg>${sectname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:44.276" level="INFO">${sectnamel} = issue#149</msg>
<status status="PASS" starttime="20230602 11:26:44.276" endtime="20230602 11:26:44.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_section_${sectnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:44.276" level="INFO">${img} = reporter_ubuntu_section_issue#149.png</msg>
<status status="PASS" starttime="20230602 11:26:44.276" endtime="20230602 11:26:44.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:44.276" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230602 11:26:44.276" endtime="20230602 11:26:44.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:44.276" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230602 11:26:44.276" endtime="20230602 11:26:44.276"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230602 11:26:44.555" level="INFO">Image "reporter_ubuntu_section_issue#149.png" found at (82, 281)</msg>
<status status="PASS" starttime="20230602 11:26:44.276" endtime="20230602 11:26:44.555"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230602 11:26:44.833" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_issue#149.png" found at Box(left=38, top=271, width=89, height=20)</msg>
<msg timestamp="20230602 11:26:44.834" level="INFO">@{coordinates} = [ 82 | 281 ]</msg>
<status status="PASS" starttime="20230602 11:26:44.555" endtime="20230602 11:26:44.834"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:45.113" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_section_issue#149.png" found at Box(left=38, top=271, width=89, height=20)</msg>
<msg timestamp="20230602 11:26:45.113" level="INFO">Clicking image "reporter_ubuntu_section_issue#149.png" in position (82, 281)</msg>
<status status="PASS" starttime="20230602 11:26:44.834" endtime="20230602 11:26:45.217"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:45.717" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:45.217" endtime="20230602 11:26:45.717"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:45.718" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:45.718" endtime="20230602 11:26:45.841"/>
</kw>
<status status="PASS" starttime="20230602 11:26:44.275" endtime="20230602 11:26:45.841"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<kw name="Convert To Lower Case" library="String">
<var>${labell}</var>
<arg>${label}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230602 11:26:45.842" level="INFO">${labell} = type</msg>
<status status="PASS" starttime="20230602 11:26:45.842" endtime="20230602 11:26:45.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_label_${labell}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:45.842" level="INFO">${img} = reporter_ubuntu_label_type.png</msg>
<status status="PASS" starttime="20230602 11:26:45.842" endtime="20230602 11:26:45.842"/>
</kw>
<kw name="Get Image Size">
<var>${imgsize}</var>
<arg>${IMAGE_DIR}${/}${img}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${imgfile}</var>
<arg>"${imgfile}".replace('\' '/')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230602 11:26:45.843" level="FAIL">Evaluating expression '"/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_type.png".replace('' '/')' failed: TypeError: replace expected at least 2 arguments, got 1</msg>
<status status="FAIL" starttime="20230602 11:26:45.843" endtime="20230602 11:26:45.843"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${img}</var>
<arg>PIL.Image.open("${imgfile}")</arg>
<arg>PIL.Image</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${imgsize}</var>
<arg>${img.size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<return>
<value>${imgsize}</value>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</return>
<status status="FAIL" starttime="20230602 11:26:45.842" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${imgsize}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${offsetx}</var>
<arg>int(${imgsize}[0]/2)+5</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${offsetx}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.844"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.844" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${coordinates}[0]+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${coordinates}[1]+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<status status="FAIL" starttime="20230602 11:26:45.841" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.845" endtime="20230602 11:26:45.845"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Find Text">
<arg>Filter Type:</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Find Text">
<arg>Result Name</arg>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.846"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:45.847" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:45.846" endtime="20230602 11:26:45.847"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:45.847" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:45.847"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230602 11:26:46.128" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230602 11:26:46.128" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230602 11:26:45.850" endtime="20230602 11:26:46.231"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230602 11:26:46.231" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230602 11:26:46.231" endtime="20230602 11:26:46.354"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:46.855" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:46.354" endtime="20230602 11:26:46.855"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230602 11:26:46.855" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230602 11:26:46.856" level="INFO">Process completed.</msg>
<msg timestamp="20230602 11:26:46.856" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230602 11:26:46.855" endtime="20230602 11:26:46.856"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230602 11:26:46.856" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230602 11:26:46.856" endtime="20230602 11:26:46.856"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230602 11:26:46.857" level="INFO"/>
<status status="PASS" starttime="20230602 11:26:46.857" endtime="20230602 11:26:46.857"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230602 11:26:46.857" endtime="20230602 11:26:46.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230602 11:26:46.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230602 11:26:46.858" endtime="20230602 11:26:46.858"/>
</kw>
<status status="PASS" starttime="20230602 11:26:46.856" endtime="20230602 11:26:46.859"/>
</kw>
<status status="PASS" starttime="20230602 11:26:46.856" endtime="20230602 11:26:46.859"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</branch>
<status status="PASS" starttime="20230602 11:26:46.856" endtime="20230602 11:26:46.859"/>
</if>
<status status="PASS" starttime="20230602 11:26:46.855" endtime="20230602 11:26:46.859"/>
</kw>
<status status="PASS" starttime="20230602 11:26:45.850" endtime="20230602 11:26:46.859"/>
</kw>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:46.859"/>
</kw>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:46.859"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.859"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.860"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:46.859" endtime="20230602 11:26:46.860"/>
</branch>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:46.860"/>
</if>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:46.860"/>
</branch>
<status status="PASS" starttime="20230602 11:26:45.847" endtime="20230602 11:26:46.860"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:46.860" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 11:26:46.860" endtime="20230602 11:26:46.860"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:47.360" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:46.860" endtime="20230602 11:26:47.360"/>
</kw>
<status status="PASS" starttime="20230602 11:26:45.846" endtime="20230602 11:26:47.361"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 11:26:26.338" endtime="20230602 11:26:47.361">Evaluating expression '"/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_type.png".replace('' '/')' failed: TypeError: replace expected at least 2 arguments, got 1</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="97">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230602 11:26:47.362" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230602 11:26:47.362" endtime="20230602 11:26:47.362"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230602 11:26:47.363" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230602 11:26:47.362" endtime="20230602 11:26:47.363"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.363"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.363"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.363"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230602 11:26:47.364" endtime="20230602 11:26:47.364"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230602 11:26:47.364" endtime="20230602 11:26:47.364"/>
</kw>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.364"/>
</branch>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.364"/>
</if>
<status status="NOT RUN" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.364"/>
</branch>
<status status="PASS" starttime="20230602 11:26:47.363" endtime="20230602 11:26:47.364"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230602 11:26:47.364" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230602 11:26:47.364" endtime="20230602 11:26:47.364"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230602 11:26:47.864" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230602 11:26:47.364" endtime="20230602 11:26:47.865"/>
</kw>
<status status="PASS" starttime="20230602 11:26:47.362" endtime="20230602 11:26:47.865"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230602 11:26:47.361" endtime="20230602 11:26:47.865">AssertionError</status>
</test>
<status status="FAIL" starttime="20230602 11:25:50.114" endtime="20230602 11:26:47.865"/>
</suite>
<status status="FAIL" starttime="20230602 11:25:36.443" endtime="20230602 11:26:47.867"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
