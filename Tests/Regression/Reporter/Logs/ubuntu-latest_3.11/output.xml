<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on linux)" generated="20230529 11:53:07.759" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:53:07.787" endtime="20230529 11:53:07.787"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 11:53:07.788" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.788" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 11:53:07.787" endtime="20230529 11:53:07.788"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 11:53:07.788" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:53:07.789" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 11:53:07.788" endtime="20230529 11:53:07.789"/>
</kw>
<status status="PASS" starttime="20230529 11:53:07.787" endtime="20230529 11:53:07.789"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:53:07.791" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:53:09.340" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230529 11:53:07.790" endtime="20230529 11:53:09.340"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:53:09.340" endtime="20230529 11:53:09.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:09.340" endtime="20230529 11:53:09.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:09.340" endtime="20230529 11:53:09.341"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:07.789" endtime="20230529 11:53:09.341"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:53:09.342" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:53:10.064" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230529 11:53:09.341" endtime="20230529 11:53:10.064"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:53:10.064" endtime="20230529 11:53:10.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:10.065" endtime="20230529 11:53:10.065"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:09.341" endtime="20230529 11:53:10.065"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:10.065" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:10.065" endtime="20230529 11:53:10.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:10.066" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:10.065" endtime="20230529 11:53:10.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:10.066" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:10.066" endtime="20230529 11:53:10.066"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:10.066" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:10.066" endtime="20230529 11:53:10.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:10.066" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:10.066" endtime="20230529 11:53:10.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:10.067" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:10.066" endtime="20230529 11:53:10.067"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:10.067" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:10.067" endtime="20230529 11:53:10.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:10.067" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:10.067" endtime="20230529 11:53:10.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:10.067" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:10.067" endtime="20230529 11:53:10.067"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:10.068" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:10.067" endtime="20230529 11:53:10.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:10.068" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:10.068" endtime="20230529 11:53:10.068"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:53:10.068" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:53:14.145" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:53:10.068" endtime="20230529 11:53:14.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:14.145" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230529 11:53:14.145" endtime="20230529 11:53:14.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:14.145" endtime="20230529 11:53:14.145"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:14.146" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:14.145" endtime="20230529 11:53:14.146"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:10.065" endtime="20230529 11:53:14.146"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:14.146" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:14.146" endtime="20230529 11:53:14.146"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:14.147" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:14.146" endtime="20230529 11:53:14.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:14.147" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:14.147" endtime="20230529 11:53:14.147"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:14.147" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:14.147" endtime="20230529 11:53:14.147"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:53:14.147" endtime="20230529 11:53:14.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:14.147" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:14.147" endtime="20230529 11:53:14.147"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:14.148" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:14.148" endtime="20230529 11:53:14.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:14.148" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:14.148" endtime="20230529 11:53:14.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:14.148" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:14.148" endtime="20230529 11:53:14.148"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:14.148" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:14.148" endtime="20230529 11:53:14.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:14.149" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:14.148" endtime="20230529 11:53:14.149"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:53:14.149" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:53:18.108" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:53:14.149" endtime="20230529 11:53:18.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:18.109" level="INFO">
</msg>
<status status="PASS" starttime="20230529 11:53:18.108" endtime="20230529 11:53:18.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:18.109" endtime="20230529 11:53:18.109"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:18.109" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:18.109" endtime="20230529 11:53:18.109"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:14.146" endtime="20230529 11:53:18.109"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:18.110" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:18.110" endtime="20230529 11:53:18.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:18.110" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:18.110" endtime="20230529 11:53:18.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:18.111" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:18.110" endtime="20230529 11:53:18.111"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:18.111" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:18.111" endtime="20230529 11:53:18.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:18.111" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 11:53:18.111" endtime="20230529 11:53:18.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:18.111" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:18.111" endtime="20230529 11:53:18.111"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:18.112" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:18.112" endtime="20230529 11:53:18.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:18.112" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:18.112" endtime="20230529 11:53:18.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:18.112" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:18.112" endtime="20230529 11:53:18.112"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:18.112" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:18.112" endtime="20230529 11:53:18.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:18.113" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 11:53:18.112" endtime="20230529 11:53:18.113"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 11:53:18.113" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 11:53:21.266" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 11:53:18.113" endtime="20230529 11:53:21.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:21.267" level="INFO">
</msg>
<status status="PASS" starttime="20230529 11:53:21.267" endtime="20230529 11:53:21.267"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:21.267" endtime="20230529 11:53:21.267"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:21.267" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:21.267" endtime="20230529 11:53:21.267"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230529 11:53:18.110" endtime="20230529 11:53:21.268"/>
</test>
<status status="PASS" starttime="20230529 11:53:07.776" endtime="20230529 11:53:21.268"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:53:21.469" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:53:21.469" endtime="20230529 11:53:21.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:21.469" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8aaf5ba390&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:53:21.469" endtime="20230529 11:53:21.470"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:53:21.470" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:53:21.470" endtime="20230529 11:53:21.470"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:53:21.470" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:53:21.470" endtime="20230529 11:53:21.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:21.471" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:21.471" endtime="20230529 11:53:21.471"/>
</kw>
<status status="PASS" starttime="20230529 11:53:21.470" endtime="20230529 11:53:21.471"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:21.472" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:21.472" endtime="20230529 11:53:21.472"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:21.475" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:21.475" endtime="20230529 11:53:21.475"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:53:21.476" endtime="20230529 11:53:21.476"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:53:21.476" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:53:21.476" endtime="20230529 11:53:21.480"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:53:21.480" endtime="20230529 11:53:21.481"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:21.481" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:21.481" endtime="20230529 11:53:21.602"/>
</kw>
<status status="PASS" starttime="20230529 11:53:21.475" endtime="20230529 11:53:21.602"/>
</kw>
<status status="PASS" starttime="20230529 11:53:21.472" endtime="20230529 11:53:21.602"/>
</kw>
<status status="PASS" starttime="20230529 11:53:21.468" endtime="20230529 11:53:21.602"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:53:21.603" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:53:21.603" endtime="20230529 11:53:21.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:21.603" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:53:21.603" endtime="20230529 11:53:21.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:21.604" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:53:21.603" endtime="20230529 11:53:21.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:21.604" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:53:21.604" endtime="20230529 11:53:21.604"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:53:33.456" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:21.604" endtime="20230529 11:53:33.456"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:53:33.720" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:33.720" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:53:33.457" endtime="20230529 11:53:33.720"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:33.986" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:33.986" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:33.721" endtime="20230529 11:53:34.089"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:34.190" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:34.089" endtime="20230529 11:53:34.190"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:34.190" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:34.190" endtime="20230529 11:53:34.306"/>
</kw>
<status status="PASS" starttime="20230529 11:53:21.603" endtime="20230529 11:53:34.306"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:34.307" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:34.306" endtime="20230529 11:53:34.307"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:34.307" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:53:34.307" endtime="20230529 11:53:34.307"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:34.569" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:53:34.569" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:53:34.311" endtime="20230529 11:53:34.671"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:34.671" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:34.671" endtime="20230529 11:53:34.784"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:35.285" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:34.784" endtime="20230529 11:53:35.285"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:53:35.286" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:53:35.286" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:53:35.286" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:53:35.285" endtime="20230529 11:53:35.286"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:35.286" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:53:35.286" endtime="20230529 11:53:35.286"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:35.287" level="INFO"/>
<status status="PASS" starttime="20230529 11:53:35.286" endtime="20230529 11:53:35.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:35.287" endtime="20230529 11:53:35.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:53:35.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:53:35.288" endtime="20230529 11:53:35.288"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.286" endtime="20230529 11:53:35.288"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.286" endtime="20230529 11:53:35.288"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:53:35.288" endtime="20230529 11:53:35.288"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:53:35.288" endtime="20230529 11:53:35.288"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.289"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.289"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:35.288" endtime="20230529 11:53:35.289"/>
</branch>
<status status="PASS" starttime="20230529 11:53:35.286" endtime="20230529 11:53:35.289"/>
</if>
<status status="PASS" starttime="20230529 11:53:35.285" endtime="20230529 11:53:35.289"/>
</kw>
<status status="PASS" starttime="20230529 11:53:34.310" endtime="20230529 11:53:35.289"/>
</kw>
<status status="PASS" starttime="20230529 11:53:34.307" endtime="20230529 11:53:35.289"/>
</kw>
<status status="PASS" starttime="20230529 11:53:34.307" endtime="20230529 11:53:35.289"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.289"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.289"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.289"/>
</branch>
<status status="PASS" starttime="20230529 11:53:34.307" endtime="20230529 11:53:35.289"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:35.790" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:35.289" endtime="20230529 11:53:35.790"/>
</kw>
<status status="PASS" starttime="20230529 11:53:34.306" endtime="20230529 11:53:35.790"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:21.468" endtime="20230529 11:53:35.790"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:53:35.792" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:53:35.791" endtime="20230529 11:53:35.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:35.792" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8aaf5ba390&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:53:35.792" endtime="20230529 11:53:35.792"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:53:35.797" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:53:35.792" endtime="20230529 11:53:35.797"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:53:35.798" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:53:35.798" endtime="20230529 11:53:35.798"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:35.798" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:35.798" endtime="20230529 11:53:35.798"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.792" endtime="20230529 11:53:35.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:35.798" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:35.798" endtime="20230529 11:53:35.798"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:35.802" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:35.802" endtime="20230529 11:53:35.802"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:53:35.802" endtime="20230529 11:53:35.802"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:53:35.803" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:53:35.802" endtime="20230529 11:53:35.807"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:53:35.808" endtime="20230529 11:53:35.808"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:35.808" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:35.808" endtime="20230529 11:53:35.921"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.802" endtime="20230529 11:53:35.922"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.798" endtime="20230529 11:53:35.922"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.791" endtime="20230529 11:53:35.922"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:53:35.922" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:53:35.922" endtime="20230529 11:53:35.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:35.923" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:53:35.923" endtime="20230529 11:53:35.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:35.923" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:53:35.923" endtime="20230529 11:53:35.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:35.923" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:53:35.923" endtime="20230529 11:53:35.923"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:53:47.221" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:35.923" endtime="20230529 11:53:47.221"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:53:47.484" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:47.484" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:53:47.221" endtime="20230529 11:53:47.484"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:47.748" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:47.748" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:47.484" endtime="20230529 11:53:47.850"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:47.951" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:47.851" endtime="20230529 11:53:47.951"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:47.951" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:47.951" endtime="20230529 11:53:48.071"/>
</kw>
<status status="PASS" starttime="20230529 11:53:35.922" endtime="20230529 11:53:48.071"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:53:48.071" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230529 11:53:48.071" endtime="20230529 11:53:48.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:48.072" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230529 11:53:48.071" endtime="20230529 11:53:48.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:48.072" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:53:48.072" endtime="20230529 11:53:48.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:48.072" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:53:48.072" endtime="20230529 11:53:48.072"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:53:48.339" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230529 11:53:48.072" endtime="20230529 11:53:48.339"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:53:48.617" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 11:53:48.617" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230529 11:53:48.339" endtime="20230529 11:53:48.617"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:48.882" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 11:53:48.882" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230529 11:53:48.617" endtime="20230529 11:53:48.984"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:49.085" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:48.984" endtime="20230529 11:53:49.085"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:49.085" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:49.085" endtime="20230529 11:53:49.200"/>
</kw>
<status status="PASS" starttime="20230529 11:53:48.071" endtime="20230529 11:53:49.200"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:49.201" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:49.201" endtime="20230529 11:53:49.201"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:49.201" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:53:49.201" endtime="20230529 11:53:49.201"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:49.469" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:53:49.469" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:53:49.205" endtime="20230529 11:53:49.571"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:49.571" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:49.571" endtime="20230529 11:53:49.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:50.184" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:49.684" endtime="20230529 11:53:50.184"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:53:50.185" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:53:50.185" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:53:50.185" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:53:50.185" endtime="20230529 11:53:50.185"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:50.186" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:53:50.185" endtime="20230529 11:53:50.186"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:50.187" level="INFO"/>
<status status="PASS" starttime="20230529 11:53:50.186" endtime="20230529 11:53:50.187"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:50.187" endtime="20230529 11:53:50.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:53:50.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:53:50.187" endtime="20230529 11:53:50.188"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.186" endtime="20230529 11:53:50.188"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.186" endtime="20230529 11:53:50.188"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:53:50.188" endtime="20230529 11:53:50.188"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:53:50.188" endtime="20230529 11:53:50.188"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:50.188" endtime="20230529 11:53:50.188"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:53:50.188" endtime="20230529 11:53:50.188"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:50.188" endtime="20230529 11:53:50.188"/>
</branch>
<status status="PASS" starttime="20230529 11:53:50.186" endtime="20230529 11:53:50.188"/>
</if>
<status status="PASS" starttime="20230529 11:53:50.185" endtime="20230529 11:53:50.188"/>
</kw>
<status status="PASS" starttime="20230529 11:53:49.205" endtime="20230529 11:53:50.189"/>
</kw>
<status status="PASS" starttime="20230529 11:53:49.201" endtime="20230529 11:53:50.189"/>
</kw>
<status status="PASS" starttime="20230529 11:53:49.201" endtime="20230529 11:53:50.189"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:53:50.189" endtime="20230529 11:53:50.189"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:50.189" endtime="20230529 11:53:50.189"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:50.189" endtime="20230529 11:53:50.189"/>
</branch>
<status status="PASS" starttime="20230529 11:53:49.201" endtime="20230529 11:53:50.189"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:50.689" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:50.189" endtime="20230529 11:53:50.689"/>
</kw>
<status status="PASS" starttime="20230529 11:53:49.200" endtime="20230529 11:53:50.689"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:35.791" endtime="20230529 11:53:50.690"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.690" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230529 11:53:50.690" endtime="20230529 11:53:50.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.691" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:50.691" endtime="20230529 11:53:50.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.691" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230529 11:53:50.691" endtime="20230529 11:53:50.691"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:50.691" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:50.691" endtime="20230529 11:53:50.691"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 11:53:50.691" endtime="20230529 11:53:50.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.692" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:50.692" endtime="20230529 11:53:50.692"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 11:53:50.692" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 11:53:50.692" endtime="20230529 11:53:50.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:50.692" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:50.692" endtime="20230529 11:53:50.692"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230529 11:53:50.693" level="INFO">${epoch} = 1685361230</msg>
<status status="PASS" starttime="20230529 11:53:50.692" endtime="20230529 11:53:50.693"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:53:50.693" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:53:50.693" endtime="20230529 11:53:50.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:50.694" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8aaf5ba390&gt;, '@{appargs}': ['-i', 'blank_1685361230.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:53:50.693" endtime="20230529 11:53:50.694"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:53:50.694" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:53:50.694" endtime="20230529 11:53:50.694"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:53:50.694" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:53:50.694" endtime="20230529 11:53:50.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:50.695" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:50.694" endtime="20230529 11:53:50.695"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.694" endtime="20230529 11:53:50.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.695" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:50.695" endtime="20230529 11:53:50.695"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:50.699" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:50.698" endtime="20230529 11:53:50.699"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:53:50.699" endtime="20230529 11:53:50.699"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:53:50.699" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685361230.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 11:53:50.699" endtime="20230529 11:53:50.704"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:53:50.704" endtime="20230529 11:53:50.704"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:50.705" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:50.704" endtime="20230529 11:53:50.816"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.698" endtime="20230529 11:53:50.817"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.695" endtime="20230529 11:53:50.817"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.693" endtime="20230529 11:53:50.817"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:53:50.818" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:53:50.818" endtime="20230529 11:53:50.818"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:50.818" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:53:50.818" endtime="20230529 11:53:50.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:50.818" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:53:50.818" endtime="20230529 11:53:50.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:50.818" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:53:50.818" endtime="20230529 11:53:50.818"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:53:53.205" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:50.818" endtime="20230529 11:53:53.205"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:53:53.467" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:53.467" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:53:53.205" endtime="20230529 11:53:53.467"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:53.732" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:53:53.732" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:53.467" endtime="20230529 11:53:53.834"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:53.935" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:53.835" endtime="20230529 11:53:53.935"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:53.935" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:53.935" endtime="20230529 11:53:54.050"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.817" endtime="20230529 11:53:54.050"/>
</kw>
<status status="PASS" starttime="20230529 11:53:50.817" endtime="20230529 11:53:54.050"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:54.050" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:54.050" endtime="20230529 11:53:54.050"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:54.051" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 11:53:54.051" endtime="20230529 11:53:54.051"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:53:54.314" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 11:53:54.314" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 11:53:54.054" endtime="20230529 11:53:54.415"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:54.416" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:54.415" endtime="20230529 11:53:54.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:55.031" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:54.531" endtime="20230529 11:53:55.031"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 11:53:55.032" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 11:53:55.032" level="INFO">Process completed.</msg>
<msg timestamp="20230529 11:53:55.032" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 11:53:55.032" endtime="20230529 11:53:55.032"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 11:53:55.032" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 11:53:55.032" endtime="20230529 11:53:55.033"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:55.033" level="INFO"/>
<status status="PASS" starttime="20230529 11:53:55.033" endtime="20230529 11:53:55.033"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 11:53:55.034" endtime="20230529 11:53:55.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 11:53:55.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 11:53:55.034" endtime="20230529 11:53:55.035"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.033" endtime="20230529 11:53:55.035"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.033" endtime="20230529 11:53:55.035"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:53:55.035" endtime="20230529 11:53:55.035"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 11:53:55.035" endtime="20230529 11:53:55.035"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:55.035" endtime="20230529 11:53:55.035"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 11:53:55.035" endtime="20230529 11:53:55.035"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:55.035" endtime="20230529 11:53:55.035"/>
</branch>
<status status="PASS" starttime="20230529 11:53:55.033" endtime="20230529 11:53:55.035"/>
</if>
<status status="PASS" starttime="20230529 11:53:55.031" endtime="20230529 11:53:55.035"/>
</kw>
<status status="PASS" starttime="20230529 11:53:54.054" endtime="20230529 11:53:55.036"/>
</kw>
<status status="PASS" starttime="20230529 11:53:54.051" endtime="20230529 11:53:55.036"/>
</kw>
<status status="PASS" starttime="20230529 11:53:54.051" endtime="20230529 11:53:55.036"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 11:53:55.036" endtime="20230529 11:53:55.036"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 11:53:55.036" endtime="20230529 11:53:55.036"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:53:55.036" endtime="20230529 11:53:55.036"/>
</branch>
<status status="PASS" starttime="20230529 11:53:54.051" endtime="20230529 11:53:55.036"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:53:55.536" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 11:53:55.036" endtime="20230529 11:53:55.536"/>
</kw>
<status status="PASS" starttime="20230529 11:53:54.050" endtime="20230529 11:53:55.536"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 11:53:50.690" endtime="20230529 11:53:55.537"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 11:53:55.538" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 11:53:55.537" endtime="20230529 11:53:55.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:55.538" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7f8aaf5ba390&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 11:53:55.538" endtime="20230529 11:53:55.538"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 11:53:55.539" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 11:53:55.539" endtime="20230529 11:53:55.539"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:53:55.539" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 11:53:55.539" endtime="20230529 11:53:55.539"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:55.539" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:55.539" endtime="20230529 11:53:55.540"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.538" endtime="20230529 11:53:55.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:55.540" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:55.540" endtime="20230529 11:53:55.540"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 11:53:55.543" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 11:53:55.543" endtime="20230529 11:53:55.543"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 11:53:55.543" endtime="20230529 11:53:55.544"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 11:53:55.544" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 11:53:55.544" endtime="20230529 11:53:55.548"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 11:53:55.548" endtime="20230529 11:53:55.549"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:53:55.549" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:53:55.549" endtime="20230529 11:53:55.665"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.543" endtime="20230529 11:53:55.665"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.540" endtime="20230529 11:53:55.665"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.537" endtime="20230529 11:53:55.665"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 11:53:55.666" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 11:53:55.666" endtime="20230529 11:53:55.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 11:53:55.666" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 11:53:55.666" endtime="20230529 11:53:55.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:55.666" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 11:53:55.666" endtime="20230529 11:53:55.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:53:55.666" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 11:53:55.666" endtime="20230529 11:53:55.666"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 11:54:06.387" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 11:53:55.666" endtime="20230529 11:54:06.387"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 11:54:06.663" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:54:06.663" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 11:54:06.387" endtime="20230529 11:54:06.663"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 11:54:06.925" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 11:54:06.925" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 11:54:06.663" endtime="20230529 11:54:07.028"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 11:54:07.128" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 11:54:07.028" endtime="20230529 11:54:07.128"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:54:07.129" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:54:07.128" endtime="20230529 11:54:07.243"/>
</kw>
<status status="PASS" starttime="20230529 11:53:55.665" endtime="20230529 11:54:07.244"/>
</kw>
<kw name="Click Section">
<arg>toc</arg>
<kw name="Click Text">
<arg>${sectname}</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:54:07.244" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:54:07.244" endtime="20230529 11:54:07.362"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:07.362" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml</msg>
<status status="PASS" starttime="20230529 11:54:07.362" endtime="20230529 11:54:07.362"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230529 11:54:07.363" level="INFO">${path} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11</msg>
<msg timestamp="20230529 11:54:07.363" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230529 11:54:07.362" endtime="20230529 11:54:07.363"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230529 11:54:07.363" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:54:07.363" level="INFO">13 files:
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230529 11:54:07.364" level="INFO">@{files} = [ /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png | /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-lates...</msg>
<status status="PASS" starttime="20230529 11:54:07.363" endtime="20230529 11:54:07.364"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230529 11:54:07.364" endtime="20230529 11:54:07.364"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.364" level="INFO">Length is 13</msg>
<msg timestamp="20230529 11:54:07.364" level="INFO">${fc} = 13</msg>
<status status="PASS" starttime="20230529 11:54:07.364" endtime="20230529 11:54:07.364"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.365" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.365" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.364" endtime="20230529 11:54:07.365"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.365" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.365" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.365"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.365"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.365"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.365"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.365"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.366"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.366"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.366" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.366" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.366"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.366" endtime="20230529 11:54:07.367"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.367" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.367" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.367"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.368" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.368" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.368"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.368"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.368"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.368"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.368"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.368"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.367" endtime="20230529 11:54:07.368"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.369" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.369" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.369"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.369"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.369"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.369"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.369"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.369"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.368" endtime="20230529 11:54:07.369"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.369" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.369" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.370"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.370"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.370"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.370"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.370"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.370"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.369" endtime="20230529 11:54:07.370"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.370" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.371" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.371"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.371" endtime="20230529 11:54:07.371"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.371" endtime="20230529 11:54:07.371"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.371" endtime="20230529 11:54:07.372"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.371" endtime="20230529 11:54:07.372"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.371" endtime="20230529 11:54:07.372"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.370" endtime="20230529 11:54:07.372"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.372" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:07.372" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.372"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.372"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.372"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.372"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.372"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.373"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.372" endtime="20230529 11:54:07.373"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:07.373" level="INFO">Length is 119</msg>
<msg timestamp="20230529 11:54:07.373" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</return>
<status status="PASS" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</if>
<status status="PASS" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</iter>
<status status="PASS" starttime="20230529 11:54:07.365" endtime="20230529 11:54:07.373"/>
</while>
<status status="PASS" starttime="20230529 11:54:07.364" endtime="20230529 11:54:07.373"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:07.373" endtime="20230529 11:54:07.373"/>
</branch>
<status status="PASS" starttime="20230529 11:54:07.364" endtime="20230529 11:54:07.374"/>
</if>
<msg timestamp="20230529 11:54:07.374" level="INFO">${img} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 11:54:07.362" endtime="20230529 11:54:07.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:07.374" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png</msg>
<status status="PASS" starttime="20230529 11:54:07.374" endtime="20230529 11:54:07.374"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230529 11:54:07.393" level="INFO">${processed_img} = [[[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0   0]]

 [[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0...</msg>
<status status="PASS" starttime="20230529 11:54:07.374" endtime="20230529 11:54:07.393"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230529 11:54:09.783" level="INFO">${bounds} = (34, 122, 29, 29)</msg>
<status status="PASS" starttime="20230529 11:54:07.393" endtime="20230529 11:54:09.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:09.783" level="INFO">(34, 122, 29, 29)</msg>
<status status="PASS" starttime="20230529 11:54:09.783" endtime="20230529 11:54:09.783"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${bounds}[0]+int(${bounds}[2]/2)+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:54:09.784" level="INFO">${x} = 48</msg>
<status status="PASS" starttime="20230529 11:54:09.783" endtime="20230529 11:54:09.784"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${bounds}[1]+int(${bounds}[3]/2)+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:54:09.784" level="INFO">${y} = 136</msg>
<status status="PASS" starttime="20230529 11:54:09.784" endtime="20230529 11:54:09.784"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230529 11:54:09.784" level="INFO">@{coordinates} = [ 48 | 136 ]</msg>
<status status="PASS" starttime="20230529 11:54:09.784" endtime="20230529 11:54:09.784"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="PASS" starttime="20230529 11:54:09.784" endtime="20230529 11:54:09.886"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="PASS" starttime="20230529 11:54:09.886" endtime="20230529 11:54:09.988"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:54:09.988" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:54:09.988" endtime="20230529 11:54:10.176"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.244" endtime="20230529 11:54:10.176"/>
</kw>
<status status="PASS" starttime="20230529 11:54:07.244" endtime="20230529 11:54:10.177"/>
</kw>
<kw name="Click Text">
<arg>toc</arg>
<arg>0</arg>
<arg>-20</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 11:54:10.177" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 11:54:10.177" endtime="20230529 11:54:10.305"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:10.305" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/output.xml</msg>
<status status="PASS" starttime="20230529 11:54:10.305" endtime="20230529 11:54:10.305"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230529 11:54:10.306" level="INFO">${path} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11</msg>
<msg timestamp="20230529 11:54:10.306" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230529 11:54:10.305" endtime="20230529 11:54:10.306"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230529 11:54:10.306" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11&lt;/a&gt;'.</msg>
<msg timestamp="20230529 11:54:10.306" level="INFO">15 files:
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-10.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-11.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-12.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-13.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-14.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-2.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-3.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-4.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-5.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-6.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-7.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-8.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230529 11:54:10.306" level="INFO">@{files} = [ /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-1.png | /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-lates...</msg>
<status status="PASS" starttime="20230529 11:54:10.306" endtime="20230529 11:54:10.306"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230529 11:54:10.306" endtime="20230529 11:54:10.306"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.307" level="INFO">Length is 15</msg>
<msg timestamp="20230529 11:54:10.307" level="INFO">${fc} = 15</msg>
<status status="PASS" starttime="20230529 11:54:10.306" endtime="20230529 11:54:10.307"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.307" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.307" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.307"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.307" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.307" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.307"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.308"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.308"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.308"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.308" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.308" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.308"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.309"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.309"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.309"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.308" endtime="20230529 11:54:10.309"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.309" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.309" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.309"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.310" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.310" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.310"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.309" endtime="20230529 11:54:10.310"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.310" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.310" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.310"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.311"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.311"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.310" endtime="20230529 11:54:10.311"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.311" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.311" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.311"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.312"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.312"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.311" endtime="20230529 11:54:10.312"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.312" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.312" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.312"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.313" level="INFO">Length is 118</msg>
<msg timestamp="20230529 11:54:10.313" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.313"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</kw>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.312" endtime="20230529 11:54:10.313"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 11:54:10.313" level="INFO">Length is 119</msg>
<msg timestamp="20230529 11:54:10.313" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.313"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.314"/>
</return>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.314"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.314"/>
</kw>
<status status="NOT RUN" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.314"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.314"/>
</if>
<status status="PASS" starttime="20230529 11:54:10.313" endtime="20230529 11:54:10.314"/>
</iter>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.314"/>
</while>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.314"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.314"/>
</return>
<status status="NOT RUN" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.314"/>
</branch>
<status status="PASS" starttime="20230529 11:54:10.307" endtime="20230529 11:54:10.314"/>
</if>
<msg timestamp="20230529 11:54:10.314" level="INFO">${img} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png</msg>
<status status="PASS" starttime="20230529 11:54:10.305" endtime="20230529 11:54:10.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:10.314" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.11/Reporter.GUIBasic-screenshot-15.png</msg>
<status status="PASS" starttime="20230529 11:54:10.314" endtime="20230529 11:54:10.315"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230529 11:54:10.332" level="INFO">${processed_img} = [[[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0   0]]

 [[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0...</msg>
<status status="PASS" starttime="20230529 11:54:10.315" endtime="20230529 11:54:10.332"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230529 11:54:12.676" level="INFO">${bounds} = None</msg>
<status status="PASS" starttime="20230529 11:54:10.332" endtime="20230529 11:54:12.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 11:54:12.676" level="INFO">None</msg>
<status status="PASS" starttime="20230529 11:54:12.676" endtime="20230529 11:54:12.676"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${bounds}[0]+int(${bounds}[2]/2)+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 11:54:12.676" level="FAIL">Variable '${bounds}' is None, which is not subscriptable, and thus accessing item '0' from it is not possible. To use '[0]' as a literal value, it needs to be escaped like '\[0]'.</msg>
<status status="FAIL" starttime="20230529 11:54:12.676" endtime="20230529 11:54:12.676"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${bounds}[1]+int(${bounds}[3]/2)+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<status status="FAIL" starttime="20230529 11:54:10.177" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230529 11:54:12.677" endtime="20230529 11:54:12.677"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 11:53:55.537" endtime="20230529 11:54:12.678">Variable '${bounds}' is None, which is not subscriptable, and thus accessing item '0' from it is not possible. To use '[0]' as a literal value, it needs to be escaped like '\[0]'.</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="63">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230529 11:54:12.679" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230529 11:54:12.678" endtime="20230529 11:54:12.679"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 11:54:12.678" endtime="20230529 11:54:12.679">AssertionError</status>
</test>
<status status="FAIL" starttime="20230529 11:53:21.269" endtime="20230529 11:54:12.679"/>
</suite>
<status status="FAIL" starttime="20230529 11:53:07.760" endtime="20230529 11:54:12.680"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
