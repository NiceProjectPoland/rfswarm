<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.13 on win32)" generated="20230514 04:48:03.486" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter">
<suite id="s1-s1" name="CommandLine" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:03.518"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\stderr.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\stdout.txt"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:03.518"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-1.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-10.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-2.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-3.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-4.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-5.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-6.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-7.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-8.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230514 04:48:03.518" level="INFO" html="true">Removed file '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-9.png"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:03.518"/>
</kw>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:03.518"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230514 04:48:03.518" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230514 04:48:22.486" level="INFO">${result} = Matplotlib is building the font cache; this may take a moment.
Robot Framework Swarm: Reporter 
	Version 1.1.2 </msg>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:22.486"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230514 04:48:22.486" endtime="20230514 04:48:22.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:22.486" endtime="20230514 04:48:22.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:22.486" endtime="20230514 04:48:22.486"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:03.518" endtime="20230514 04:48:22.486"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230514 04:48:22.486" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230514 04:48:23.456" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.2 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

optional ar...</msg>
<status status="PASS" starttime="20230514 04:48:22.486" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:22.486" endtime="20230514 04:48:23.456"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:23.456"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230514 04:48:23.456" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230514 04:48:27.376" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:27.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:27.376" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230514 04:48:27.376" endtime="20230514 04:48:27.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:27.376" endtime="20230514 04:48:27.376"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:27.376" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:27.376" endtime="20230514 04:48:27.391"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:23.456" endtime="20230514 04:48:27.391"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:27.391"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230514 04:48:27.391" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230514 04:48:31.929" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:31.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:31.929" level="INFO">
</msg>
<status status="PASS" starttime="20230514 04:48:31.929" endtime="20230514 04:48:31.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:31.929" endtime="20230514 04:48:31.929"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:31.929" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:31.929" endtime="20230514 04:48:31.929"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:27.391" endtime="20230514 04:48:31.929"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:31.929" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:31.929" endtime="20230514 04:48:31.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">${basefolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">basefolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">${resultfolder} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">resultfolder: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">${template} = D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">template: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template</msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:31.945"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230514 04:48:31.945" level="INFO">Running command 'python3 D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -n -g 1 -d D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo -t D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230514 04:48:35.570" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230514 04:48:31.945" endtime="20230514 04:48:35.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:35.570" level="INFO">
</msg>
<status status="PASS" starttime="20230514 04:48:35.570" endtime="20230514 04:48:35.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:35.570" endtime="20230514 04:48:35.570"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230514 04:48:35.570" level="INFO" html="true">Path '&lt;a href="file://D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx"&gt;D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\testdata\Issue-#144\20230320_185055_demo\20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230514 04:48:35.570" endtime="20230514 04:48:35.570"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230514 04:48:31.929" endtime="20230514 04:48:35.570"/>
</test>
<status status="PASS" starttime="20230514 04:48:03.502" endtime="20230514 04:48:35.570"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="14">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230514 04:48:37.365" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:37.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:37.365" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x000001DE28D8DD00&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:37.365"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230514 04:48:37.380" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.380"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:48:37.380" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.474"/>
</kw>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.474"/>
</kw>
<status status="PASS" starttime="20230514 04:48:37.380" endtime="20230514 04:48:37.474"/>
</kw>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:37.474"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230514 04:48:37.474" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:37.474"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:37.474" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:37.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:37.474" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:37.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:37.474" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:37.474"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230514 04:48:53.856" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (213, 587)</msg>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:53.856"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230514 04:48:53.966" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=165, top=578, width=96, height=18)</msg>
<msg timestamp="20230514 04:48:53.966" level="INFO">@{coordinates} = [ 213 | 587 ]</msg>
<status status="PASS" starttime="20230514 04:48:53.856" endtime="20230514 04:48:53.966"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:48:54.091" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=165, top=578, width=96, height=18)</msg>
<msg timestamp="20230514 04:48:54.091" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (213, 587)</msg>
<status status="PASS" starttime="20230514 04:48:53.966" endtime="20230514 04:48:54.231"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:48:54.341" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230514 04:48:54.232" endtime="20230514 04:48:54.341"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:48:54.341" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:48:54.341" endtime="20230514 04:48:54.419"/>
</kw>
<status status="PASS" starttime="20230514 04:48:37.474" endtime="20230514 04:48:54.419"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:54.419" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.419"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:48:54.419" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.419"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:48:54.513" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=919, top=156, width=45, height=30)</msg>
<msg timestamp="20230514 04:48:54.513" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (941, 171)</msg>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.623"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:48:54.623" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:48:54.623" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230514 04:48:54.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230514 04:48:54.717" level="INFO">Process completed.</msg>
<msg timestamp="20230514 04:48:54.717" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:48:54.717" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:54.717" level="INFO"/>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230514 04:48:54.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</branch>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</if>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.717"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.717"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.717"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:48:54.717" endtime="20230514 04:48:54.717"/>
</branch>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:54.717"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230514 04:48:54.717" endtime="20230514 04:48:55.217"/>
</kw>
<status status="PASS" starttime="20230514 04:48:54.419" endtime="20230514 04:48:55.217"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:37.365" endtime="20230514 04:48:55.217"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="20">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': &lt;Popen: returncode: 0 args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_rep...&gt;, '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x000001DE28D8DD00&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${args} = </msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6</msg>
<msg timestamp="20230514 04:48:55.217" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.217"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:48:55.217" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.310"/>
</kw>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.310"/>
</kw>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.310"/>
</kw>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:48:55.310"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230514 04:48:55.310" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230514 04:48:55.310" endtime="20230514 04:48:55.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:48:55.310" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230514 04:48:55.310" endtime="20230514 04:48:55.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:55.310" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230514 04:48:55.310" endtime="20230514 04:48:55.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:48:55.326" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230514 04:48:55.326" endtime="20230514 04:48:55.326"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230514 04:49:07.755" level="INFO">Image "reporter_windows_status_previewloaded.png" found at (109, 483)</msg>
<status status="PASS" starttime="20230514 04:48:55.326" endtime="20230514 04:49:07.755"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230514 04:49:07.880" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=61, top=474, width=96, height=18)</msg>
<msg timestamp="20230514 04:49:07.880" level="INFO">@{coordinates} = [ 109 | 483 ]</msg>
<status status="PASS" starttime="20230514 04:49:07.755" endtime="20230514 04:49:07.880"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:49:08.005" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" found at Box(left=61, top=474, width=96, height=18)</msg>
<msg timestamp="20230514 04:49:08.005" level="INFO">Clicking image "reporter_windows_status_previewloaded.png" in position (109, 483)</msg>
<status status="PASS" starttime="20230514 04:49:07.880" endtime="20230514 04:49:08.145"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:49:08.255" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230514 04:49:08.145" endtime="20230514 04:49:08.255"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:49:08.255" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:49:08.255" endtime="20230514 04:49:08.348"/>
</kw>
<status status="PASS" starttime="20230514 04:48:55.310" endtime="20230514 04:49:08.348"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230514 04:49:08.348" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:49:08.348" level="INFO">${img} = reporter_windows_tab_preview.png</msg>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:08.348" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:08.348" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.348"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230514 04:49:08.442" level="INFO">Image "reporter_windows_tab_preview.png" found at (319, 142)</msg>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.442"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230514 04:49:08.567" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=287, top=131, width=65, height=23)</msg>
<msg timestamp="20230514 04:49:08.567" level="INFO">@{coordinates} = [ 319 | 142 ]</msg>
<status status="PASS" starttime="20230514 04:49:08.442" endtime="20230514 04:49:08.567"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:49:08.677" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_tab_preview.png" found at Box(left=287, top=131, width=65, height=23)</msg>
<msg timestamp="20230514 04:49:08.677" level="INFO">Clicking image "reporter_windows_tab_preview.png" in position (319, 142)</msg>
<status status="PASS" starttime="20230514 04:49:08.567" endtime="20230514 04:49:08.786"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:49:08.896" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230514 04:49:08.786" endtime="20230514 04:49:08.896"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:49:08.896" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:49:08.896" endtime="20230514 04:49:08.989"/>
</kw>
<status status="PASS" starttime="20230514 04:49:08.348" endtime="20230514 04:49:08.989"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:49:08.989" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:08.989"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:49:08.989" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:08.989"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:49:09.083" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=815, top=52, width=45, height=30)</msg>
<msg timestamp="20230514 04:49:09.083" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (837, 67)</msg>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.224"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:49:09.224" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.224" endtime="20230514 04:49:09.302"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230514 04:49:09.302" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230514 04:49:09.411" level="INFO">Process completed.</msg>
<msg timestamp="20230514 04:49:09.411" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.302" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:49:09.411" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:09.411" level="INFO"/>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230514 04:49:09.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</branch>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</if>
<status status="PASS" starttime="20230514 04:49:09.302" endtime="20230514 04:49:09.411"/>
</kw>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.411"/>
</kw>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.411"/>
</kw>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.411"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.411"/>
</branch>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.411"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230514 04:49:09.411" endtime="20230514 04:49:09.912"/>
</kw>
<status status="PASS" starttime="20230514 04:49:08.989" endtime="20230514 04:49:09.912"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230514 04:48:55.217" endtime="20230514 04:49:09.912"/>
</test>
<test id="s1-s2-t3" name="First Run" line="27">
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${epoch} = 1684039749</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${var} = {'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter...</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">{'${/}': '\\', '${:}': ';', '${\\n}': '\r\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': 'D:\\a\\rfswarm\\rfswarm', '${False}': False, '${IMAGE_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Images\\file_method', '${LOG_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9', '${OUTPUT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\output.xml', '${platform}': 'windows', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': &lt;Popen: returncode: 0 args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_rep...&gt;, '${pyfile}': 'D:\\a\\rfswarm\\rfswarm\\rfswarm_reporter\\rfswarm_reporter.py', '${REPORT_FILE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\Logs\\windows-latest_3.9\\report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': 'D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter\\GUI_Basic.robot', '${TEMPDIR}': 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['windows-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x000001DE28D8DD00&gt;, '@{appargs}': ['-i', 'blank_1684039749.ini'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${platform} = windows</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${keyword} = Open GUI windows</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI windows">
<arg>@{appargs}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${args}</var>
<arg>" \t".join(@{appargs})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${args} = -i 	blank_1684039749.ini</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">Starting process:
python D:\a\rfswarm\rfswarm\rfswarm_reporter\rfswarm_reporter.py -g 6 -i blank_1684039749.ini</msg>
<msg timestamp="20230514 04:49:09.912" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO">${process} = &lt;Popen: returncode: None args: ['python', 'D:\\a\\rfswarm\\rfswarm\\rfswarm_...&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.912"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:49:09.912" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.990"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.990"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.990"/>
</kw>
<status status="PASS" starttime="20230514 04:49:09.912" endtime="20230514 04:49:09.990"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230514 04:49:09.990" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230514 04:49:09.990" endtime="20230514 04:49:09.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:49:09.990" level="INFO">${img} = reporter_windows_status_previewloaded.png</msg>
<status status="PASS" starttime="20230514 04:49:09.990" endtime="20230514 04:49:09.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>D:\\a\\rfswarm\\rfswarm\\Tests\\Regression\\Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:09.990" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter</msg>
<status status="PASS" starttime="20230514 04:49:09.990" endtime="20230514 04:49:09.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:49:10.005" level="INFO">D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method</msg>
<status status="PASS" starttime="20230514 04:49:10.005" endtime="20230514 04:49:10.005"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:54:10.063" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:54:10.063" endtime="20230514 04:54:10.157"/>
</kw>
<msg timestamp="20230514 04:54:10.157" level="FAIL">ImageNotFoundException: Reference image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230514 04:49:10.005" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<status status="FAIL" starttime="20230514 04:49:09.990" endtime="20230514 04:54:10.157"/>
</kw>
<status status="FAIL" starttime="20230514 04:49:09.990" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230514 04:54:10.157" level="INFO">${keyword} = Close GUI windows</msg>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:54:10.157" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.157"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI windows">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230514 04:54:10.266" level="INFO">Image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_button_closewindow.png" found at Box(left=867, top=104, width=45, height=30)</msg>
<msg timestamp="20230514 04:54:10.266" level="INFO">Clicking image "reporter_windows_button_closewindow.png" in position (889, 119)</msg>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.407"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230514 04:54:10.407" level="INFO" html="true">Screenshot taken: D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Logs\windows-latest_3.9\Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230514 04:54:10.407" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230514 04:54:10.485" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230514 04:54:10.485" level="INFO">Process completed.</msg>
<msg timestamp="20230514 04:54:10.485" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230514 04:54:10.485" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230514 04:54:10.485" level="INFO"/>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230514 04:54:10.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</branch>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</if>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.485"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.485"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.485"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</kw>
<status status="NOT RUN" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.485"/>
</branch>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.485"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230514 04:54:10.986" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230514 04:54:10.485" endtime="20230514 04:54:10.986"/>
</kw>
<status status="PASS" starttime="20230514 04:54:10.157" endtime="20230514 04:54:10.986"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230514 04:49:09.912" endtime="20230514 04:54:10.986">ImageNotFoundException: Reference image "D:\a\rfswarm\rfswarm\Tests\Regression\Reporter\Images\file_method\reporter_windows_status_previewloaded.png" was not found on screen</status>
</test>
<status status="FAIL" starttime="20230514 04:48:35.585" endtime="20230514 04:54:10.986"/>
</suite>
<status status="FAIL" starttime="20230514 04:48:03.486" endtime="20230514 04:54:10.986"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="0" fail="1" skip="0">Issue #147</stat>
<stat pass="7" fail="1" skip="0">macos-latest</stat>
<stat pass="7" fail="1" skip="0">ubuntu-latest</stat>
<stat pass="7" fail="1" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="2" fail="1" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
