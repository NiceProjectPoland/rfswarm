<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.11 on linux)" generated="20230529 12:38:35.537" rpa="false" schemaversion="3">
<suite id="s1" name="Reporter" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 12:38:35.570" endtime="20230529 12:38:35.570"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 12:38:35.571" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/stderr.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/stderr.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.571" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/stdout.txt"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/stdout.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 12:38:35.570" endtime="20230529 12:38:35.571"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230529 12:38:35.571" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-12.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.571" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-14.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-6.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-10.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-8.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-4.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-5.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-9.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-2.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-3.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-15.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-13.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-11.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:38:35.572" level="INFO" html="true">Removed file '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-7.png"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230529 12:38:35.571" endtime="20230529 12:38:35.572"/>
</kw>
<status status="PASS" starttime="20230529 12:38:35.569" endtime="20230529 12:38:35.572"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 12:38:35.574" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 12:38:39.465" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230529 12:38:35.573" endtime="20230529 12:38:39.465"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 12:38:39.465" endtime="20230529 12:38:39.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:39.466" endtime="20230529 12:38:39.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:39.466" endtime="20230529 12:38:39.466"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:38:35.573" endtime="20230529 12:38:39.467"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 12:38:39.468" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 12:38:40.261" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230529 12:38:39.467" endtime="20230529 12:38:40.261"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 12:38:40.261" endtime="20230529 12:38:40.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:40.262" endtime="20230529 12:38:40.262"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:38:39.467" endtime="20230529 12:38:40.262"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:40.263" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:40.263" endtime="20230529 12:38:40.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:40.263" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:40.263" endtime="20230529 12:38:40.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:40.264" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:40.263" endtime="20230529 12:38:40.264"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:40.264" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:40.264" endtime="20230529 12:38:40.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:40.264" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:40.264" endtime="20230529 12:38:40.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:40.265" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:40.264" endtime="20230529 12:38:40.265"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:40.265" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:40.265" endtime="20230529 12:38:40.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:40.265" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:40.265" endtime="20230529 12:38:40.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:40.266" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:40.266" endtime="20230529 12:38:40.266"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:40.266" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:40.266" endtime="20230529 12:38:40.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:40.267" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:40.266" endtime="20230529 12:38:40.267"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 12:38:40.267" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 12:38:43.701" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 12:38:40.267" endtime="20230529 12:38:43.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:43.701" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230529 12:38:43.701" endtime="20230529 12:38:43.701"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:43.702" endtime="20230529 12:38:43.702"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:43.702" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:43.702" endtime="20230529 12:38:43.702"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:38:40.262" endtime="20230529 12:38:43.703"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:43.703" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:43.703" endtime="20230529 12:38:43.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:43.704" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:43.703" endtime="20230529 12:38:43.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:43.704" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:43.704" endtime="20230529 12:38:43.704"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:43.704" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:43.704" endtime="20230529 12:38:43.704"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 12:38:43.704" endtime="20230529 12:38:43.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:43.705" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:43.705" endtime="20230529 12:38:43.705"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:43.705" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:43.705" endtime="20230529 12:38:43.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:43.706" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:43.705" endtime="20230529 12:38:43.706"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:43.706" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:43.706" endtime="20230529 12:38:43.706"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:43.706" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:43.706" endtime="20230529 12:38:43.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:43.707" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:43.707" endtime="20230529 12:38:43.707"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 12:38:43.708" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 12:38:47.952" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 12:38:43.707" endtime="20230529 12:38:47.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:47.953" level="INFO">
</msg>
<status status="PASS" starttime="20230529 12:38:47.952" endtime="20230529 12:38:47.953"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:47.953" endtime="20230529 12:38:47.953"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:47.954" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:47.953" endtime="20230529 12:38:47.954"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:38:43.703" endtime="20230529 12:38:47.954"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:47.955" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:47.955" endtime="20230529 12:38:47.955"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:47.955" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:47.955" endtime="20230529 12:38:47.955"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:47.956" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:47.955" endtime="20230529 12:38:47.956"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:47.956" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:47.956" endtime="20230529 12:38:47.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:47.956" level="INFO">basefolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230529 12:38:47.956" endtime="20230529 12:38:47.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:47.957" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:47.956" endtime="20230529 12:38:47.957"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:47.957" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:47.957" endtime="20230529 12:38:47.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:47.957" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:38:47.957" endtime="20230529 12:38:47.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:47.958" level="INFO">${template} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:47.958" endtime="20230529 12:38:47.958"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:47.958" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:47.958" endtime="20230529 12:38:47.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:47.958" level="INFO">template: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230529 12:38:47.958" endtime="20230529 12:38:47.958"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230529 12:38:47.959" level="INFO">Running command 'python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230529 12:38:51.502" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230529 12:38:47.959" endtime="20230529 12:38:51.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:51.503" level="INFO">
</msg>
<status status="PASS" starttime="20230529 12:38:51.502" endtime="20230529 12:38:51.503"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:38:51.503" endtime="20230529 12:38:51.503"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:38:51.504" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:38:51.503" endtime="20230529 12:38:51.504"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230529 12:38:47.954" endtime="20230529 12:38:51.504"/>
</test>
<status status="PASS" starttime="20230529 12:38:35.557" endtime="20230529 12:38:51.505"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="16">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 12:38:51.793" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 12:38:51.792" endtime="20230529 12:38:51.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:51.793" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7ffabe10e050&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 12:38:51.793" endtime="20230529 12:38:51.794"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 12:38:51.794" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 12:38:51.794" endtime="20230529 12:38:51.794"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 12:38:51.795" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 12:38:51.794" endtime="20230529 12:38:51.795"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:38:51.796" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:38:51.795" endtime="20230529 12:38:51.796"/>
</kw>
<status status="PASS" starttime="20230529 12:38:51.794" endtime="20230529 12:38:51.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:51.796" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:38:51.796" endtime="20230529 12:38:51.796"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:38:51.801" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:38:51.801" endtime="20230529 12:38:51.801"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 12:38:51.801" endtime="20230529 12:38:51.801"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 12:38:51.802" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 12:38:51.801" endtime="20230529 12:38:51.807"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 12:38:51.807" endtime="20230529 12:38:51.808"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:38:51.808" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:38:51.808" endtime="20230529 12:38:51.942"/>
</kw>
<status status="PASS" starttime="20230529 12:38:51.800" endtime="20230529 12:38:51.943"/>
</kw>
<status status="PASS" starttime="20230529 12:38:51.796" endtime="20230529 12:38:51.943"/>
</kw>
<status status="PASS" starttime="20230529 12:38:51.792" endtime="20230529 12:38:51.943"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:38:51.944" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 12:38:51.943" endtime="20230529 12:38:51.944"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:38:51.944" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 12:38:51.944" endtime="20230529 12:38:51.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:51.944" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:38:51.944" endtime="20230529 12:38:51.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:38:51.945" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:38:51.944" endtime="20230529 12:38:51.945"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:03.424" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 12:38:51.945" endtime="20230529 12:39:03.425"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:03.715" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:03.716" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 12:39:03.425" endtime="20230529 12:39:03.716"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:04.007" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:04.008" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:03.716" endtime="20230529 12:39:04.111"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:04.212" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:04.111" endtime="20230529 12:39:04.212"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:04.213" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:04.212" endtime="20230529 12:39:04.341"/>
</kw>
<status status="PASS" starttime="20230529 12:38:51.943" endtime="20230529 12:39:04.341"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:04.342" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:04.342" endtime="20230529 12:39:04.342"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:04.342" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 12:39:04.342" endtime="20230529 12:39:04.342"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:04.626" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 12:39:04.626" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 12:39:04.347" endtime="20230529 12:39:04.728"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:04.729" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:04.729" endtime="20230529 12:39:04.854"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:05.354" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:04.854" endtime="20230529 12:39:05.355"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 12:39:05.356" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 12:39:05.356" level="INFO">Process completed.</msg>
<msg timestamp="20230529 12:39:05.356" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 12:39:05.355" endtime="20230529 12:39:05.356"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:05.356" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 12:39:05.356" endtime="20230529 12:39:05.356"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:05.358" level="INFO"/>
<status status="PASS" starttime="20230529 12:39:05.357" endtime="20230529 12:39:05.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:39:05.358" endtime="20230529 12:39:05.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 12:39:05.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 12:39:05.359" endtime="20230529 12:39:05.359"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.357" endtime="20230529 12:39:05.360"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.356" endtime="20230529 12:39:05.360"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 12:39:05.360" endtime="20230529 12:39:05.360"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 12:39:05.360" endtime="20230529 12:39:05.360"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:05.360" endtime="20230529 12:39:05.360"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 12:39:05.360" endtime="20230529 12:39:05.360"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:05.360" endtime="20230529 12:39:05.360"/>
</branch>
<status status="PASS" starttime="20230529 12:39:05.356" endtime="20230529 12:39:05.360"/>
</if>
<status status="PASS" starttime="20230529 12:39:05.355" endtime="20230529 12:39:05.360"/>
</kw>
<status status="PASS" starttime="20230529 12:39:04.347" endtime="20230529 12:39:05.360"/>
</kw>
<status status="PASS" starttime="20230529 12:39:04.343" endtime="20230529 12:39:05.361"/>
</kw>
<status status="PASS" starttime="20230529 12:39:04.342" endtime="20230529 12:39:05.361"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 12:39:05.361" endtime="20230529 12:39:05.361"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:05.361" endtime="20230529 12:39:05.361"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:05.361" endtime="20230529 12:39:05.361"/>
</branch>
<status status="PASS" starttime="20230529 12:39:04.342" endtime="20230529 12:39:05.361"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:05.862" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:05.361" endtime="20230529 12:39:05.862"/>
</kw>
<status status="PASS" starttime="20230529 12:39:04.341" endtime="20230529 12:39:05.862"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:38:51.791" endtime="20230529 12:39:05.862"/>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="22">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 12:39:05.864" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 12:39:05.864" endtime="20230529 12:39:05.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:05.865" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7ffabe10e050&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 12:39:05.865" endtime="20230529 12:39:05.865"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 12:39:05.866" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 12:39:05.865" endtime="20230529 12:39:05.866"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 12:39:05.866" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 12:39:05.866" endtime="20230529 12:39:05.866"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:05.867" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:05.866" endtime="20230529 12:39:05.867"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.865" endtime="20230529 12:39:05.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:05.867" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:05.867" endtime="20230529 12:39:05.867"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:05.872" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:05.872" endtime="20230529 12:39:05.872"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 12:39:05.872" endtime="20230529 12:39:05.873"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 12:39:05.873" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 12:39:05.873" endtime="20230529 12:39:05.879"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 12:39:05.879" endtime="20230529 12:39:05.880"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:05.880" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:05.880" endtime="20230529 12:39:06.003"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.872" endtime="20230529 12:39:06.003"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.867" endtime="20230529 12:39:06.003"/>
</kw>
<status status="PASS" starttime="20230529 12:39:05.863" endtime="20230529 12:39:06.003"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:06.004" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 12:39:06.004" endtime="20230529 12:39:06.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:06.004" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 12:39:06.004" endtime="20230529 12:39:06.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:06.005" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:06.004" endtime="20230529 12:39:06.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:06.005" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:06.005" endtime="20230529 12:39:06.005"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:16.684" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:06.005" endtime="20230529 12:39:16.684"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:16.969" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:16.969" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 12:39:16.684" endtime="20230529 12:39:16.969"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:17.254" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:17.254" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:16.970" endtime="20230529 12:39:17.357"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:17.458" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:17.357" endtime="20230529 12:39:17.458"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:17.459" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:17.458" endtime="20230529 12:39:17.588"/>
</kw>
<status status="PASS" starttime="20230529 12:39:06.003" endtime="20230529 12:39:17.588"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<kw name="Convert To Lower Case" library="String">
<var>${tabnamel}</var>
<arg>${tabname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:17.589" level="INFO">${tabnamel} = preview</msg>
<status status="PASS" starttime="20230529 12:39:17.589" endtime="20230529 12:39:17.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_tab_${tabnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:17.589" level="INFO">${img} = reporter_ubuntu_tab_preview.png</msg>
<status status="PASS" starttime="20230529 12:39:17.589" endtime="20230529 12:39:17.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:17.589" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:17.589" endtime="20230529 12:39:17.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:17.590" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:17.590" endtime="20230529 12:39:17.590"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:17.873" level="INFO">Image "reporter_ubuntu_tab_preview.png" found at (268, 93)</msg>
<status status="PASS" starttime="20230529 12:39:17.590" endtime="20230529 12:39:17.873"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:18.161" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 12:39:18.161" level="INFO">@{coordinates} = [ 268 | 93 ]</msg>
<status status="PASS" starttime="20230529 12:39:17.874" endtime="20230529 12:39:18.161"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:18.447" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_tab_preview.png" found at Box(left=229, top=79, width=78, height=29)</msg>
<msg timestamp="20230529 12:39:18.447" level="INFO">Clicking image "reporter_ubuntu_tab_preview.png" in position (268, 93)</msg>
<status status="PASS" starttime="20230529 12:39:18.162" endtime="20230529 12:39:18.550"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:18.651" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:18.550" endtime="20230529 12:39:18.651"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:18.652" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:18.651" endtime="20230529 12:39:18.779"/>
</kw>
<status status="PASS" starttime="20230529 12:39:17.588" endtime="20230529 12:39:18.780"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:18.781" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:18.780" endtime="20230529 12:39:18.781"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:18.781" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 12:39:18.781" endtime="20230529 12:39:18.781"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:19.066" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 12:39:19.066" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 12:39:18.786" endtime="20230529 12:39:19.169"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:19.169" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:19.169" endtime="20230529 12:39:19.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:19.797" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:19.297" endtime="20230529 12:39:19.797"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 12:39:19.798" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 12:39:19.799" level="INFO">Process completed.</msg>
<msg timestamp="20230529 12:39:19.799" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 12:39:19.798" endtime="20230529 12:39:19.799"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:19.799" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 12:39:19.799" endtime="20230529 12:39:19.799"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:19.801" level="INFO"/>
<status status="PASS" starttime="20230529 12:39:19.800" endtime="20230529 12:39:19.801"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:39:19.801" endtime="20230529 12:39:19.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 12:39:19.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 12:39:19.802" endtime="20230529 12:39:19.802"/>
</kw>
<status status="PASS" starttime="20230529 12:39:19.800" endtime="20230529 12:39:19.802"/>
</kw>
<status status="PASS" starttime="20230529 12:39:19.799" endtime="20230529 12:39:19.802"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.803"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.803"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.803"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.803"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:19.802" endtime="20230529 12:39:19.803"/>
</branch>
<status status="PASS" starttime="20230529 12:39:19.799" endtime="20230529 12:39:19.803"/>
</if>
<status status="PASS" starttime="20230529 12:39:19.798" endtime="20230529 12:39:19.803"/>
</kw>
<status status="PASS" starttime="20230529 12:39:18.785" endtime="20230529 12:39:19.803"/>
</kw>
<status status="PASS" starttime="20230529 12:39:18.781" endtime="20230529 12:39:19.803"/>
</kw>
<status status="PASS" starttime="20230529 12:39:18.781" endtime="20230529 12:39:19.803"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.804"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:19.804" endtime="20230529 12:39:19.804"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:19.803" endtime="20230529 12:39:19.804"/>
</branch>
<status status="PASS" starttime="20230529 12:39:18.781" endtime="20230529 12:39:19.804"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:20.304" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:19.804" endtime="20230529 12:39:20.304"/>
</kw>
<status status="PASS" starttime="20230529 12:39:18.780" endtime="20230529 12:39:20.305"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:39:05.863" endtime="20230529 12:39:20.305"/>
</test>
<test id="s1-s2-t3" name="First Run" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.306" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230529 12:39:20.306" endtime="20230529 12:39:20.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.307" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:39:20.306" endtime="20230529 12:39:20.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.307" level="INFO">${basefolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230529 12:39:20.307" endtime="20230529 12:39:20.307"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:39:20.307" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:39:20.307" endtime="20230529 12:39:20.307"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230529 12:39:20.308" endtime="20230529 12:39:20.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.308" level="INFO">${resultfolder} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:39:20.308" endtime="20230529 12:39:20.308"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230529 12:39:20.309" level="INFO" html="true">Path '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230529 12:39:20.308" endtime="20230529 12:39:20.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:20.309" level="INFO">resultfolder: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:39:20.309" endtime="20230529 12:39:20.309"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230529 12:39:20.309" level="INFO">${epoch} = 1685363960</msg>
<status status="PASS" starttime="20230529 12:39:20.309" endtime="20230529 12:39:20.309"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 12:39:20.310" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 12:39:20.310" endtime="20230529 12:39:20.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:20.311" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7ffabe10e050&gt;, '@{appargs}': ['-i', 'blank_1685363960.ini', '-d', '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 12:39:20.311" endtime="20230529 12:39:20.311"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 12:39:20.312" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 12:39:20.311" endtime="20230529 12:39:20.312"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 12:39:20.312" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 12:39:20.312" endtime="20230529 12:39:20.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:20.312" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:20.312" endtime="20230529 12:39:20.312"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.311" endtime="20230529 12:39:20.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.313" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:20.313" endtime="20230529 12:39:20.313"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:20.317" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:20.317" endtime="20230529 12:39:20.317"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 12:39:20.318" endtime="20230529 12:39:20.318"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 12:39:20.318" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6 -i blank_1685363960.ini -d /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230529 12:39:20.318" endtime="20230529 12:39:20.324"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 12:39:20.324" endtime="20230529 12:39:20.324"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:20.325" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:20.325" endtime="20230529 12:39:20.448"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.317" endtime="20230529 12:39:20.449"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.313" endtime="20230529 12:39:20.449"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.310" endtime="20230529 12:39:20.449"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:20.450" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 12:39:20.450" endtime="20230529 12:39:20.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:20.451" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 12:39:20.450" endtime="20230529 12:39:20.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:20.451" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:20.451" endtime="20230529 12:39:20.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:20.451" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:20.451" endtime="20230529 12:39:20.451"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:22.804" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:20.451" endtime="20230529 12:39:22.805"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:23.090" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:23.091" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 12:39:22.805" endtime="20230529 12:39:23.091"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:23.380" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:23.380" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:23.091" endtime="20230529 12:39:23.482"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:23.583" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:23.483" endtime="20230529 12:39:23.583"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:23.584" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:23.584" endtime="20230529 12:39:23.713"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.450" endtime="20230529 12:39:23.713"/>
</kw>
<status status="PASS" starttime="20230529 12:39:20.449" endtime="20230529 12:39:23.713"/>
</kw>
<kw name="Close GUI">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:23.714" level="INFO">${keyword} = Close GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:23.714" endtime="20230529 12:39:23.714"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:23.715" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230529 12:39:23.714" endtime="20230529 12:39:23.715"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI ubuntu">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:24.003" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_closewindow.png" found at Box(left=781, top=0, width=21, height=23)</msg>
<msg timestamp="20230529 12:39:24.003" level="INFO">Clicking image "reporter_ubuntu_button_closewindow.png" in position (791, 11)</msg>
<status status="PASS" starttime="20230529 12:39:23.719" endtime="20230529 12:39:24.105"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:24.106" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:24.105" endtime="20230529 12:39:24.230"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:24.731" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:24.231" endtime="20230529 12:39:24.731"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230529 12:39:24.732" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230529 12:39:24.733" level="INFO">Process completed.</msg>
<msg timestamp="20230529 12:39:24.733" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230529 12:39:24.732" endtime="20230529 12:39:24.733"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230529 12:39:24.733" level="INFO">${running} = False</msg>
<status status="PASS" starttime="20230529 12:39:24.733" endtime="20230529 12:39:24.733"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:24.735" level="INFO"/>
<status status="PASS" starttime="20230529 12:39:24.734" endtime="20230529 12:39:24.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230529 12:39:24.735" endtime="20230529 12:39:24.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230529 12:39:24.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 12:39:24.735" endtime="20230529 12:39:24.736"/>
</kw>
<status status="PASS" starttime="20230529 12:39:24.734" endtime="20230529 12:39:24.736"/>
</kw>
<status status="PASS" starttime="20230529 12:39:24.733" endtime="20230529 12:39:24.736"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 12:39:24.736" endtime="20230529 12:39:24.736"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:24.736" endtime="20230529 12:39:24.737"/>
</branch>
<status status="PASS" starttime="20230529 12:39:24.733" endtime="20230529 12:39:24.737"/>
</if>
<status status="PASS" starttime="20230529 12:39:24.732" endtime="20230529 12:39:24.737"/>
</kw>
<status status="PASS" starttime="20230529 12:39:23.719" endtime="20230529 12:39:24.737"/>
</kw>
<status status="PASS" starttime="20230529 12:39:23.715" endtime="20230529 12:39:24.737"/>
</kw>
<status status="PASS" starttime="20230529 12:39:23.715" endtime="20230529 12:39:24.737"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:24.737" endtime="20230529 12:39:24.737"/>
</branch>
<status status="PASS" starttime="20230529 12:39:23.715" endtime="20230529 12:39:24.737"/>
</if>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:25.238" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:24.738" endtime="20230529 12:39:25.238"/>
</kw>
<status status="PASS" starttime="20230529 12:39:23.714" endtime="20230529 12:39:25.238"/>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230529 12:39:20.305" endtime="20230529 12:39:25.239"/>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="45">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230529 12:39:25.241" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regre...</msg>
<status status="PASS" starttime="20230529 12:39:25.240" endtime="20230529 12:39:25.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:25.241" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/home/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10', '${OUTPUT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/output.xml', '${platform}': 'ubuntu', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/report.html', '${SPACE}': ' ', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/tmp', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['ubuntu-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': &lt;robot.utils.normalizing.NormalizedDict object at 0x7ffabe10e050&gt;, '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230529 12:39:25.241" endtime="20230529 12:39:25.242"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 12:39:25.242" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230529 12:39:25.242" endtime="20230529 12:39:25.242"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 12:39:25.243" level="INFO">${os} = Linux</msg>
<status status="PASS" starttime="20230529 12:39:25.242" endtime="20230529 12:39:25.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:25.243" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:25.243" endtime="20230529 12:39:25.243"/>
</kw>
<status status="PASS" starttime="20230529 12:39:25.242" endtime="20230529 12:39:25.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:25.244" level="INFO">${keyword} = Open GUI ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:25.244" endtime="20230529 12:39:25.244"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI ubuntu">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>ubuntu</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 12:39:25.248" level="INFO">${platform} = ubuntu</msg>
<status status="PASS" starttime="20230529 12:39:25.248" endtime="20230529 12:39:25.248"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230529 12:39:25.249" endtime="20230529 12:39:25.249"/>
</kw>
<kw name="Start Process" library="Process">
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>6</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230529 12:39:25.249" level="INFO">Starting process:
python3 /home/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 6</msg>
<status status="PASS" starttime="20230529 12:39:25.249" endtime="20230529 12:39:25.255"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230529 12:39:25.255" endtime="20230529 12:39:25.256"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:25.256" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:25.256" endtime="20230529 12:39:25.387"/>
</kw>
<status status="PASS" starttime="20230529 12:39:25.248" endtime="20230529 12:39:25.387"/>
</kw>
<status status="PASS" starttime="20230529 12:39:25.244" endtime="20230529 12:39:25.387"/>
</kw>
<status status="PASS" starttime="20230529 12:39:25.240" endtime="20230529 12:39:25.388"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:25.389" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230529 12:39:25.388" endtime="20230529 12:39:25.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:25.389" level="INFO">${img} = reporter_ubuntu_status_previewloaded.png</msg>
<status status="PASS" starttime="20230529 12:39:25.389" endtime="20230529 12:39:25.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:25.389" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:25.389" endtime="20230529 12:39:25.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:25.390" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:25.389" endtime="20230529 12:39:25.390"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:36.039" level="INFO">Image "reporter_ubuntu_status_previewloaded.png" found at (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:25.390" endtime="20230529 12:39:36.039"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:36.330" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:36.330" level="INFO">@{coordinates} = [ 59 | 435 ]</msg>
<status status="PASS" starttime="20230529 12:39:36.039" endtime="20230529 12:39:36.330"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:36.618" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_status_previewloaded.png" found at Box(left=1, top=425, width=116, height=20)</msg>
<msg timestamp="20230529 12:39:36.618" level="INFO">Clicking image "reporter_ubuntu_status_previewloaded.png" in position (59, 435)</msg>
<status status="PASS" starttime="20230529 12:39:36.330" endtime="20230529 12:39:36.720"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:36.821" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:36.721" endtime="20230529 12:39:36.821"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:36.822" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:36.822" endtime="20230529 12:39:36.950"/>
</kw>
<status status="PASS" starttime="20230529 12:39:25.388" endtime="20230529 12:39:36.951"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_removesection.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230529 12:39:37.233" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_removesection.png" found at Box(left=29, top=82, width=25, height=28)</msg>
<msg timestamp="20230529 12:39:37.233" level="INFO">Clicking 1 time(s) at (41, 116) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230529 12:39:36.951" endtime="20230529 12:39:37.336"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:37.337" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:37.336" endtime="20230529 12:39:37.521"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:37.522" level="INFO">${bttnnamel} = addsection</msg>
<status status="PASS" starttime="20230529 12:39:37.522" endtime="20230529 12:39:37.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:37.522" level="INFO">${img} = reporter_ubuntu_button_addsection.png</msg>
<status status="PASS" starttime="20230529 12:39:37.522" endtime="20230529 12:39:37.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:37.523" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:37.522" endtime="20230529 12:39:37.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:37.523" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:37.523" endtime="20230529 12:39:37.523"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:37.816" level="INFO">Image "reporter_ubuntu_button_addsection.png" found at (14, 96)</msg>
<status status="PASS" starttime="20230529 12:39:37.523" endtime="20230529 12:39:37.816"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:38.106" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230529 12:39:38.106" level="INFO">@{coordinates} = [ 14 | 96 ]</msg>
<status status="PASS" starttime="20230529 12:39:37.816" endtime="20230529 12:39:38.106"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:38.404" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_addsection.png" found at Box(left=2, top=82, width=24, height=28)</msg>
<msg timestamp="20230529 12:39:38.404" level="INFO">Clicking image "reporter_ubuntu_button_addsection.png" in position (14, 96)</msg>
<status status="PASS" starttime="20230529 12:39:38.107" endtime="20230529 12:39:38.507"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:38.608" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:38.507" endtime="20230529 12:39:38.608"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:38.609" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:38.608" endtime="20230529 12:39:38.738"/>
</kw>
<status status="PASS" starttime="20230529 12:39:37.521" endtime="20230529 12:39:38.738"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<msg timestamp="20230529 12:39:39.033" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_label_sectionname.png" found at Box(left=864, top=518, width=112, height=21)</msg>
<msg timestamp="20230529 12:39:39.034" level="INFO">Clicking 1 time(s) at (920, 548) with left mouse button at interval 0.000000</msg>
<status status="PASS" starttime="20230529 12:39:38.738" endtime="20230529 12:39:39.136"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #147</arg>
<doc>Type text and keyboard keys.</doc>
<status status="PASS" starttime="20230529 12:39:39.136" endtime="20230529 12:39:39.246"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<kw name="Convert To Lower Case" library="String">
<var>${bttnnamel}</var>
<arg>${bttnname}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230529 12:39:39.247" level="INFO">${bttnnamel} = ok</msg>
<status status="PASS" starttime="20230529 12:39:39.247" endtime="20230529 12:39:39.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_button_${bttnnamel}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 12:39:39.248" level="INFO">${img} = reporter_ubuntu_button_ok.png</msg>
<status status="PASS" starttime="20230529 12:39:39.247" endtime="20230529 12:39:39.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:39.248" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230529 12:39:39.248" endtime="20230529 12:39:39.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:39.248" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230529 12:39:39.248" endtime="20230529 12:39:39.248"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=300</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<msg timestamp="20230529 12:39:39.530" level="INFO">Image "reporter_ubuntu_button_ok.png" found at (896, 589)</msg>
<status status="PASS" starttime="20230529 12:39:39.248" endtime="20230529 12:39:39.531"/>
</kw>
<kw name="Locate" library="ImageHorizonLibrary">
<var>@{coordinates}</var>
<arg>${img}</arg>
<doc>Locate image on screen.</doc>
<msg timestamp="20230529 12:39:39.812" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230529 12:39:39.812" level="INFO">@{coordinates} = [ 896 | 589 ]</msg>
<status status="PASS" starttime="20230529 12:39:39.531" endtime="20230529 12:39:39.812"/>
</kw>
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>${img}</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230529 12:39:40.096" level="INFO">Image "/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_ubuntu_button_ok.png" found at Box(left=878, top=574, width=37, height=31)</msg>
<msg timestamp="20230529 12:39:40.096" level="INFO">Clicking image "reporter_ubuntu_button_ok.png" in position (896, 589)</msg>
<status status="PASS" starttime="20230529 12:39:39.812" endtime="20230529 12:39:40.199"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230529 12:39:40.299" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20230529 12:39:40.199" endtime="20230529 12:39:40.300"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:40.300" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:40.300" endtime="20230529 12:39:40.428"/>
</kw>
<status status="PASS" starttime="20230529 12:39:39.246" endtime="20230529 12:39:40.428"/>
</kw>
<kw name="Click Section">
<arg>Issue #147</arg>
<kw name="Click Text">
<arg>${sectname}</arg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230529 12:39:40.429" level="INFO" html="true">Screenshot taken: /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230529 12:39:40.429" endtime="20230529 12:39:40.556"/>
</kw>
<kw name="Get Last Screenshot">
<var>${img}</var>
<kw name="Log" library="BuiltIn">
<arg>${OUTPUT FILE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:40.557" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/output.xml</msg>
<status status="PASS" starttime="20230529 12:39:40.556" endtime="20230529 12:39:40.557"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${file}</var>
<arg>${OUTPUT FILE}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20230529 12:39:40.557" level="INFO">${path} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10</msg>
<msg timestamp="20230529 12:39:40.557" level="INFO">${file} = output.xml</msg>
<status status="PASS" starttime="20230529 12:39:40.557" endtime="20230529 12:39:40.557"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${path}</arg>
<arg>*.png</arg>
<arg>absolute</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20230529 12:39:40.557" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10"&gt;/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10&lt;/a&gt;'.</msg>
<msg timestamp="20230529 12:39:40.558" level="INFO">16 files:
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-10.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-11.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-12.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-13.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-14.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-15.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-16.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-2.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-3.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-4.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-5.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-6.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-7.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-8.png
/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-9.png</msg>
<msg timestamp="20230529 12:39:40.558" level="INFO">@{files} = [ /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-1.png | /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-lates...</msg>
<status status="PASS" starttime="20230529 12:39:40.557" endtime="20230529 12:39:40.558"/>
</kw>
<kw name="Sort List" library="Collections">
<arg>${files}</arg>
<doc>Sorts the given list in place.</doc>
<status status="PASS" starttime="20230529 12:39:40.558" endtime="20230529 12:39:40.558"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${fc}</var>
<arg>${files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.558" level="INFO">Length is 16</msg>
<msg timestamp="20230529 12:39:40.559" level="INFO">${fc} = 16</msg>
<status status="PASS" starttime="20230529 12:39:40.558" endtime="20230529 12:39:40.559"/>
</kw>
<if>
<branch type="IF" condition="${fc} &gt; 9">
<kw name="Get Length" library="BuiltIn">
<var>${len0}</var>
<arg>${files}[0]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.559" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.559" level="INFO">${len0} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.559"/>
</kw>
<while condition="True" limit="10">
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.560" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.560" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.560"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.560" endtime="20230529 12:39:40.560"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.560" endtime="20230529 12:39:40.560"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.560" endtime="20230529 12:39:40.560"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.560" endtime="20230529 12:39:40.560"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.560" endtime="20230529 12:39:40.560"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.560"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.561" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.561" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.561"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.561"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.561"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.561"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.562"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.562"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.561" endtime="20230529 12:39:40.562"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.562" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.562" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.562"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.562"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.562"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.563"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.563"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.563"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.562" endtime="20230529 12:39:40.563"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.563" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.563" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.563"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.563"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.563"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.564" endtime="20230529 12:39:40.564"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.564"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.564"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.563" endtime="20230529 12:39:40.564"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.564" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.564" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.564" endtime="20230529 12:39:40.564"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.565"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.564" endtime="20230529 12:39:40.565"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.565"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.565"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.564" endtime="20230529 12:39:40.565"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.564" endtime="20230529 12:39:40.565"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.565" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.565" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.565"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.566"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.566"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.566"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.566"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.566"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.565" endtime="20230529 12:39:40.566"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.566" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.566" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.566"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.567"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.567"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.567"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.567"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.567"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.566" endtime="20230529 12:39:40.567"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.567" level="INFO">Length is 118</msg>
<msg timestamp="20230529 12:39:40.568" level="INFO">${lenlast} = 118</msg>
<status status="PASS" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.568"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.568"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.568"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.568"/>
</kw>
<status status="PASS" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.568"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.568"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.567" endtime="20230529 12:39:40.568"/>
</iter>
<iter>
<kw name="Get Length" library="BuiltIn">
<var>${lenlast}</var>
<arg>${files}[-1]</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230529 12:39:40.568" level="INFO">Length is 119</msg>
<msg timestamp="20230529 12:39:40.569" level="INFO">${lenlast} = 119</msg>
<status status="PASS" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.569"/>
</kw>
<if>
<branch type="IF" condition="${lenlast} &gt; ${len0}">
<return>
<value>${files}[-1]</value>
<status status="PASS" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</return>
<status status="PASS" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</branch>
<branch type="ELSE">
<kw name="Remove From List" library="Collections">
<arg>${files}</arg>
<arg>-1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</kw>
<status status="NOT RUN" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</if>
<status status="PASS" starttime="20230529 12:39:40.568" endtime="20230529 12:39:40.569"/>
</iter>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.569"/>
</while>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.569"/>
</branch>
<branch type="ELSE">
<return>
<value>${files}[-1]</value>
<status status="NOT RUN" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</return>
<status status="NOT RUN" starttime="20230529 12:39:40.569" endtime="20230529 12:39:40.569"/>
</branch>
<status status="PASS" starttime="20230529 12:39:40.559" endtime="20230529 12:39:40.569"/>
</if>
<msg timestamp="20230529 12:39:40.570" level="INFO">${img} = /home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-16.png</msg>
<status status="PASS" starttime="20230529 12:39:40.556" endtime="20230529 12:39:40.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${img}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:40.570" level="INFO">/home/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/ubuntu-latest_3.10/Reporter.GUIBasic-screenshot-16.png</msg>
<status status="PASS" starttime="20230529 12:39:40.570" endtime="20230529 12:39:40.570"/>
</kw>
<kw name="Read Image" library="OCRLibrary">
<var>${processed_img}</var>
<arg>${img}</arg>
<doc>Reads an image.</doc>
<msg timestamp="20230529 12:39:40.587" level="INFO">${processed_img} = [[[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0   0]]

 [[  0   0   0]
  [  0   0   0]
  [  0   0   0]
  ...
  [  0   0   0]
  [  0   0   0]
  [  0   0...</msg>
<status status="PASS" starttime="20230529 12:39:40.570" endtime="20230529 12:39:40.587"/>
</kw>
<kw name="Locate Text Bounds" library="OCRLibrary">
<var>${bounds}</var>
<arg>${processed_img}</arg>
<arg>${mytext}</arg>
<doc>Locates the bounds found around the provided text. This keyword gets the first occurrance of the text.
Use ``Locate Multiple Text Bounds`` if there is more than one occurrance of the text.
A tuple of the bounds is returned. Returns None if nothing is found.</doc>
<msg timestamp="20230529 12:39:42.689" level="INFO">${bounds} = None</msg>
<status status="PASS" starttime="20230529 12:39:40.588" endtime="20230529 12:39:42.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bounds}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230529 12:39:42.689" level="INFO">None</msg>
<status status="PASS" starttime="20230529 12:39:42.689" endtime="20230529 12:39:42.689"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>${bounds}[0]+int(${bounds}[2]/2)+${offsetx}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230529 12:39:42.690" level="FAIL">Variable '${bounds}' is None, which is not subscriptable, and thus accessing item '0' from it is not possible. To use '[0]' as a literal value, it needs to be escaped like '\[0]'.</msg>
<status status="FAIL" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${y}</var>
<arg>${bounds}[1]+int(${bounds}[3]/2)+${offsety}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{coordinates}</var>
<arg>${x}</arg>
<arg>${y}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<kw name="Move To" library="ImageHorizonLibrary">
<arg>${coordinates}</arg>
<doc>Moves the mouse pointer to an absolute coordinates.</doc>
<status status="NOT RUN" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<kw name="Click" library="ImageHorizonLibrary">
<doc>Clicks with the specified mouse button.</doc>
<status status="NOT RUN" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230529 12:39:42.690" endtime="20230529 12:39:42.690"/>
</kw>
<status status="FAIL" starttime="20230529 12:39:40.429" endtime="20230529 12:39:42.691"/>
</kw>
<status status="FAIL" starttime="20230529 12:39:40.428" endtime="20230529 12:39:42.691"/>
</kw>
<kw name="Close GUI">
<status status="NOT RUN" starttime="20230529 12:39:42.691" endtime="20230529 12:39:42.691"/>
</kw>
<tag>Issue #149</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 12:39:25.239" endtime="20230529 12:39:42.691">Variable '${bounds}' is None, which is not subscriptable, and thus accessing item '0' from it is not possible. To use '[0]' as a literal value, it needs to be escaped like '\[0]'.</status>
</test>
<test id="s1-s2-t5" name="Intentional Fail" line="67">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230529 12:39:42.693" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230529 12:39:42.693" endtime="20230529 12:39:42.693"/>
</kw>
<doc>Uncomment this test if you want to trigger updating Screenshots in the git repo
Ensure this is commented out before release or pull request</doc>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230529 12:39:42.692" endtime="20230529 12:39:42.693">AssertionError</status>
</test>
<status status="FAIL" starttime="20230529 12:38:51.506" endtime="20230529 12:39:42.695"/>
</suite>
<status status="FAIL" starttime="20230529 12:38:35.538" endtime="20230529 12:39:42.697"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="1" fail="0" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="8" fail="2" skip="0">macos-latest</stat>
<stat pass="8" fail="2" skip="0">ubuntu-latest</stat>
<stat pass="8" fail="2" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
